/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 938846.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 4.0], [64.5, 4.0], [64.6, 4.0], [64.7, 4.0], [64.8, 4.0], [64.9, 4.0], [65.0, 4.0], [65.1, 4.0], [65.2, 4.0], [65.3, 4.0], [65.4, 4.0], [65.5, 4.0], [65.6, 4.0], [65.7, 4.0], [65.8, 4.0], [65.9, 4.0], [66.0, 4.0], [66.1, 4.0], [66.2, 4.0], [66.3, 4.0], [66.4, 4.0], [66.5, 4.0], [66.6, 4.0], [66.7, 4.0], [66.8, 4.0], [66.9, 4.0], [67.0, 4.0], [67.1, 4.0], [67.2, 4.0], [67.3, 4.0], [67.4, 4.0], [67.5, 4.0], [67.6, 4.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 4.0], [68.2, 4.0], [68.3, 4.0], [68.4, 4.0], [68.5, 4.0], [68.6, 4.0], [68.7, 4.0], [68.8, 4.0], [68.9, 4.0], [69.0, 4.0], [69.1, 4.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 4.0], [69.8, 4.0], [69.9, 4.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 5.0], [73.3, 5.0], [73.4, 5.0], [73.5, 5.0], [73.6, 5.0], [73.7, 5.0], [73.8, 5.0], [73.9, 5.0], [74.0, 5.0], [74.1, 5.0], [74.2, 5.0], [74.3, 5.0], [74.4, 5.0], [74.5, 5.0], [74.6, 5.0], [74.7, 5.0], [74.8, 5.0], [74.9, 5.0], [75.0, 5.0], [75.1, 5.0], [75.2, 5.0], [75.3, 5.0], [75.4, 5.0], [75.5, 5.0], [75.6, 5.0], [75.7, 5.0], [75.8, 5.0], [75.9, 5.0], [76.0, 5.0], [76.1, 5.0], [76.2, 5.0], [76.3, 5.0], [76.4, 5.0], [76.5, 5.0], [76.6, 5.0], [76.7, 5.0], [76.8, 5.0], [76.9, 5.0], [77.0, 6.0], [77.1, 6.0], [77.2, 6.0], [77.3, 6.0], [77.4, 6.0], [77.5, 6.0], [77.6, 6.0], [77.7, 6.0], [77.8, 6.0], [77.9, 6.0], [78.0, 6.0], [78.1, 6.0], [78.2, 6.0], [78.3, 6.0], [78.4, 6.0], [78.5, 6.0], [78.6, 6.0], [78.7, 6.0], [78.8, 6.0], [78.9, 6.0], [79.0, 7.0], [79.1, 7.0], [79.2, 7.0], [79.3, 7.0], [79.4, 7.0], [79.5, 7.0], [79.6, 7.0], [79.7, 7.0], [79.8, 7.0], [79.9, 7.0], [80.0, 7.0], [80.1, 7.0], [80.2, 7.0], [80.3, 7.0], [80.4, 7.0], [80.5, 8.0], [80.6, 8.0], [80.7, 8.0], [80.8, 8.0], [80.9, 8.0], [81.0, 8.0], [81.1, 8.0], [81.2, 8.0], [81.3, 8.0], [81.4, 8.0], [81.5, 8.0], [81.6, 8.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 11.0], [83.5, 11.0], [83.6, 11.0], [83.7, 11.0], [83.8, 11.0], [83.9, 11.0], [84.0, 11.0], [84.1, 12.0], [84.2, 12.0], [84.3, 12.0], [84.4, 12.0], [84.5, 12.0], [84.6, 12.0], [84.7, 12.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 14.0], [85.4, 14.0], [85.5, 14.0], [85.6, 14.0], [85.7, 14.0], [85.8, 14.0], [85.9, 15.0], [86.0, 15.0], [86.1, 15.0], [86.2, 15.0], [86.3, 15.0], [86.4, 16.0], [86.5, 16.0], [86.6, 16.0], [86.7, 16.0], [86.8, 16.0], [86.9, 17.0], [87.0, 17.0], [87.1, 17.0], [87.2, 17.0], [87.3, 17.0], [87.4, 18.0], [87.5, 18.0], [87.6, 18.0], [87.7, 18.0], [87.8, 19.0], [87.9, 19.0], [88.0, 19.0], [88.1, 19.0], [88.2, 20.0], [88.3, 20.0], [88.4, 20.0], [88.5, 20.0], [88.6, 21.0], [88.7, 21.0], [88.8, 21.0], [88.9, 21.0], [89.0, 22.0], [89.1, 22.0], [89.2, 22.0], [89.3, 22.0], [89.4, 23.0], [89.5, 23.0], [89.6, 23.0], [89.7, 24.0], [89.8, 24.0], [89.9, 24.0], [90.0, 25.0], [90.1, 25.0], [90.2, 25.0], [90.3, 26.0], [90.4, 26.0], [90.5, 26.0], [90.6, 26.0], [90.7, 27.0], [90.8, 27.0], [90.9, 27.0], [91.0, 28.0], [91.1, 28.0], [91.2, 28.0], [91.3, 29.0], [91.4, 29.0], [91.5, 29.0], [91.6, 30.0], [91.7, 30.0], [91.8, 30.0], [91.9, 31.0], [92.0, 31.0], [92.1, 31.0], [92.2, 32.0], [92.3, 32.0], [92.4, 32.0], [92.5, 33.0], [92.6, 33.0], [92.7, 33.0], [92.8, 34.0], [92.9, 34.0], [93.0, 34.0], [93.1, 35.0], [93.2, 35.0], [93.3, 36.0], [93.4, 36.0], [93.5, 36.0], [93.6, 37.0], [93.7, 37.0], [93.8, 37.0], [93.9, 38.0], [94.0, 38.0], [94.1, 38.0], [94.2, 39.0], [94.3, 39.0], [94.4, 40.0], [94.5, 40.0], [94.6, 41.0], [94.7, 41.0], [94.8, 42.0], [94.9, 42.0], [95.0, 43.0], [95.1, 44.0], [95.2, 44.0], [95.3, 45.0], [95.4, 45.0], [95.5, 46.0], [95.6, 46.0], [95.7, 47.0], [95.8, 48.0], [95.9, 48.0], [96.0, 49.0], [96.1, 50.0], [96.2, 51.0], [96.3, 51.0], [96.4, 52.0], [96.5, 53.0], [96.6, 54.0], [96.7, 54.0], [96.8, 55.0], [96.9, 56.0], [97.0, 57.0], [97.1, 58.0], [97.2, 58.0], [97.3, 59.0], [97.4, 60.0], [97.5, 61.0], [97.6, 62.0], [97.7, 63.0], [97.8, 64.0], [97.9, 65.0], [98.0, 66.0], [98.1, 67.0], [98.2, 68.0], [98.3, 70.0], [98.4, 71.0], [98.5, 73.0], [98.6, 75.0], [98.7, 77.0], [98.8, 79.0], [98.9, 82.0], [99.0, 85.0], [99.1, 88.0], [99.2, 91.0], [99.3, 96.0], [99.4, 102.0], [99.5, 107.0], [99.6, 113.0], [99.7, 122.0], [99.8, 142.0], [99.9, 212.0], [100.0, 938846.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 8.0], [66.2, 8.0], [66.3, 8.0], [66.4, 8.0], [66.5, 8.0], [66.6, 8.0], [66.7, 8.0], [66.8, 8.0], [66.9, 8.0], [67.0, 8.0], [67.1, 8.0], [67.2, 8.0], [67.3, 8.0], [67.4, 8.0], [67.5, 8.0], [67.6, 8.0], [67.7, 8.0], [67.8, 8.0], [67.9, 8.0], [68.0, 8.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 9.0], [68.7, 9.0], [68.8, 9.0], [68.9, 9.0], [69.0, 9.0], [69.1, 9.0], [69.2, 9.0], [69.3, 9.0], [69.4, 9.0], [69.5, 9.0], [69.6, 9.0], [69.7, 9.0], [69.8, 9.0], [69.9, 9.0], [70.0, 9.0], [70.1, 9.0], [70.2, 9.0], [70.3, 9.0], [70.4, 9.0], [70.5, 10.0], [70.6, 10.0], [70.7, 10.0], [70.8, 10.0], [70.9, 10.0], [71.0, 10.0], [71.1, 10.0], [71.2, 10.0], [71.3, 10.0], [71.4, 10.0], [71.5, 10.0], [71.6, 10.0], [71.7, 10.0], [71.8, 10.0], [71.9, 10.0], [72.0, 11.0], [72.1, 11.0], [72.2, 11.0], [72.3, 11.0], [72.4, 11.0], [72.5, 11.0], [72.6, 11.0], [72.7, 11.0], [72.8, 11.0], [72.9, 11.0], [73.0, 11.0], [73.1, 11.0], [73.2, 11.0], [73.3, 12.0], [73.4, 12.0], [73.5, 12.0], [73.6, 12.0], [73.7, 12.0], [73.8, 12.0], [73.9, 12.0], [74.0, 12.0], [74.1, 12.0], [74.2, 12.0], [74.3, 13.0], [74.4, 13.0], [74.5, 13.0], [74.6, 13.0], [74.7, 13.0], [74.8, 13.0], [74.9, 13.0], [75.0, 13.0], [75.1, 14.0], [75.2, 14.0], [75.3, 14.0], [75.4, 14.0], [75.5, 14.0], [75.6, 14.0], [75.7, 14.0], [75.8, 15.0], [75.9, 15.0], [76.0, 15.0], [76.1, 15.0], [76.2, 15.0], [76.3, 15.0], [76.4, 16.0], [76.5, 16.0], [76.6, 16.0], [76.7, 16.0], [76.8, 16.0], [76.9, 17.0], [77.0, 17.0], [77.1, 17.0], [77.2, 17.0], [77.3, 17.0], [77.4, 18.0], [77.5, 18.0], [77.6, 18.0], [77.7, 18.0], [77.8, 19.0], [77.9, 19.0], [78.0, 19.0], [78.1, 19.0], [78.2, 20.0], [78.3, 20.0], [78.4, 20.0], [78.5, 21.0], [78.6, 21.0], [78.7, 21.0], [78.8, 21.0], [78.9, 22.0], [79.0, 22.0], [79.1, 22.0], [79.2, 23.0], [79.3, 23.0], [79.4, 24.0], [79.5, 24.0], [79.6, 24.0], [79.7, 25.0], [79.8, 25.0], [79.9, 26.0], [80.0, 26.0], [80.1, 27.0], [80.2, 27.0], [80.3, 27.0], [80.4, 28.0], [80.5, 28.0], [80.6, 29.0], [80.7, 29.0], [80.8, 30.0], [80.9, 30.0], [81.0, 31.0], [81.1, 31.0], [81.2, 31.0], [81.3, 32.0], [81.4, 33.0], [81.5, 33.0], [81.6, 34.0], [81.7, 34.0], [81.8, 35.0], [81.9, 35.0], [82.0, 36.0], [82.1, 36.0], [82.2, 37.0], [82.3, 38.0], [82.4, 38.0], [82.5, 39.0], [82.6, 40.0], [82.7, 40.0], [82.8, 41.0], [82.9, 42.0], [83.0, 43.0], [83.1, 43.0], [83.2, 44.0], [83.3, 45.0], [83.4, 46.0], [83.5, 46.0], [83.6, 47.0], [83.7, 48.0], [83.8, 49.0], [83.9, 49.0], [84.0, 50.0], [84.1, 51.0], [84.2, 52.0], [84.3, 52.0], [84.4, 53.0], [84.5, 54.0], [84.6, 55.0], [84.7, 56.0], [84.8, 56.0], [84.9, 57.0], [85.0, 58.0], [85.1, 59.0], [85.2, 60.0], [85.3, 60.0], [85.4, 61.0], [85.5, 62.0], [85.6, 63.0], [85.7, 63.0], [85.8, 64.0], [85.9, 65.0], [86.0, 66.0], [86.1, 66.0], [86.2, 67.0], [86.3, 68.0], [86.4, 68.0], [86.5, 69.0], [86.6, 70.0], [86.7, 71.0], [86.8, 71.0], [86.9, 72.0], [87.0, 73.0], [87.1, 73.0], [87.2, 74.0], [87.3, 75.0], [87.4, 76.0], [87.5, 76.0], [87.6, 77.0], [87.7, 78.0], [87.8, 78.0], [87.9, 79.0], [88.0, 80.0], [88.1, 81.0], [88.2, 81.0], [88.3, 82.0], [88.4, 83.0], [88.5, 83.0], [88.6, 84.0], [88.7, 85.0], [88.8, 86.0], [88.9, 86.0], [89.0, 87.0], [89.1, 87.0], [89.2, 88.0], [89.3, 89.0], [89.4, 89.0], [89.5, 90.0], [89.6, 91.0], [89.7, 91.0], [89.8, 92.0], [89.9, 93.0], [90.0, 93.0], [90.1, 94.0], [90.2, 95.0], [90.3, 95.0], [90.4, 96.0], [90.5, 97.0], [90.6, 98.0], [90.7, 99.0], [90.8, 99.0], [90.9, 100.0], [91.0, 101.0], [91.1, 101.0], [91.2, 102.0], [91.3, 103.0], [91.4, 103.0], [91.5, 104.0], [91.6, 105.0], [91.7, 105.0], [91.8, 106.0], [91.9, 107.0], [92.0, 108.0], [92.1, 108.0], [92.2, 109.0], [92.3, 110.0], [92.4, 111.0], [92.5, 111.0], [92.6, 112.0], [92.7, 113.0], [92.8, 114.0], [92.9, 114.0], [93.0, 115.0], [93.1, 116.0], [93.2, 117.0], [93.3, 118.0], [93.4, 119.0], [93.5, 120.0], [93.6, 120.0], [93.7, 121.0], [93.8, 122.0], [93.9, 123.0], [94.0, 124.0], [94.1, 125.0], [94.2, 125.0], [94.3, 126.0], [94.4, 127.0], [94.5, 128.0], [94.6, 129.0], [94.7, 130.0], [94.8, 130.0], [94.9, 131.0], [95.0, 132.0], [95.1, 133.0], [95.2, 134.0], [95.3, 135.0], [95.4, 136.0], [95.5, 136.0], [95.6, 137.0], [95.7, 139.0], [95.8, 140.0], [95.9, 140.0], [96.0, 141.0], [96.1, 143.0], [96.2, 144.0], [96.3, 145.0], [96.4, 146.0], [96.5, 147.0], [96.6, 148.0], [96.7, 150.0], [96.8, 151.0], [96.9, 152.0], [97.0, 153.0], [97.1, 155.0], [97.2, 156.0], [97.3, 157.0], [97.4, 159.0], [97.5, 161.0], [97.6, 162.0], [97.7, 164.0], [97.8, 165.0], [97.9, 167.0], [98.0, 169.0], [98.1, 171.0], [98.2, 174.0], [98.3, 176.0], [98.4, 178.0], [98.5, 180.0], [98.6, 183.0], [98.7, 185.0], [98.8, 189.0], [98.9, 191.0], [99.0, 195.0], [99.1, 199.0], [99.2, 204.0], [99.3, 209.0], [99.4, 215.0], [99.5, 220.0], [99.6, 227.0], [99.7, 234.0], [99.8, 247.0], [99.9, 261.0], [100.0, 2058.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 367265.0, "series": [{"data": [[0.0, 367265.0], [1200.0, 2.0], [300.0, 3.0], [100.0, 1891.0], [200.0, 205.0], [938800.0, 1.0], [1000.0, 291.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 335745.0], [300.0, 38.0], [200.0, 3234.0], [100.0, 30598.0], [1000.0, 8.0], [2000.0, 1.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 938800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 738979.0, "series": [{"data": [[0.0, 738979.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 301.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 47.14130434782607, "minX": 1.5983976E12, "maxY": 300.0, "series": [{"data": [[1.5983988E12, 210.0], [1.59839958E12, 270.0], [1.5983982E12, 180.0], [1.59840018E12, 300.0], [1.5984006E12, 300.0], [1.59839778E12, 180.0], [1.59839898E12, 240.0], [1.59839802E12, 180.0], [1.59840036E12, 300.0], [1.5983976E12, 47.14130434782607], [1.59839916E12, 240.0], [1.59839862E12, 210.0], [1.59839976E12, 270.0], [1.59840054E12, 300.0], [1.59839784E12, 180.0], [1.59839886E12, 219.57811303415517], [1.59839952E12, 268.23643845866144], [1.59839934E12, 240.0], [1.59839844E12, 210.0], [1.59839994E12, 270.0], [1.5983991E12, 240.0], [1.59839868E12, 210.0], [1.5983997E12, 270.0], [1.59839826E12, 199.72428189712787], [1.59840012E12, 289.46054060232177], [1.59840072E12, 297.4957324266187], [1.59839766E12, 172.78266796494628], [1.5983985E12, 210.0], [1.59839988E12, 270.0], [1.5983979E12, 180.0], [1.59840048E12, 300.0], [1.59839808E12, 180.0], [1.5984003E12, 300.0], [1.59839928E12, 240.0], [1.59839832E12, 210.0], [1.59840006E12, 270.0], [1.59840066E12, 300.0], [1.59839772E12, 180.0], [1.59839904E12, 240.0], [1.59839892E12, 240.0], [1.59839946E12, 240.81514182424954], [1.59839922E12, 240.0], [1.59839874E12, 210.0], [1.59839964E12, 270.0], [1.59839814E12, 180.0], [1.59840024E12, 300.0], [1.5983994E12, 240.0], [1.59839838E12, 210.0], [1.5984E12, 270.0], [1.59839856E12, 210.0], [1.59839982E12, 270.0], [1.59839796E12, 180.0], [1.59840042E12, 300.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group [Scenario 3 Maximum]", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59840072E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.8, "minX": 1.0, "maxY": 193.4107142857143, "series": [{"data": [[2.0, 4.0], [3.0, 2.0], [4.0, 2.0], [5.0, 2.0], [6.0, 4.0], [7.0, 4.0], [8.0, 2.0], [9.0, 3.0], [10.0, 2.0], [11.0, 2.0], [12.0, 4.0], [13.0, 3.0], [14.0, 3.0], [15.0, 3.0], [16.0, 3.0], [17.0, 4.0], [18.0, 4.0], [19.0, 3.0], [20.0, 4.0], [21.0, 3.0], [22.0, 3.0], [23.0, 2.0], [24.0, 3.0], [25.0, 3.0], [26.0, 3.0], [27.0, 3.0], [28.0, 4.0], [29.0, 3.0], [30.0, 6.0769230769230775], [31.0, 2.0], [32.0, 5.0], [33.0, 2.5], [34.0, 2.5], [35.0, 3.0], [36.0, 3.5], [37.0, 3.0], [38.0, 7.5], [39.0, 3.3333333333333335], [40.0, 2.0], [41.0, 4.5], [42.0, 3.5], [43.0, 3.0], [44.0, 5.0], [45.0, 5.0], [46.0, 3.0], [47.0, 5.5], [48.0, 4.1875], [49.0, 3.0], [50.0, 4.0], [51.0, 4.333333333333333], [52.0, 3.8], [53.0, 3.0], [54.0, 10.0], [55.0, 3.0], [56.0, 2.6666666666666665], [57.0, 5.5], [58.0, 5.5], [59.0, 4.75], [60.0, 6.25], [61.0, 5.0], [62.0, 5.666666666666667], [63.0, 4.0], [64.0, 3.3333333333333335], [65.0, 3.0], [66.0, 2.9285714285714284], [67.0, 2.0], [68.0, 5.75], [69.0, 5.5], [70.0, 6.333333333333334], [71.0, 9.333333333333332], [72.0, 2.5], [73.0, 4.166666666666666], [74.0, 7.0], [75.0, 2.75], [76.0, 6.5], [77.0, 2.0], [78.0, 3.5], [79.0, 2.75], [80.0, 2.5], [81.0, 2.5], [82.0, 8.0], [83.0, 5.75], [84.0, 3.4375], [85.0, 2.6], [86.0, 2.3333333333333335], [87.0, 2.6666666666666665], [88.0, 4.5], [89.0, 4.0], [90.0, 3.8], [91.0, 3.4285714285714284], [92.0, 3.6666666666666665], [93.0, 3.4], [94.0, 4.142857142857143], [95.0, 8.0], [96.0, 5.166666666666666], [97.0, 22.0], [98.0, 3.142857142857143], [99.0, 5.0], [100.0, 2.3333333333333335], [101.0, 3.375], [102.0, 6.375000000000001], [103.0, 3.333333333333333], [104.0, 2.75], [105.0, 3.857142857142857], [106.0, 2.857142857142857], [107.0, 3.2], [108.0, 3.7142857142857144], [109.0, 2.8333333333333335], [110.0, 2.2857142857142856], [111.0, 5.75], [112.0, 2.8749999999999996], [113.0, 3.2], [114.0, 3.2], [115.0, 3.166666666666667], [116.0, 2.625], [117.0, 2.2], [118.0, 3.8], [119.0, 2.7142857142857144], [120.0, 4.111111111111111], [121.0, 3.2857142857142856], [122.0, 2.25], [123.0, 2.714285714285714], [124.0, 2.333333333333333], [125.0, 3.0000000000000004], [126.0, 2.5714285714285716], [127.0, 2.625], [128.0, 4.142857142857143], [129.0, 3.571428571428571], [130.0, 2.8333333333333335], [131.0, 2.166666666666667], [132.0, 3.181818181818182], [133.0, 2.4285714285714284], [134.0, 2.75], [135.0, 2.3000000000000003], [136.0, 2.25], [137.0, 2.25], [138.0, 14.466666666666669], [139.0, 14.857142857142861], [140.0, 5.8], [141.0, 2.888888888888889], [142.0, 3.888888888888889], [143.0, 2.8], [144.0, 2.2], [145.0, 2.4444444444444446], [146.0, 3.4444444444444446], [147.0, 1.8], [148.0, 7.333333333333333], [149.0, 2.3333333333333335], [150.0, 2.2222222222222223], [151.0, 3.625], [152.0, 3.0], [153.0, 2.727272727272727], [154.0, 3.875], [155.0, 2.6666666666666665], [156.0, 8.6875], [157.0, 5.933333333333333], [158.0, 3.7499999999999996], [159.0, 2.3636363636363638], [160.0, 7.285714285714286], [161.0, 6.3], [162.0, 2.7142857142857144], [163.0, 3.3333333333333335], [164.0, 3.3636363636363638], [165.0, 2.0], [166.0, 2.6], [167.0, 2.6666666666666665], [168.0, 3.0], [169.0, 2.6999999999999997], [170.0, 6.333333333333333], [171.0, 5.3076923076923075], [172.0, 2.6999999999999997], [173.0, 8.571428571428571], [174.0, 3.5454545454545454], [175.0, 2.421052631578947], [176.0, 2.8571428571428568], [177.0, 2.5833333333333335], [178.0, 2.9166666666666665], [179.0, 3.333333333333333], [180.0, 2.9781708624450074], [181.0, 2.8793103448275863], [182.0, 2.676056338028169], [183.0, 3.3442622950819674], [184.0, 2.6935483870967736], [185.0, 2.758064516129032], [186.0, 2.887096774193549], [187.0, 2.5156249999999996], [188.0, 2.7419354838709675], [189.0, 2.2121212121212124], [190.0, 2.415384615384615], [191.0, 2.444444444444444], [192.0, 4.028985507246378], [193.0, 2.062499999999999], [194.0, 2.274193548387097], [195.0, 2.0869565217391304], [196.0, 2.4153846153846157], [197.0, 2.3125000000000004], [198.0, 2.0945945945945943], [199.0, 2.388059701492537], [200.0, 2.1911764705882364], [201.0, 4.000000000000002], [202.0, 2.636363636363637], [203.0, 2.285714285714287], [204.0, 2.25], [205.0, 2.1060606060606055], [206.0, 2.2571428571428562], [207.0, 1.9600000000000006], [208.0, 2.4657534246575334], [209.0, 1.939393939393939], [210.0, 3.4608391942969114], [211.0, 4.373333333333335], [212.0, 6.157142857142858], [213.0, 3.0597014925373136], [214.0, 3.227848101265823], [215.0, 2.8428571428571425], [216.0, 2.7999999999999985], [217.0, 3.0512820512820515], [218.0, 3.8309859154929575], [219.0, 3.7285714285714286], [220.0, 8.153846153846153], [221.0, 3.2105263157894735], [222.0, 3.114285714285715], [223.0, 3.6835443037974684], [224.0, 3.320512820512821], [225.0, 2.637681159420291], [226.0, 3.8048780487804876], [227.0, 2.55128205128205], [228.0, 3.243243243243244], [229.0, 2.3924050632911387], [230.0, 2.4675324675324672], [231.0, 2.8625000000000007], [232.0, 3.243589743589743], [233.0, 2.2727272727272725], [234.0, 3.4], [235.0, 2.831168831168832], [236.0, 3.3974358974358965], [237.0, 3.0365853658536586], [238.0, 2.363636363636363], [239.0, 3.265822784810127], [240.0, 17.334237193374694], [241.0, 5.63157894736842], [242.0, 32.12048192771084], [243.0, 27.289156626506028], [244.0, 3.0617283950617282], [245.0, 3.1481481481481493], [246.0, 5.642857142857146], [247.0, 3.024096385542169], [248.0, 2.812500000000001], [249.0, 10.510869565217392], [250.0, 2.9767441860465125], [251.0, 3.374999999999999], [252.0, 3.526315789473683], [253.0, 3.6853932584269664], [254.0, 2.1785714285714284], [255.0, 1.9130434782608698], [257.0, 15.749999999999996], [256.0, 2.7790697674418614], [258.0, 3.076086956521739], [259.0, 2.8620689655172407], [260.0, 2.058823529411764], [261.0, 3.0795454545454546], [262.0, 3.2873563218390807], [263.0, 3.3626373626373627], [264.0, 2.457446808510638], [270.0, 8.404903573770058], [271.0, 60.0340909090909], [268.0, 13.571428571428578], [269.0, 2.5116279069767438], [265.0, 13.797752808988768], [266.0, 2.6219512195121957], [267.0, 1.9684210526315795], [273.0, 12.622222222222222], [272.0, 3.0454545454545454], [274.0, 3.6785714285714284], [275.0, 3.2575757575757573], [276.0, 27.88397790055249], [277.0, 3.2758620689655173], [278.0, 2.9565217391304346], [279.0, 25.924324324324328], [280.0, 5.655172413793103], [286.0, 3.1363636363636367], [287.0, 3.333333333333333], [284.0, 3.3428571428571434], [285.0, 19.14948453608249], [281.0, 3.5074626865671643], [282.0, 32.80927835051545], [283.0, 3.8636363636363633], [289.0, 2.962962962962963], [288.0, 25.701030927835056], [290.0, 3.0365853658536577], [291.0, 41.26923076923077], [292.0, 3.3600000000000003], [293.0, 11.391534391534394], [294.0, 12.379746835443038], [295.0, 2.9999999999999996], [296.0, 19.921052631578938], [300.0, 22.328557922251118], [297.0, 36.5], [298.0, 3.0769230769230775], [299.0, 23.71999999999999], [1.0, 31.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[247.08168361025344, 11.89043386048747]], "isOverall": false, "label": "Open Main Page-Aggregated", "isController": false}, {"data": [[2.0, 41.5], [3.0, 5.0], [4.0, 5.0], [5.0, 4.0], [6.0, 6.0], [7.0, 7.0], [8.0, 4.0], [9.0, 4.0], [10.0, 5.0], [11.0, 4.0], [12.0, 7.0], [13.0, 5.0], [14.0, 5.0], [15.0, 4.0], [16.0, 5.0], [17.0, 4.0], [18.0, 5.0], [19.0, 5.0], [20.0, 6.0], [21.0, 4.0], [22.0, 11.0], [23.0, 4.0], [24.0, 5.0], [25.0, 4.0], [26.0, 5.0], [27.0, 5.0], [28.0, 27.0], [29.0, 4.0], [30.0, 14.666666666666666], [31.0, 34.22222222222222], [32.0, 16.0], [33.0, 14.0], [34.0, 15.333333333333334], [35.0, 27.0], [36.0, 17.333333333333336], [37.0, 21.666666666666668], [38.0, 21.666666666666664], [39.0, 19.333333333333336], [40.0, 18.333333333333336], [41.0, 20.666666666666664], [42.0, 19.0], [43.0, 17.333333333333336], [44.0, 17.0], [45.0, 20.333333333333336], [46.0, 19.0], [47.0, 17.666666666666664], [48.0, 8.9375], [49.0, 15.666666666666666], [50.0, 18.0], [51.0, 12.0], [52.0, 15.0], [53.0, 13.5], [54.0, 13.5], [55.0, 7.0], [56.0, 11.0], [57.0, 5.666666666666667], [58.0, 5.0], [59.0, 7.666666666666667], [60.0, 7.666666666666667], [61.0, 4.666666666666667], [62.0, 6.333333333333333], [63.0, 9.0], [64.0, 16.666666666666668], [65.0, 3.6666666666666665], [66.0, 3.941176470588237], [67.0, 3.0], [68.0, 5.25], [69.0, 5.25], [70.0, 5.166666666666667], [71.0, 14.0], [72.0, 3.25], [73.0, 11.6], [74.0, 11.0], [75.0, 6.0], [76.0, 10.25], [77.0, 5.0], [78.0, 5.0], [79.0, 6.25], [80.0, 5.5], [81.0, 4.333333333333334], [82.0, 5.0], [83.0, 5.75], [84.0, 5.470588235294118], [85.0, 14.42857142857143], [86.0, 4.0], [87.0, 6.2], [88.0, 4.4], [89.0, 6.2], [90.0, 5.2], [91.0, 10.333333333333332], [92.0, 5.6], [93.0, 11.0], [94.0, 15.833333333333334], [95.0, 11.5], [96.0, 8.0], [97.0, 25.6], [98.0, 5.4], [99.0, 4.571428571428571], [100.0, 3.3333333333333335], [101.0, 7.428571428571429], [102.0, 6.125000000000001], [103.0, 3.1666666666666665], [104.0, 5.0], [105.0, 4.999999999999999], [106.0, 6.0], [107.0, 4.666666666666666], [108.0, 15.666666666666666], [109.0, 4.666666666666666], [110.0, 4.666666666666667], [111.0, 6.0], [112.0, 5.428571428571429], [113.0, 6.0], [114.0, 4.333333333333333], [115.0, 14.4], [116.0, 11.714285714285714], [117.0, 3.857142857142857], [118.0, 8.75], [119.0, 10.166666666666666], [120.0, 7.578947368421053], [121.0, 7.666666666666666], [122.0, 9.857142857142856], [123.0, 4.625], [124.0, 4.75], [125.0, 6.0], [126.0, 12.4], [127.0, 4.714285714285714], [128.0, 5.111111111111111], [129.0, 7.8], [130.0, 8.88888888888889], [131.0, 5.4], [132.0, 5.666666666666667], [133.0, 5.666666666666666], [134.0, 3.6666666666666665], [135.0, 4.333333333333333], [136.0, 4.333333333333334], [137.0, 5.875], [138.0, 12.399999999999999], [139.0, 23.799999999999997], [140.0, 10.11111111111111], [141.0, 5.857142857142857], [142.0, 7.4], [143.0, 6.090909090909091], [144.0, 3.5], [145.0, 4.285714285714286], [146.0, 5.846153846153846], [147.0, 2.6666666666666665], [148.0, 14.875], [149.0, 9.9], [150.0, 3.9999999999999996], [151.0, 6.0], [152.0, 4.666666666666666], [153.0, 7.25], [154.0, 5.0], [155.0, 6.125000000000001], [156.0, 13.294117647058826], [157.0, 11.90909090909091], [158.0, 13.0], [159.0, 4.0], [160.0, 5.75], [161.0, 9.5], [162.0, 4.0], [163.0, 8.083333333333334], [164.0, 9.25], [165.0, 8.222222222222221], [166.0, 8.0], [167.0, 15.125], [168.0, 7.071428571428571], [169.0, 8.5], [170.0, 12.5], [171.0, 8.357142857142858], [172.0, 4.666666666666667], [173.0, 12.700000000000001], [174.0, 9.444444444444446], [175.0, 6.11764705882353], [176.0, 8.333333333333334], [177.0, 4.857142857142857], [178.0, 5.142857142857143], [179.0, 8.357142857142858], [180.0, 4.814043780505863], [181.0, 3.6779661016949152], [182.0, 4.2615384615384615], [183.0, 4.983870967741935], [184.0, 3.5762711864406778], [185.0, 5.092307692307694], [186.0, 4.984375], [187.0, 4.467741935483872], [188.0, 4.833333333333334], [189.0, 3.7187499999999996], [190.0, 4.5303030303030285], [191.0, 4.430769230769231], [192.0, 7.400000000000003], [193.0, 3.919354838709678], [194.0, 4.578125000000002], [195.0, 4.013888888888889], [196.0, 4.546875000000001], [197.0, 6.187499999999999], [198.0, 3.8904109589041096], [199.0, 5.257575757575757], [200.0, 4.584615384615385], [201.0, 8.338028169014082], [202.0, 10.057971014492754], [203.0, 5.099999999999999], [204.0, 4.447368421052631], [205.0, 4.58730158730159], [206.0, 5.449275362318841], [207.0, 3.769230769230769], [208.0, 5.92857142857143], [209.0, 5.294117647058824], [210.0, 5.101913875598109], [211.0, 6.371794871794872], [212.0, 5.43661971830986], [213.0, 4.28787878787879], [214.0, 6.294871794871796], [215.0, 4.916666666666667], [216.0, 4.492537313432837], [217.0, 4.670886075949368], [218.0, 6.2054794520547985], [219.0, 5.750000000000001], [220.0, 16.594936708860757], [221.0, 5.893333333333334], [222.0, 4.6], [223.0, 6.4375], [224.0, 5.906666666666666], [225.0, 4.442857142857142], [226.0, 8.768292682926834], [227.0, 5.064102564102563], [228.0, 7.428571428571429], [229.0, 6.604938271604941], [230.0, 5.9397590361445785], [231.0, 6.216216216216216], [232.0, 7.750000000000002], [233.0, 4.870129870129868], [234.0, 6.782051282051282], [235.0, 6.349999999999999], [236.0, 8.844155844155843], [237.0, 6.893333333333333], [238.0, 6.755813953488371], [239.0, 6.481481481481482], [240.0, 5.714277727304497], [241.0, 5.487179487179487], [242.0, 5.060240963855421], [243.0, 5.352941176470587], [244.0, 4.6103896103896105], [245.0, 6.058823529411763], [246.0, 5.011764705882354], [247.0, 5.289156626506024], [248.0, 5.060975609756097], [249.0, 6.86046511627907], [250.0, 4.926829268292683], [251.0, 5.786516853932584], [252.0, 5.499999999999999], [253.0, 5.872093023255813], [254.0, 5.430232558139535], [255.0, 4.0666666666666655], [257.0, 4.518072289156627], [256.0, 4.8117647058823545], [258.0, 4.8539325842696615], [259.0, 4.900000000000003], [260.0, 4.120481927710841], [261.0, 4.9529411764705875], [262.0, 7.322580645161295], [263.0, 8.758620689655169], [264.0, 4.785714285714285], [270.0, 17.844123037297532], [271.0, 193.4107142857143], [268.0, 3.4578313253012056], [269.0, 5.849462365591401], [265.0, 5.16867469879518], [266.0, 5.329411764705881], [267.0, 4.373737373737371], [273.0, 53.5524861878453], [272.0, 5.606060606060607], [274.0, 7.925925925925926], [275.0, 6.0149253731343295], [276.0, 97.0824175824176], [277.0, 4.321428571428574], [278.0, 5.323529411764706], [279.0, 92.69945355191255], [280.0, 16.068965517241377], [286.0, 6.041666666666664], [287.0, 7.183098591549298], [284.0, 5.5285714285714285], [285.0, 62.67539267015708], [281.0, 5.710144927536233], [282.0, 106.63440860215057], [283.0, 8.793103448275861], [289.0, 5.0357142857142865], [288.0, 91.9489795918367], [290.0, 5.000000000000003], [291.0, 118.16129032258061], [292.0, 4.3076923076923075], [293.0, 16.718446601941746], [294.0, 77.2378048780488], [295.0, 4.666666666666665], [296.0, 28.28301886792453], [300.0, 70.55053667760467], [297.0, 107.3086419753087], [298.0, 3.9285714285714284], [299.0, 64.59615384615385]], "isOverall": false, "label": "Make an order", "isController": false}, {"data": [[247.07485715212712, 24.40550126615172]], "isOverall": false, "label": "Make an order-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.5983976E12, "maxY": 360616.25, "series": [{"data": [[1.5983988E12, 250039.06666666668], [1.59839958E12, 323429.43333333335], [1.5983982E12, 216234.56666666668], [1.59840018E12, 360616.25], [1.5984006E12, 347607.4666666667], [1.59839778E12, 216377.18333333332], [1.59839898E12, 286980.5333333333], [1.59839802E12, 216377.18333333332], [1.59840036E12, 356376.6666666667], [1.5983976E12, 7370.316666666667], [1.59839916E12, 286024.81666666665], [1.59839862E12, 250371.36666666667], [1.59839976E12, 323108.9166666667], [1.59840054E12, 337693.23333333334], [1.59839784E12, 216469.08333333334], [1.59839886E12, 261578.26666666666], [1.59839952E12, 321277.6], [1.59839934E12, 286052.0], [1.59839844E12, 252523.2], [1.59839994E12, 327007.13333333336], [1.5983991E12, 285932.9166666667], [1.59839868E12, 250159.26666666666], [1.5983997E12, 323801.8], [1.59839826E12, 239902.2], [1.59840012E12, 350532.31666666665], [1.59840072E12, 288897.88333333336], [1.59839766E12, 205725.33333333334], [1.5983985E12, 250153.38333333333], [1.59839988E12, 321885.6], [1.5983979E12, 216697.71666666667], [1.59840048E12, 346632.8], [1.59839808E12, 216629.35], [1.5984003E12, 354853.4666666667], [1.59839928E12, 286030.7], [1.59839832E12, 252322.86666666667], [1.59840006E12, 320911.11666666664], [1.59840066E12, 338267.5333333333], [1.59839772E12, 216383.06666666668], [1.59839904E12, 286459.6666666667], [1.59839892E12, 286219.26666666666], [1.59839946E12, 288142.4666666667], [1.59839922E12, 286127.36666666664], [1.59839874E12, 249958.93333333332], [1.59839964E12, 323292.7], [1.59839814E12, 216651.76666666666], [1.59840024E12, 356055.4666666667], [1.5983994E12, 286867.3333333333], [1.59839838E12, 252276.91666666666], [1.5984E12, 324849.4166666667], [1.59839856E12, 250233.51666666666], [1.59839982E12, 322066.05], [1.59839796E12, 216469.08333333334], [1.59840042E12, 354985.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5983988E12, 0.0], [1.59839958E12, 0.0], [1.5983982E12, 0.0], [1.59840018E12, 0.0], [1.5984006E12, 0.0], [1.59839778E12, 0.0], [1.59839898E12, 0.0], [1.59839802E12, 0.0], [1.59840036E12, 0.0], [1.5983976E12, 0.0], [1.59839916E12, 0.0], [1.59839862E12, 0.0], [1.59839976E12, 0.0], [1.59840054E12, 0.0], [1.59839784E12, 0.0], [1.59839886E12, 0.0], [1.59839952E12, 0.0], [1.59839934E12, 0.0], [1.59839844E12, 0.0], [1.59839994E12, 0.0], [1.5983991E12, 0.0], [1.59839868E12, 0.0], [1.5983997E12, 0.0], [1.59839826E12, 0.0], [1.59840012E12, 0.0], [1.59840072E12, 0.0], [1.59839766E12, 0.0], [1.5983985E12, 0.0], [1.59839988E12, 0.0], [1.5983979E12, 0.0], [1.59840048E12, 0.0], [1.59839808E12, 0.0], [1.5984003E12, 0.0], [1.59839928E12, 0.0], [1.59839832E12, 0.0], [1.59840006E12, 0.0], [1.59840066E12, 0.0], [1.59839772E12, 0.0], [1.59839904E12, 0.0], [1.59839892E12, 0.0], [1.59839946E12, 0.0], [1.59839922E12, 0.0], [1.59839874E12, 0.0], [1.59839964E12, 0.0], [1.59839814E12, 0.0], [1.59840024E12, 0.0], [1.5983994E12, 0.0], [1.59839838E12, 0.0], [1.5984E12, 0.0], [1.59839856E12, 0.0], [1.59839982E12, 0.0], [1.59839796E12, 0.0], [1.59840042E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59840072E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.1958896500647977, "minX": 1.5983976E12, "maxY": 134.25953345439365, "series": [{"data": [[1.5983988E12, 3.853709341451698], [1.59839958E12, 4.934349064783859], [1.5983982E12, 4.066333148045227], [1.59840018E12, 25.26108210198883], [1.5984006E12, 28.854426002766274], [1.59839778E12, 2.206443251249767], [1.59839898E12, 3.522406812787933], [1.59839802E12, 3.2779114978707655], [1.59840036E12, 15.260258572231663], [1.5983976E12, 3.961956521739128], [1.59839916E12, 3.4563664378764565], [1.59839862E12, 2.8529364698351696], [1.59839976E12, 4.136143831370103], [1.59840054E12, 22.151738047218043], [1.59839784E12, 2.340736627799363], [1.59839886E12, 3.5829376627354836], [1.59839952E12, 5.09564783638859], [1.59839934E12, 4.650609158381207], [1.59839844E12, 4.056163731556411], [1.59839994E12, 14.071918647390364], [1.5983991E12, 3.797814207650279], [1.59839868E12, 2.9625240230621253], [1.5983997E12, 3.628928483048753], [1.59839826E12, 3.075150300601201], [1.59840012E12, 19.583838152931797], [1.59840072E12, 12.561347566893113], [1.59839766E12, 3.1250243427458577], [1.5983985E12, 3.2375080076873752], [1.59839988E12, 6.824225071579761], [1.5983979E12, 2.8750231096320986], [1.59840048E12, 29.38229515774876], [1.59839808E12, 2.945810985759198], [1.5984003E12, 20.030597267697843], [1.59839928E12, 3.4017369379464877], [1.59839832E12, 4.166084471260714], [1.59840006E12, 6.804993757802736], [1.59840066E12, 30.593035650834963], [1.59839772E12, 2.1958896500647977], [1.59839904E12, 4.218041958041967], [1.59839892E12, 2.9638857782754773], [1.59839946E12, 6.5285038932146975], [1.59839922E12, 7.036824418930274], [1.59839874E12, 3.1455361436127576], [1.59839964E12, 3.510843970752269], [1.59839814E12, 3.1582840236686422], [1.59840024E12, 12.524248902891818], [1.5983994E12, 134.25953345439365], [1.59839838E12, 3.8945529617278107], [1.5984E12, 29.162802170695606], [1.59839856E12, 3.02993916106309], [1.59839982E12, 3.72325870646766], [1.59839796E12, 3.597260781047565], [1.59840042E12, 25.663469134409223]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.5983988E12, 6.040698605992637], [1.59839958E12, 5.969148804361287], [1.5983982E12, 4.9398036673458074], [1.59840018E12, 73.53705967329671], [1.5984006E12, 95.60055318658492], [1.59839778E12, 3.4568518518518547], [1.59839898E12, 6.814882032667873], [1.59839802E12, 5.390555555555544], [1.59840036E12, 49.96110174255222], [1.5983976E12, 7.690217391304347], [1.59839916E12, 5.606022408963613], [1.59839862E12, 4.842265237561994], [1.59839976E12, 5.573607838273602], [1.59840054E12, 74.12958348166565], [1.59839784E12, 3.3360473723167954], [1.59839886E12, 6.161739929545096], [1.59839952E12, 5.782890634742469], [1.59839934E12, 4.458713023973077], [1.59839844E12, 5.0174520069807915], [1.59839994E12, 40.69456015682433], [1.5983991E12, 5.958660313901343], [1.59839868E12, 4.540358744394616], [1.5983997E12, 8.665800544419715], [1.59839826E12, 5.159819639278557], [1.59840012E12, 57.75622857142855], [1.59840072E12, 39.16018338427319], [1.59839766E12, 5.22317429406037], [1.5983985E12, 4.60467723850712], [1.59839988E12, 17.304688471583123], [1.5983979E12, 4.940643491124274], [1.59840048E12, 96.16830537883163], [1.59839808E12, 5.257396449704137], [1.5984003E12, 62.44868465620398], [1.59839928E12, 4.646828175325572], [1.59839832E12, 5.321371864083817], [1.59840006E12, 20.282557123236383], [1.59840066E12, 93.31090844486538], [1.59839772E12, 3.7874467691168374], [1.59839904E12, 7.670909090909084], [1.59839892E12, 6.10904255319148], [1.59839946E12, 5.674638487208022], [1.59839922E12, 4.839075630252124], [1.59839874E12, 4.966340759737121], [1.59839964E12, 7.87436501053151], [1.59839814E12, 5.5286718460969295], [1.59840024E12, 38.28671092607185], [1.5983994E12, 5.116924794195633], [1.59839838E12, 5.2641359593392405], [1.5984E12, 52.52460229374762], [1.59839856E12, 4.650120096076849], [1.59839982E12, 6.8116050305067795], [1.59839796E12, 6.792561065877133], [1.59840042E12, 84.56887985546552]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59840072E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.189224217737464, "minX": 1.5983976E12, "maxY": 134.2497555524516, "series": [{"data": [[1.5983988E12, 3.782566896330715], [1.59839958E12, 4.866592344853209], [1.5983982E12, 4.042801556420229], [1.59840018E12, 23.7791356515943], [1.5984006E12, 27.50587828492382], [1.59839778E12, 2.1966302536567315], [1.59839898E12, 3.5106798827306984], [1.59839802E12, 3.24476948713201], [1.59840036E12, 14.731422147273742], [1.5983976E12, 3.918478260869566], [1.59839916E12, 3.3779240790026663], [1.59839862E12, 2.844775164026245], [1.59839976E12, 4.097954122752645], [1.59840054E12, 21.55273460671492], [1.59839784E12, 2.3287062742920557], [1.59839886E12, 3.5500076581405953], [1.59839952E12, 5.0553684998129285], [1.59839934E12, 4.582971572608903], [1.59839844E12, 4.043788672060913], [1.59839994E12, 13.914114187699065], [1.5983991E12, 3.775676054364592], [1.59839868E12, 2.9482703395259406], [1.5983997E12, 3.6202672605790553], [1.59839826E12, 2.995490981963934], [1.59840012E12, 19.236141273288393], [1.59840072E12, 12.549008734229869], [1.59839766E12, 3.103992210321325], [1.5983985E12, 3.180653427290204], [1.59839988E12, 6.805427611104188], [1.5983979E12, 2.854686633388787], [1.59840048E12, 27.71281636426678], [1.59839808E12, 2.929350841501765], [1.5984003E12, 19.49802416168005], [1.59839928E12, 3.3356212354671606], [1.59839832E12, 4.156716417910456], [1.59840006E12, 6.763171036204761], [1.59840066E12, 28.9677839630464], [1.59839772E12, 2.189224217737464], [1.59839904E12, 4.159580419580428], [1.59839892E12, 2.954927211646125], [1.59839946E12, 6.413097886540597], [1.59839922E12, 7.014981797815738], [1.59839874E12, 3.1343163968584746], [1.59839964E12, 3.5015491386789024], [1.59839814E12, 3.1349852071005944], [1.59840024E12, 12.468099471137583], [1.5983994E12, 134.2497555524516], [1.59839838E12, 3.851357789423529], [1.5984E12, 28.675012333497754], [1.59839856E12, 3.00960614793468], [1.59839982E12, 3.712437810945269], [1.59839796E12, 3.5752359800111098], [1.59840042E12, 24.946055749915427]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.5983988E12, 6.039256529402327], [1.59839958E12, 5.967785900136318], [1.5983982E12, 4.939248008890536], [1.59840018E12, 73.53594843871586], [1.5984006E12, 95.6000921977643], [1.59839778E12, 3.4566666666666612], [1.59839898E12, 6.813346363255616], [1.59839802E12, 5.389814814814823], [1.59840036E12, 49.960427206295805], [1.5983976E12, 7.663043478260866], [1.59839916E12, 5.6054621848739306], [1.59839862E12, 4.841305391137418], [1.59839976E12, 5.572367605109774], [1.59840054E12, 74.12827815355418], [1.59839784E12, 3.334566987416722], [1.59839886E12, 6.160974115484763], [1.59839952E12, 5.781518892630005], [1.59839934E12, 4.457451282770222], [1.59839844E12, 5.015548151673784], [1.59839994E12, 40.693457485910216], [1.5983991E12, 5.958380044843045], [1.59839868E12, 4.538917360666233], [1.5983997E12, 8.664563226924056], [1.59839826E12, 5.15898463593856], [1.59840012E12, 57.75531428571431], [1.59840072E12, 39.159349819394365], [1.59839766E12, 5.2200584225900695], [1.5983985E12, 4.603716162101567], [1.59839988E12, 17.303444845168542], [1.5983979E12, 4.939903846153846], [1.59840048E12, 96.16772700983248], [1.59839808E12, 5.25665680473371], [1.5984003E12, 62.447668510782364], [1.59839928E12, 4.6465481025066335], [1.59839832E12, 5.32105430295329], [1.59840006E12, 20.281433387439176], [1.59840066E12, 93.30996091436694], [1.59839772E12, 3.7861507128309624], [1.59839904E12, 7.670069930069923], [1.59839892E12, 6.108062709966379], [1.59839946E12, 5.673526140155742], [1.59839922E12, 4.8385154061624815], [1.59839874E12, 4.9655393492546915], [1.59839964E12, 7.872878205922453], [1.59839814E12, 5.527746947835738], [1.59840024E12, 38.285923258692314], [1.5983994E12, 5.116785265801592], [1.59839838E12, 5.262547649301145], [1.5984E12, 52.5234924158342], [1.59839856E12, 4.649639711769413], [1.59839982E12, 6.810608890549117], [1.59839796E12, 6.7918208734270955], [1.59840042E12, 84.56763775971075]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59840072E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5983976E12, "maxY": 4.9E-324, "series": [{"data": [[1.5983988E12, 0.0], [1.59839958E12, 0.0], [1.5983982E12, 0.0], [1.59840018E12, 0.0], [1.5984006E12, 0.0], [1.59839778E12, 0.0], [1.59839898E12, 0.0], [1.59839802E12, 0.0], [1.59840036E12, 0.0], [1.5983976E12, 0.0], [1.59839916E12, 0.0], [1.59839862E12, 0.0], [1.59839976E12, 0.0], [1.59840054E12, 0.0], [1.59839784E12, 0.0], [1.59839886E12, 0.0], [1.59839952E12, 0.0], [1.59839934E12, 0.0], [1.59839844E12, 0.0], [1.59839994E12, 0.0], [1.5983991E12, 0.0], [1.59839868E12, 0.0], [1.5983997E12, 0.0], [1.59839826E12, 0.0], [1.59840012E12, 0.0], [1.59840072E12, 0.0], [1.59839766E12, 0.0], [1.5983985E12, 0.0], [1.59839988E12, 0.0], [1.5983979E12, 0.0], [1.59840048E12, 0.0], [1.59839808E12, 0.0], [1.5984003E12, 0.0], [1.59839928E12, 0.0], [1.59839832E12, 0.0], [1.59840006E12, 0.0], [1.59840066E12, 0.0], [1.59839772E12, 0.0], [1.59839904E12, 0.0], [1.59839892E12, 0.0], [1.59839946E12, 0.0], [1.59839922E12, 0.0], [1.59839874E12, 0.0], [1.59839964E12, 0.0], [1.59839814E12, 0.0], [1.59840024E12, 0.0], [1.5983994E12, 0.0], [1.59839838E12, 0.0], [1.5984E12, 0.0], [1.59839856E12, 0.0], [1.59839982E12, 0.0], [1.59839796E12, 0.0], [1.59840042E12, 0.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.5983988E12, 0.0], [1.59839958E12, 0.0], [1.5983982E12, 0.0], [1.59840018E12, 0.0], [1.5984006E12, 0.0], [1.59839778E12, 0.0], [1.59839898E12, 0.0], [1.59839802E12, 0.0], [1.59840036E12, 0.0], [1.5983976E12, 0.0], [1.59839916E12, 0.0], [1.59839862E12, 0.0], [1.59839976E12, 0.0], [1.59840054E12, 0.0], [1.59839784E12, 0.0], [1.59839886E12, 0.0], [1.59839952E12, 0.0], [1.59839934E12, 0.0], [1.59839844E12, 0.0], [1.59839994E12, 0.0], [1.5983991E12, 0.0], [1.59839868E12, 0.0], [1.5983997E12, 0.0], [1.59839826E12, 0.0], [1.59840012E12, 0.0], [1.59840072E12, 0.0], [1.59839766E12, 0.0], [1.5983985E12, 0.0], [1.59839988E12, 0.0], [1.5983979E12, 0.0], [1.59840048E12, 0.0], [1.59839808E12, 0.0], [1.5984003E12, 0.0], [1.59839928E12, 0.0], [1.59839832E12, 0.0], [1.59840006E12, 0.0], [1.59840066E12, 0.0], [1.59839772E12, 0.0], [1.59839904E12, 0.0], [1.59839892E12, 0.0], [1.59839946E12, 0.0], [1.59839922E12, 0.0], [1.59839874E12, 0.0], [1.59839964E12, 0.0], [1.59839814E12, 0.0], [1.59840024E12, 0.0], [1.5983994E12, 0.0], [1.59839838E12, 0.0], [1.5984E12, 0.0], [1.59839856E12, 0.0], [1.59839982E12, 0.0], [1.59839796E12, 0.0], [1.59840042E12, 0.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59840072E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5983976E12, "maxY": 938846.0, "series": [{"data": [[1.5983988E12, 1018.0], [1.59839958E12, 1241.0], [1.5983982E12, 1030.0], [1.59840018E12, 1034.0], [1.5984006E12, 351.0], [1.59839778E12, 35.0], [1.59839898E12, 1007.0], [1.59839802E12, 81.0], [1.59840036E12, 246.0], [1.5983976E12, 45.0], [1.59839916E12, 1010.0], [1.59839862E12, 1012.0], [1.59839976E12, 1032.0], [1.59840054E12, 284.0], [1.59839784E12, 1004.0], [1.59839886E12, 1026.0], [1.59839952E12, 1036.0], [1.59839934E12, 1032.0], [1.59839844E12, 1031.0], [1.59839994E12, 1030.0], [1.5983991E12, 1039.0], [1.59839868E12, 1024.0], [1.5983997E12, 1024.0], [1.59839826E12, 1023.0], [1.59840012E12, 1039.0], [1.59840072E12, 250.0], [1.59839766E12, 73.0], [1.5983985E12, 1022.0], [1.59839988E12, 1023.0], [1.5983979E12, 223.0], [1.59840048E12, 283.0], [1.59839808E12, 73.0], [1.5984003E12, 328.0], [1.59839928E12, 1031.0], [1.59839832E12, 1028.0], [1.59840006E12, 1017.0], [1.59840066E12, 373.0], [1.59839772E12, 178.0], [1.59839904E12, 1028.0], [1.59839892E12, 1008.0], [1.59839946E12, 1033.0], [1.59839922E12, 1036.0], [1.59839874E12, 1033.0], [1.59839964E12, 1028.0], [1.59839814E12, 71.0], [1.59840024E12, 205.0], [1.5983994E12, 938846.0], [1.59839838E12, 1025.0], [1.5984E12, 2058.0], [1.59839856E12, 1018.0], [1.59839982E12, 1026.0], [1.59839796E12, 81.0], [1.59840042E12, 289.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5983988E12, 1.0], [1.59839958E12, 1.0], [1.5983982E12, 1.0], [1.59840018E12, 1.0], [1.5984006E12, 1.0], [1.59839778E12, 1.0], [1.59839898E12, 1.0], [1.59839802E12, 1.0], [1.59840036E12, 1.0], [1.5983976E12, 1.0], [1.59839916E12, 1.0], [1.59839862E12, 1.0], [1.59839976E12, 1.0], [1.59840054E12, 1.0], [1.59839784E12, 1.0], [1.59839886E12, 1.0], [1.59839952E12, 1.0], [1.59839934E12, 1.0], [1.59839844E12, 1.0], [1.59839994E12, 1.0], [1.5983991E12, 1.0], [1.59839868E12, 1.0], [1.5983997E12, 1.0], [1.59839826E12, 1.0], [1.59840012E12, 1.0], [1.59840072E12, 1.0], [1.59839766E12, 1.0], [1.5983985E12, 1.0], [1.59839988E12, 1.0], [1.5983979E12, 1.0], [1.59840048E12, 1.0], [1.59839808E12, 1.0], [1.5984003E12, 1.0], [1.59839928E12, 1.0], [1.59839832E12, 1.0], [1.59840006E12, 1.0], [1.59840066E12, 1.0], [1.59839772E12, 1.0], [1.59839904E12, 1.0], [1.59839892E12, 1.0], [1.59839946E12, 1.0], [1.59839922E12, 1.0], [1.59839874E12, 1.0], [1.59839964E12, 1.0], [1.59839814E12, 1.0], [1.59840024E12, 1.0], [1.5983994E12, 1.0], [1.59839838E12, 1.0], [1.5984E12, 2.0], [1.59839856E12, 1.0], [1.59839982E12, 1.0], [1.59839796E12, 1.0], [1.59840042E12, 1.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5983988E12, 1.0], [1.59839958E12, 1.0], [1.5983982E12, 1.0], [1.59840018E12, 1.0], [1.5984006E12, 1.0], [1.59839778E12, 1.0], [1.59839898E12, 1.0], [1.59839802E12, 1.0], [1.59840036E12, 1.0], [1.5983976E12, 1.0], [1.59839916E12, 1.0], [1.59839862E12, 1.0], [1.59839976E12, 1.0], [1.59840054E12, 1.0], [1.59839784E12, 1.0], [1.59839886E12, 1.0], [1.59839952E12, 1.0], [1.59839934E12, 1.0], [1.59839844E12, 1.0], [1.59839994E12, 1.0], [1.5983991E12, 1.0], [1.59839868E12, 1.0], [1.5983997E12, 1.0], [1.59839826E12, 1.0], [1.59840012E12, 2.0], [1.59840072E12, 1.0], [1.59839766E12, 1.0], [1.5983985E12, 1.0], [1.59839988E12, 1.0], [1.5983979E12, 1.0], [1.59840048E12, 1.0], [1.59839808E12, 1.0], [1.5984003E12, 1.0], [1.59839928E12, 1.0], [1.59839832E12, 1.0], [1.59840006E12, 1.0], [1.59840066E12, 1.0], [1.59839772E12, 1.0], [1.59839904E12, 1.0], [1.59839892E12, 1.0], [1.59839946E12, 1.0], [1.59839922E12, 1.0], [1.59839874E12, 1.0], [1.59839964E12, 1.0], [1.59839814E12, 1.0], [1.59840024E12, 1.0], [1.5983994E12, 1.0], [1.59839838E12, 1.0], [1.5984E12, 2.0], [1.59839856E12, 1.0], [1.59839982E12, 1.0], [1.59839796E12, 1.0], [1.59840042E12, 1.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5983988E12, 1.0], [1.59839958E12, 1.0], [1.5983982E12, 1.0], [1.59840018E12, 1.0], [1.5984006E12, 1.0], [1.59839778E12, 1.0], [1.59839898E12, 1.0], [1.59839802E12, 1.0], [1.59840036E12, 1.0], [1.5983976E12, 1.0], [1.59839916E12, 1.0], [1.59839862E12, 1.0], [1.59839976E12, 1.0], [1.59840054E12, 1.0], [1.59839784E12, 1.0], [1.59839886E12, 1.0], [1.59839952E12, 1.0], [1.59839934E12, 1.0], [1.59839844E12, 1.0], [1.59839994E12, 1.0], [1.5983991E12, 1.0], [1.59839868E12, 1.0], [1.5983997E12, 1.0], [1.59839826E12, 1.0], [1.59840012E12, 1.0], [1.59840072E12, 1.0], [1.59839766E12, 1.0], [1.5983985E12, 1.0], [1.59839988E12, 1.0], [1.5983979E12, 1.0], [1.59840048E12, 1.0], [1.59839808E12, 1.0], [1.5984003E12, 1.0], [1.59839928E12, 1.0], [1.59839832E12, 1.0], [1.59840006E12, 1.0], [1.59840066E12, 1.0], [1.59839772E12, 1.0], [1.59839904E12, 1.0], [1.59839892E12, 1.0], [1.59839946E12, 1.0], [1.59839922E12, 1.0], [1.59839874E12, 1.0], [1.59839964E12, 1.0], [1.59839814E12, 1.0], [1.59840024E12, 1.0], [1.5983994E12, 1.0], [1.59839838E12, 1.0], [1.5984E12, 2.0], [1.59839856E12, 1.0], [1.59839982E12, 1.0], [1.59839796E12, 1.0], [1.59840042E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.5983988E12, 0.0], [1.59839958E12, 0.0], [1.5983982E12, 0.0], [1.59840018E12, 1.0], [1.5984006E12, 0.0], [1.59839778E12, 0.0], [1.59839898E12, 0.0], [1.59839802E12, 0.0], [1.59840036E12, 1.0], [1.5983976E12, 1.0], [1.59839916E12, 0.0], [1.59839862E12, 0.0], [1.59839976E12, 0.0], [1.59840054E12, 0.0], [1.59839784E12, 0.0], [1.59839886E12, 0.0], [1.59839952E12, 0.0], [1.59839934E12, 0.0], [1.59839844E12, 0.0], [1.59839994E12, 0.0], [1.5983991E12, 0.0], [1.59839868E12, 0.0], [1.5983997E12, 0.0], [1.59839826E12, 1.0], [1.59840012E12, 1.0], [1.59840072E12, 1.0], [1.59839766E12, 0.0], [1.5983985E12, 0.0], [1.59839988E12, 0.0], [1.5983979E12, 0.0], [1.59840048E12, 0.0], [1.59839808E12, 0.0], [1.5984003E12, 0.0], [1.59839928E12, 0.0], [1.59839832E12, 0.0], [1.59840006E12, 0.0], [1.59840066E12, 0.0], [1.59839772E12, 0.0], [1.59839904E12, 0.0], [1.59839892E12, 0.0], [1.59839946E12, 0.0], [1.59839922E12, 0.0], [1.59839874E12, 0.0], [1.59839964E12, 0.0], [1.59839814E12, 0.0], [1.59840024E12, 0.0], [1.5983994E12, 0.0], [1.59839838E12, 0.0], [1.5984E12, 1.0], [1.59839856E12, 0.0], [1.59839982E12, 0.0], [1.59839796E12, 0.0], [1.59840042E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5983988E12, 4.0], [1.59839958E12, 3.0], [1.5983982E12, 3.0], [1.59840018E12, 26.0], [1.5984006E12, 40.0], [1.59839778E12, 2.0], [1.59839898E12, 3.0], [1.59839802E12, 3.0], [1.59840036E12, 16.0], [1.5983976E12, 4.0], [1.59839916E12, 3.0], [1.59839862E12, 3.0], [1.59839976E12, 3.0], [1.59840054E12, 27.0], [1.59839784E12, 2.0], [1.59839886E12, 4.0], [1.59839952E12, 3.0], [1.59839934E12, 3.0], [1.59839844E12, 3.0], [1.59839994E12, 6.0], [1.5983991E12, 3.0], [1.59839868E12, 3.0], [1.5983997E12, 4.0], [1.59839826E12, 3.0], [1.59840012E12, 13.0], [1.59840072E12, 9.0], [1.59839766E12, 3.0], [1.5983985E12, 3.0], [1.59839988E12, 4.0], [1.5983979E12, 3.0], [1.59840048E12, 42.0], [1.59839808E12, 3.0], [1.5984003E12, 17.0], [1.59839928E12, 3.0], [1.59839832E12, 3.0], [1.59840006E12, 5.0], [1.59840066E12, 36.0], [1.59839772E12, 2.0], [1.59839904E12, 4.0], [1.59839892E12, 3.0], [1.59839946E12, 3.0], [1.59839922E12, 3.0], [1.59839874E12, 3.0], [1.59839964E12, 3.0], [1.59839814E12, 3.0], [1.59840024E12, 12.0], [1.5983994E12, 3.0], [1.59839838E12, 3.0], [1.5984E12, 13.0], [1.59839856E12, 3.0], [1.59839982E12, 3.0], [1.59839796E12, 4.0], [1.59840042E12, 31.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59840072E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 18.0, "maxY": 181.0, "series": [{"data": [[18.0, 4.0], [20.0, 4.0], [25.0, 4.0], [26.0, 4.0], [28.0, 3.0], [33.0, 4.0], [34.0, 4.0], [36.0, 4.0], [38.0, 3.0], [45.0, 4.0], [54.0, 4.0], [56.0, 5.5], [57.0, 11.5], [58.0, 4.0], [59.0, 10.0], [62.0, 3.5], [67.0, 4.0], [70.0, 3.0], [68.0, 4.0], [74.0, 4.0], [72.0, 4.0], [73.0, 5.0], [78.0, 4.0], [79.0, 4.0], [77.0, 4.0], [80.0, 3.0], [82.0, 4.0], [81.0, 4.0], [84.0, 5.0], [87.0, 5.0], [86.0, 3.0], [90.0, 5.0], [91.0, 3.0], [88.0, 4.0], [89.0, 7.0], [92.0, 5.0], [94.0, 3.0], [95.0, 4.0], [99.0, 3.0], [102.0, 3.0], [100.0, 3.0], [104.0, 3.0], [105.0, 3.0], [107.0, 4.0], [110.0, 4.0], [108.0, 5.0], [112.0, 3.0], [113.0, 4.0], [114.0, 3.0], [115.0, 56.0], [117.0, 4.0], [116.0, 4.0], [119.0, 5.0], [121.0, 4.0], [122.0, 5.0], [123.0, 19.0], [126.0, 4.0], [124.0, 4.0], [125.0, 46.0], [127.0, 4.0], [128.0, 4.0], [130.0, 3.0], [132.0, 4.0], [131.0, 3.0], [134.0, 3.0], [135.0, 3.0], [129.0, 17.5], [142.0, 4.0], [136.0, 5.0], [140.0, 4.0], [137.0, 4.0], [141.0, 3.0], [139.0, 3.0], [138.0, 3.5], [146.0, 4.0], [144.0, 5.0], [150.0, 4.0], [148.0, 3.0], [147.0, 3.0], [145.0, 4.0], [158.0, 4.0], [152.0, 3.0], [156.0, 4.0], [155.0, 4.5], [157.0, 8.0], [154.0, 3.0], [164.0, 3.0], [162.0, 3.0], [163.0, 3.0], [165.0, 3.0], [166.0, 3.0], [167.0, 3.0], [160.0, 4.0], [161.0, 5.0], [168.0, 3.0], [172.0, 3.0], [175.0, 3.0], [173.0, 3.0], [174.0, 3.0], [170.0, 3.0], [169.0, 3.0], [171.0, 4.0], [182.0, 3.0], [177.0, 3.0], [183.0, 3.0], [178.0, 3.0], [181.0, 3.0], [176.0, 3.0], [179.0, 4.0], [180.0, 3.0], [188.0, 3.0], [185.0, 3.0], [187.0, 3.0], [184.0, 3.0], [186.0, 3.0], [190.0, 3.0], [191.0, 3.0], [189.0, 4.0], [198.0, 3.0], [197.0, 3.0], [195.0, 3.0], [196.0, 3.0], [194.0, 3.0], [192.0, 3.0], [193.0, 3.0], [199.0, 3.0], [202.0, 3.0], [206.0, 3.0], [204.0, 3.0], [205.0, 3.0], [203.0, 3.0], [201.0, 3.0], [200.0, 3.0], [207.0, 3.0], [210.0, 3.0], [215.0, 3.0], [209.0, 3.0], [213.0, 3.0], [214.0, 3.0], [212.0, 3.0], [208.0, 3.0], [211.0, 3.0], [219.0, 3.0], [223.0, 3.0], [222.0, 3.0], [216.0, 3.0], [218.0, 3.0], [221.0, 3.0], [217.0, 3.0], [220.0, 3.0], [226.0, 3.0], [227.0, 3.0], [225.0, 3.0], [224.0, 3.0], [230.0, 3.0], [228.0, 3.0], [231.0, 4.0], [229.0, 3.0], [232.0, 4.0], [234.0, 3.0], [233.0, 3.0], [235.0, 3.0], [236.0, 3.0], [237.0, 3.0], [238.0, 3.0], [239.0, 3.0], [241.0, 3.0], [243.0, 3.0], [244.0, 3.0], [245.0, 3.0], [246.0, 3.0], [242.0, 3.0], [240.0, 3.0], [247.0, 3.0], [249.0, 3.0], [251.0, 3.0], [252.0, 3.0], [253.0, 3.0], [254.0, 3.0], [250.0, 3.0], [255.0, 3.0], [248.0, 3.0], [258.0, 3.0], [256.0, 3.0], [260.0, 3.0], [261.0, 3.0], [262.0, 3.0], [263.0, 3.0], [271.0, 4.0], [270.0, 4.0], [268.0, 3.0], [269.0, 4.0], [259.0, 3.0], [266.0, 3.0], [267.0, 12.0], [265.0, 4.0], [264.0, 3.0], [257.0, 3.0], [273.0, 4.0], [272.0, 3.0], [275.0, 3.0], [274.0, 4.0], [276.0, 3.0], [283.0, 4.0], [280.0, 4.0], [287.0, 6.0], [281.0, 3.0], [286.0, 3.0], [285.0, 5.0], [284.0, 4.0], [282.0, 4.0], [279.0, 5.0], [277.0, 4.0], [278.0, 5.0], [290.0, 5.0], [288.0, 4.0], [292.0, 4.0], [291.0, 4.0], [300.0, 9.0], [303.0, 4.0], [302.0, 15.0], [301.0, 4.0], [289.0, 5.0], [296.0, 9.0], [293.0, 4.0], [297.0, 3.0], [299.0, 13.0], [298.0, 14.0], [294.0, 12.0], [295.0, 100.0], [305.0, 5.0], [309.0, 8.0], [306.0, 3.0], [308.0, 4.0], [304.0, 3.0], [307.0, 5.0], [311.0, 7.0], [312.0, 11.0], [318.0, 32.0], [317.0, 67.0], [315.0, 8.0], [313.0, 8.0], [310.0, 6.0], [332.0, 3.0], [335.0, 5.0], [334.0, 5.0], [333.0, 4.0], [331.0, 4.0], [326.0, 4.0], [330.0, 4.0], [329.0, 4.0], [328.0, 3.0], [325.0, 4.0], [324.0, 3.0], [327.0, 3.0], [322.0, 3.0], [321.0, 5.0], [343.0, 8.0], [337.0, 5.0], [340.0, 5.0], [341.0, 6.0], [342.0, 4.0], [344.0, 18.0], [345.0, 4.0], [346.0, 13.5], [347.0, 22.0], [336.0, 7.5], [351.0, 27.0], [350.0, 36.0], [349.0, 58.5], [366.0, 24.0], [361.0, 7.0], [360.0, 4.0], [367.0, 7.0], [362.0, 37.0], [364.0, 21.5], [356.0, 24.0], [365.0, 10.0], [354.0, 16.0], [353.0, 47.0], [352.0, 28.5], [380.0, 34.0], [368.0, 4.0], [375.0, 134.0], [377.0, 16.0], [374.0, 29.0], [372.0, 16.0], [370.0, 30.0], [371.0, 17.0], [383.0, 9.0], [382.0, 18.0], [378.0, 33.0], [379.0, 61.0], [387.0, 33.0], [391.0, 9.5], [386.0, 22.0], [388.0, 11.0], [390.0, 6.0], [392.0, 7.0], [394.0, 12.0], [395.0, 6.0], [393.0, 11.0], [389.0, 11.0], [385.0, 63.0], [384.0, 46.0], [398.0, 50.0], [397.0, 6.0], [396.0, 17.0], [399.0, 5.0], [412.0, 10.0], [414.0, 27.0], [407.0, 70.5], [413.0, 17.0], [408.0, 12.0], [415.0, 36.0], [410.0, 6.0], [404.0, 5.0], [405.0, 15.0], [406.0, 45.0], [402.0, 4.0], [400.0, 4.0], [403.0, 6.0], [429.0, 14.0], [430.0, 19.0], [421.0, 40.0], [418.0, 47.0], [420.0, 51.5], [422.0, 37.0], [423.0, 23.0], [426.0, 34.0], [427.0, 181.0], [425.0, 14.0], [424.0, 41.0], [428.0, 46.0], [419.0, 5.0], [446.0, 22.0], [439.0, 91.0], [442.0, 29.5], [444.0, 62.0], [434.0, 16.0], [435.0, 38.0], [445.0, 30.0], [436.0, 38.0], [440.0, 48.0], [448.0, 46.5], [461.0, 43.0], [460.0, 25.0], [451.0, 24.0], [458.0, 9.5], [463.0, 66.0], [459.0, 33.0], [462.0, 25.0], [476.0, 21.0], [469.0, 26.0], [466.0, 26.0], [468.0, 23.0], [475.0, 45.0], [478.0, 61.5], [477.0, 26.0], [479.0, 44.0], [474.0, 63.0], [472.0, 41.0], [470.0, 62.5], [486.0, 25.0], [495.0, 63.0], [484.0, 60.0], [485.0, 45.0], [492.0, 22.0], [493.0, 24.0], [489.0, 19.0], [496.0, 42.0], [501.0, 30.0], [510.0, 34.0], [499.0, 40.0], [497.0, 75.0], [505.0, 70.0], [504.0, 19.0], [502.0, 41.0], [500.0, 57.0], [512.0, 34.0], [514.0, 31.0], [518.0, 35.5], [522.0, 26.5], [524.0, 35.0], [523.0, 129.0], [535.0, 39.0], [528.0, 63.0], [530.0, 99.0], [513.0, 26.0], [515.0, 58.0], [516.0, 47.0], [526.0, 9.0], [525.0, 35.0], [568.0, 17.0], [556.0, 35.0], [554.0, 42.0], [545.0, 19.0], [576.0, 51.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 576.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 18.0, "maxY": 181.0, "series": [{"data": [[18.0, 4.0], [20.0, 4.0], [25.0, 4.0], [26.0, 3.5], [28.0, 3.0], [33.0, 4.0], [34.0, 4.0], [36.0, 4.0], [38.0, 3.0], [45.0, 4.0], [54.0, 4.0], [56.0, 5.0], [57.0, 11.5], [58.0, 4.0], [59.0, 10.0], [62.0, 3.5], [67.0, 4.0], [70.0, 3.0], [68.0, 4.0], [74.0, 4.0], [72.0, 4.0], [73.0, 5.0], [78.0, 4.0], [79.0, 4.0], [77.0, 4.0], [80.0, 3.0], [82.0, 4.0], [81.0, 4.0], [84.0, 5.0], [87.0, 5.0], [86.0, 3.0], [90.0, 5.0], [91.0, 3.0], [88.0, 4.0], [89.0, 7.0], [92.0, 5.0], [94.0, 3.0], [95.0, 3.0], [99.0, 3.0], [102.0, 3.0], [100.0, 3.0], [104.0, 3.0], [105.0, 3.0], [107.0, 4.0], [110.0, 4.0], [108.0, 5.0], [112.0, 3.0], [113.0, 4.0], [114.0, 3.0], [115.0, 56.0], [117.0, 4.0], [116.0, 3.5], [119.0, 5.0], [121.0, 4.0], [122.0, 5.0], [123.0, 19.0], [126.0, 4.0], [124.0, 4.0], [125.0, 46.0], [127.0, 4.0], [128.0, 4.0], [130.0, 3.0], [132.0, 4.0], [131.0, 3.0], [134.0, 3.0], [135.0, 3.0], [129.0, 17.5], [142.0, 4.0], [136.0, 4.5], [140.0, 4.0], [137.0, 4.0], [141.0, 3.0], [139.0, 3.0], [138.0, 3.0], [146.0, 4.0], [144.0, 5.0], [150.0, 4.0], [148.0, 3.0], [147.0, 3.0], [145.0, 4.0], [158.0, 4.0], [152.0, 3.0], [156.0, 4.0], [155.0, 4.5], [157.0, 8.0], [154.0, 3.0], [164.0, 3.0], [162.0, 3.0], [163.0, 3.0], [165.0, 3.0], [166.0, 3.0], [167.0, 3.0], [160.0, 4.0], [161.0, 5.0], [168.0, 3.0], [172.0, 3.0], [175.0, 3.0], [173.0, 3.0], [174.0, 3.0], [170.0, 3.0], [169.0, 3.0], [171.0, 4.0], [182.0, 3.0], [177.0, 3.0], [183.0, 3.0], [178.0, 3.0], [181.0, 3.0], [176.0, 3.0], [179.0, 4.0], [180.0, 3.0], [188.0, 3.0], [185.0, 3.0], [187.0, 3.0], [184.0, 3.0], [186.0, 3.0], [190.0, 3.0], [191.0, 3.0], [189.0, 4.0], [198.0, 3.0], [197.0, 3.0], [195.0, 3.0], [196.0, 3.0], [194.0, 3.0], [192.0, 3.0], [193.0, 3.0], [199.0, 3.0], [202.0, 3.0], [206.0, 3.0], [204.0, 3.0], [205.0, 3.0], [203.0, 3.0], [201.0, 3.0], [200.0, 3.0], [207.0, 3.0], [210.0, 3.0], [215.0, 3.0], [209.0, 3.0], [213.0, 3.0], [214.0, 3.0], [212.0, 3.0], [208.0, 3.0], [211.0, 3.0], [219.0, 3.0], [223.0, 3.0], [222.0, 3.0], [216.0, 3.0], [218.0, 3.0], [221.0, 3.0], [217.0, 3.0], [220.0, 3.0], [226.0, 3.0], [227.0, 3.0], [225.0, 3.0], [224.0, 3.0], [230.0, 3.0], [228.0, 3.0], [231.0, 4.0], [229.0, 3.0], [232.0, 4.0], [234.0, 3.0], [233.0, 3.0], [235.0, 3.0], [236.0, 3.0], [237.0, 3.0], [238.0, 3.0], [239.0, 3.0], [241.0, 3.0], [243.0, 3.0], [244.0, 3.0], [245.0, 3.0], [246.0, 3.0], [242.0, 3.0], [240.0, 3.0], [247.0, 3.0], [249.0, 3.0], [251.0, 3.0], [252.0, 3.0], [253.0, 3.0], [254.0, 3.0], [250.0, 3.0], [255.0, 3.0], [248.0, 3.0], [258.0, 3.0], [256.0, 3.0], [260.0, 3.0], [261.0, 3.0], [262.0, 3.0], [263.0, 3.0], [271.0, 4.0], [270.0, 4.0], [268.0, 3.0], [269.0, 4.0], [259.0, 3.0], [266.0, 3.0], [267.0, 12.0], [265.0, 4.0], [264.0, 3.0], [257.0, 3.0], [273.0, 4.0], [272.0, 3.0], [275.0, 3.0], [274.0, 4.0], [276.0, 3.0], [283.0, 4.0], [280.0, 4.0], [287.0, 6.0], [281.0, 3.0], [286.0, 3.0], [285.0, 5.0], [284.0, 4.0], [282.0, 4.0], [279.0, 5.0], [277.0, 4.0], [278.0, 5.0], [290.0, 5.0], [288.0, 4.0], [292.0, 4.0], [291.0, 4.0], [300.0, 9.0], [303.0, 4.0], [302.0, 15.0], [301.0, 4.0], [289.0, 5.0], [296.0, 9.0], [293.0, 4.0], [297.0, 3.0], [299.0, 13.0], [298.0, 14.0], [294.0, 12.0], [295.0, 100.0], [305.0, 5.0], [309.0, 8.0], [306.0, 3.0], [308.0, 4.0], [304.0, 3.0], [307.0, 5.0], [311.0, 7.0], [312.0, 11.0], [318.0, 32.0], [317.0, 67.0], [315.0, 8.0], [313.0, 8.0], [310.0, 6.0], [332.0, 3.0], [335.0, 5.0], [334.0, 5.0], [333.0, 4.0], [331.0, 4.0], [326.0, 4.0], [330.0, 4.0], [329.0, 4.0], [328.0, 3.0], [325.0, 4.0], [324.0, 3.0], [327.0, 3.0], [322.0, 3.0], [321.0, 5.0], [343.0, 8.0], [337.0, 5.0], [340.0, 5.0], [341.0, 6.0], [342.0, 4.0], [344.0, 18.0], [345.0, 3.0], [346.0, 13.5], [347.0, 22.0], [336.0, 7.5], [351.0, 27.0], [350.0, 35.0], [349.0, 58.5], [366.0, 23.5], [361.0, 7.0], [360.0, 4.0], [367.0, 7.0], [362.0, 37.0], [364.0, 21.0], [356.0, 24.0], [365.0, 10.0], [354.0, 16.0], [353.0, 47.0], [352.0, 27.0], [380.0, 32.0], [368.0, 4.0], [375.0, 134.0], [377.0, 16.0], [374.0, 29.0], [372.0, 16.0], [370.0, 30.0], [371.0, 17.0], [383.0, 9.0], [382.0, 18.0], [378.0, 33.0], [379.0, 45.0], [387.0, 33.0], [391.0, 9.5], [386.0, 22.0], [388.0, 11.0], [390.0, 6.0], [392.0, 7.0], [394.0, 12.0], [395.0, 6.0], [393.0, 11.0], [389.0, 11.0], [385.0, 63.0], [384.0, 46.0], [398.0, 50.0], [397.0, 6.0], [396.0, 17.0], [399.0, 5.0], [412.0, 10.0], [414.0, 27.0], [407.0, 69.0], [413.0, 17.0], [408.0, 12.0], [415.0, 36.0], [410.0, 6.0], [404.0, 5.0], [405.0, 15.0], [406.0, 45.0], [402.0, 4.0], [400.0, 4.0], [403.0, 6.0], [429.0, 14.0], [430.0, 19.0], [421.0, 35.0], [418.0, 47.0], [420.0, 51.0], [422.0, 37.0], [423.0, 23.0], [426.0, 34.0], [427.0, 181.0], [425.0, 14.0], [424.0, 39.0], [428.0, 45.0], [419.0, 5.0], [446.0, 21.0], [439.0, 74.0], [442.0, 29.5], [444.0, 51.0], [434.0, 16.0], [435.0, 38.0], [445.0, 30.0], [436.0, 38.0], [440.0, 47.0], [448.0, 44.0], [461.0, 37.5], [460.0, 25.0], [451.0, 24.0], [458.0, 9.5], [463.0, 66.0], [459.0, 33.0], [462.0, 25.0], [476.0, 21.0], [469.0, 23.0], [466.0, 25.0], [468.0, 23.0], [475.0, 45.0], [478.0, 60.0], [477.0, 26.0], [479.0, 44.0], [474.0, 63.0], [472.0, 40.0], [470.0, 56.0], [486.0, 25.0], [495.0, 61.0], [484.0, 55.0], [485.0, 45.0], [492.0, 22.0], [493.0, 24.0], [489.0, 19.0], [496.0, 41.0], [501.0, 30.0], [510.0, 34.0], [499.0, 40.0], [497.0, 65.0], [505.0, 70.0], [504.0, 19.0], [502.0, 41.0], [500.0, 57.0], [512.0, 33.0], [514.0, 30.0], [518.0, 35.5], [522.0, 26.5], [524.0, 35.0], [523.0, 111.0], [535.0, 39.0], [528.0, 60.0], [530.0, 99.0], [513.0, 26.0], [515.0, 57.0], [516.0, 45.0], [526.0, 9.0], [525.0, 34.0], [568.0, 16.0], [556.0, 35.0], [554.0, 42.0], [545.0, 19.0], [576.0, 49.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 576.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.133333333333334, "minX": 1.5983976E12, "maxY": 300.0, "series": [{"data": [[1.5983988E12, 208.05], [1.59839958E12, 269.1], [1.5983982E12, 179.9], [1.59840018E12, 300.0], [1.5984006E12, 289.18333333333334], [1.59839778E12, 180.01666666666668], [1.59839898E12, 238.76666666666668], [1.59839802E12, 180.03333333333333], [1.59840036E12, 296.5], [1.5983976E12, 6.133333333333334], [1.59839916E12, 237.96666666666667], [1.59839862E12, 208.3], [1.59839976E12, 268.8], [1.59840054E12, 280.96666666666664], [1.59839784E12, 180.1], [1.59839886E12, 217.61666666666667], [1.59839952E12, 267.3], [1.59839934E12, 238.08333333333334], [1.59839844E12, 210.1], [1.59839994E12, 272.01666666666665], [1.5983991E12, 237.9], [1.59839868E12, 208.13333333333333], [1.5983997E12, 269.4], [1.59839826E12, 199.6], [1.59840012E12, 291.6333333333333], [1.59840072E12, 240.18333333333334], [1.59839766E12, 171.16666666666666], [1.5983985E12, 208.13333333333333], [1.59839988E12, 267.7], [1.5983979E12, 180.3], [1.59840048E12, 288.25], [1.59839808E12, 180.31666666666666], [1.5984003E12, 295.23333333333335], [1.59839928E12, 237.96666666666667], [1.59839832E12, 209.95], [1.59840006E12, 267.0], [1.59840066E12, 281.43333333333334], [1.59839772E12, 180.05], [1.59839904E12, 238.33333333333334], [1.59839892E12, 238.13333333333333], [1.59839946E12, 239.7], [1.59839922E12, 238.06666666666666], [1.59839874E12, 207.96666666666667], [1.59839964E12, 268.96666666666664], [1.59839814E12, 180.18333333333334], [1.59840024E12, 296.23333333333335], [1.5983994E12, 238.6], [1.59839838E12, 209.88333333333333], [1.5984E12, 270.26666666666665], [1.59839856E12, 208.2], [1.59839982E12, 268.1166666666667], [1.59839796E12, 180.1], [1.59840042E12, 295.3333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59840072E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.133333333333334, "minX": 1.5983976E12, "maxY": 300.0, "series": [{"data": [[1.5983988E12, 208.03333333333333], [1.59839958E12, 269.06666666666666], [1.5983982E12, 179.93333333333334], [1.59840018E12, 300.0], [1.5984006E12, 289.21666666666664], [1.59839778E12, 180.01666666666668], [1.59839898E12, 238.76666666666668], [1.59839802E12, 180.01666666666668], [1.59840036E12, 296.5], [1.5983976E12, 6.133333333333334], [1.59839916E12, 237.98333333333332], [1.59839862E12, 208.33333333333334], [1.59839976E12, 268.8], [1.59840054E12, 280.93333333333334], [1.59839784E12, 180.11666666666667], [1.59839886E12, 217.63333333333333], [1.59839952E12, 267.3], [1.59839934E12, 237.9], [1.59839844E12, 210.1], [1.59839994E12, 272.06666666666666], [1.5983991E12, 237.88333333333333], [1.59839868E12, 208.13333333333333], [1.5983997E12, 269.4], [1.59839826E12, 199.6], [1.59840012E12, 291.65], [1.59840072E12, 240.18333333333334], [1.59839766E12, 171.16666666666666], [1.5983985E12, 208.11666666666667], [1.59839988E12, 267.9], [1.5983979E12, 180.28333333333333], [1.59840048E12, 288.3], [1.59839808E12, 180.25], [1.5984003E12, 295.23333333333335], [1.59839928E12, 238.0], [1.59839832E12, 209.93333333333334], [1.59840006E12, 266.98333333333335], [1.59840066E12, 281.43333333333334], [1.59839772E12, 180.03333333333333], [1.59839904E12, 238.33333333333334], [1.59839892E12, 238.13333333333333], [1.59839946E12, 239.73333333333332], [1.59839922E12, 238.03333333333333], [1.59839874E12, 207.96666666666667], [1.59839964E12, 269.0], [1.59839814E12, 180.23333333333332], [1.59840024E12, 296.23333333333335], [1.5983994E12, 238.76666666666668], [1.59839838E12, 209.88333333333333], [1.5984E12, 270.28333333333336], [1.59839856E12, 208.18333333333334], [1.59839982E12, 267.85], [1.59839796E12, 180.11666666666667], [1.59840042E12, 295.28333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59840072E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.066666666666667, "minX": 1.5983976E12, "maxY": 150.01666666666668, "series": [{"data": [[1.5983988E12, 104.01666666666667], [1.59839958E12, 134.55], [1.5983982E12, 89.95], [1.59840018E12, 150.01666666666668], [1.5984006E12, 144.6], [1.59839778E12, 90.01666666666667], [1.59839898E12, 119.38333333333334], [1.59839802E12, 90.01666666666667], [1.59840036E12, 148.25], [1.5983976E12, 3.066666666666667], [1.59839916E12, 118.98333333333333], [1.59839862E12, 104.15], [1.59839976E12, 134.41666666666666], [1.59840054E12, 140.48333333333332], [1.59839784E12, 90.05], [1.59839886E12, 108.81666666666666], [1.59839952E12, 133.65], [1.59839934E12, 119.01666666666667], [1.59839844E12, 105.05], [1.59839994E12, 136.03333333333333], [1.5983991E12, 118.95], [1.59839868E12, 104.06666666666666], [1.5983997E12, 134.7], [1.59839826E12, 99.8], [1.59840012E12, 145.81666666666666], [1.59840072E12, 120.21666666666667], [1.59839766E12, 85.58333333333333], [1.5983985E12, 104.06666666666666], [1.59839988E12, 133.88333333333333], [1.5983979E12, 90.15], [1.59840048E12, 144.21666666666667], [1.59839808E12, 90.11666666666666], [1.5984003E12, 147.61666666666667], [1.59839928E12, 118.98333333333333], [1.59839832E12, 104.96666666666667], [1.59840006E12, 133.5], [1.59840066E12, 140.71666666666667], [1.59839772E12, 90.01666666666667], [1.59839904E12, 119.16666666666667], [1.59839892E12, 119.06666666666666], [1.59839946E12, 119.86666666666666], [1.59839922E12, 119.03333333333333], [1.59839874E12, 103.98333333333333], [1.59839964E12, 134.48333333333332], [1.59839814E12, 90.13333333333334], [1.59840024E12, 148.11666666666667], [1.5983994E12, 119.31666666666666], [1.59839838E12, 104.95], [1.5984E12, 135.13333333333333], [1.59839856E12, 104.1], [1.59839982E12, 134.0], [1.59839796E12, 90.05], [1.59840042E12, 147.68333333333334]], "isOverall": false, "label": "Open Main Page-success", "isController": false}, {"data": [[1.5983988E12, 104.01666666666667], [1.59839958E12, 134.51666666666668], [1.5983982E12, 89.98333333333333], [1.59840018E12, 149.98333333333332], [1.5984006E12, 144.61666666666667], [1.59839778E12, 90.0], [1.59839898E12, 119.38333333333334], [1.59839802E12, 90.0], [1.59840036E12, 148.25], [1.5983976E12, 3.066666666666667], [1.59839916E12, 119.0], [1.59839862E12, 104.18333333333334], [1.59839976E12, 134.38333333333333], [1.59840054E12, 140.45], [1.59839784E12, 90.06666666666666], [1.59839886E12, 108.81666666666666], [1.59839952E12, 133.65], [1.59839934E12, 118.88333333333334], [1.59839844E12, 105.05], [1.59839994E12, 136.03333333333333], [1.5983991E12, 118.93333333333334], [1.59839868E12, 104.06666666666666], [1.5983997E12, 134.7], [1.59839826E12, 99.8], [1.59840012E12, 145.83333333333334], [1.59840072E12, 119.96666666666667], [1.59839766E12, 85.58333333333333], [1.5983985E12, 104.05], [1.59839988E12, 134.01666666666668], [1.5983979E12, 90.13333333333334], [1.59840048E12, 144.08333333333334], [1.59839808E12, 90.13333333333334], [1.5984003E12, 147.61666666666667], [1.59839928E12, 119.01666666666667], [1.59839832E12, 104.96666666666667], [1.59840006E12, 133.48333333333332], [1.59840066E12, 140.71666666666667], [1.59839772E12, 90.01666666666667], [1.59839904E12, 119.16666666666667], [1.59839892E12, 119.06666666666666], [1.59839946E12, 119.86666666666666], [1.59839922E12, 119.0], [1.59839874E12, 103.98333333333333], [1.59839964E12, 134.51666666666668], [1.59839814E12, 90.1], [1.59840024E12, 148.11666666666667], [1.5983994E12, 119.45], [1.59839838E12, 104.93333333333334], [1.5984E12, 135.15], [1.59839856E12, 104.08333333333333], [1.59839982E12, 133.85], [1.59839796E12, 90.06666666666666], [1.59840042E12, 147.6]], "isOverall": false, "label": "Make an order-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59840072E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.133333333333334, "minX": 1.5983976E12, "maxY": 300.0, "series": [{"data": [[1.5983988E12, 208.03333333333333], [1.59839958E12, 269.06666666666666], [1.5983982E12, 179.93333333333334], [1.59840018E12, 300.0], [1.5984006E12, 289.21666666666664], [1.59839778E12, 180.01666666666668], [1.59839898E12, 238.76666666666668], [1.59839802E12, 180.01666666666668], [1.59840036E12, 296.5], [1.5983976E12, 6.133333333333334], [1.59839916E12, 237.98333333333332], [1.59839862E12, 208.33333333333334], [1.59839976E12, 268.8], [1.59840054E12, 280.93333333333334], [1.59839784E12, 180.11666666666667], [1.59839886E12, 217.63333333333333], [1.59839952E12, 267.3], [1.59839934E12, 237.9], [1.59839844E12, 210.1], [1.59839994E12, 272.06666666666666], [1.5983991E12, 237.88333333333333], [1.59839868E12, 208.13333333333333], [1.5983997E12, 269.4], [1.59839826E12, 199.6], [1.59840012E12, 291.65], [1.59840072E12, 240.18333333333334], [1.59839766E12, 171.16666666666666], [1.5983985E12, 208.11666666666667], [1.59839988E12, 267.9], [1.5983979E12, 180.28333333333333], [1.59840048E12, 288.3], [1.59839808E12, 180.25], [1.5984003E12, 295.23333333333335], [1.59839928E12, 238.0], [1.59839832E12, 209.93333333333334], [1.59840006E12, 266.98333333333335], [1.59840066E12, 281.43333333333334], [1.59839772E12, 180.03333333333333], [1.59839904E12, 238.33333333333334], [1.59839892E12, 238.13333333333333], [1.59839946E12, 239.73333333333332], [1.59839922E12, 238.03333333333333], [1.59839874E12, 207.96666666666667], [1.59839964E12, 269.0], [1.59839814E12, 180.23333333333332], [1.59840024E12, 296.23333333333335], [1.5983994E12, 238.76666666666668], [1.59839838E12, 209.88333333333333], [1.5984E12, 270.28333333333336], [1.59839856E12, 208.18333333333334], [1.59839982E12, 267.85], [1.59839796E12, 180.11666666666667], [1.59840042E12, 295.28333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59840072E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

