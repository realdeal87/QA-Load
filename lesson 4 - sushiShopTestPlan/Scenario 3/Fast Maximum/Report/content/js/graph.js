/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 938870.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 4.0], [92.1, 4.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 4.0], [93.1, 4.0], [93.2, 4.0], [93.3, 4.0], [93.4, 4.0], [93.5, 4.0], [93.6, 4.0], [93.7, 4.0], [93.8, 4.0], [93.9, 4.0], [94.0, 4.0], [94.1, 4.0], [94.2, 4.0], [94.3, 4.0], [94.4, 4.0], [94.5, 4.0], [94.6, 4.0], [94.7, 4.0], [94.8, 4.0], [94.9, 4.0], [95.0, 4.0], [95.1, 4.0], [95.2, 4.0], [95.3, 4.0], [95.4, 4.0], [95.5, 5.0], [95.6, 5.0], [95.7, 5.0], [95.8, 5.0], [95.9, 5.0], [96.0, 5.0], [96.1, 5.0], [96.2, 5.0], [96.3, 5.0], [96.4, 5.0], [96.5, 5.0], [96.6, 5.0], [96.7, 5.0], [96.8, 5.0], [96.9, 5.0], [97.0, 5.0], [97.1, 5.0], [97.2, 5.0], [97.3, 5.0], [97.4, 5.0], [97.5, 6.0], [97.6, 6.0], [97.7, 6.0], [97.8, 6.0], [97.9, 6.0], [98.0, 6.0], [98.1, 6.0], [98.2, 7.0], [98.3, 7.0], [98.4, 7.0], [98.5, 7.0], [98.6, 8.0], [98.7, 8.0], [98.8, 8.0], [98.9, 9.0], [99.0, 9.0], [99.1, 10.0], [99.2, 11.0], [99.3, 11.0], [99.4, 12.0], [99.5, 14.0], [99.6, 15.0], [99.7, 17.0], [99.8, 19.0], [99.9, 25.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 4.0], [68.2, 4.0], [68.3, 4.0], [68.4, 4.0], [68.5, 4.0], [68.6, 4.0], [68.7, 4.0], [68.8, 4.0], [68.9, 4.0], [69.0, 4.0], [69.1, 4.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 4.0], [69.8, 4.0], [69.9, 4.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 4.0], [73.3, 4.0], [73.4, 4.0], [73.5, 4.0], [73.6, 4.0], [73.7, 4.0], [73.8, 4.0], [73.9, 4.0], [74.0, 4.0], [74.1, 4.0], [74.2, 4.0], [74.3, 4.0], [74.4, 4.0], [74.5, 4.0], [74.6, 4.0], [74.7, 4.0], [74.8, 4.0], [74.9, 4.0], [75.0, 4.0], [75.1, 4.0], [75.2, 4.0], [75.3, 4.0], [75.4, 4.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 5.0], [91.1, 5.0], [91.2, 5.0], [91.3, 5.0], [91.4, 5.0], [91.5, 5.0], [91.6, 5.0], [91.7, 5.0], [91.8, 5.0], [91.9, 5.0], [92.0, 5.0], [92.1, 5.0], [92.2, 5.0], [92.3, 5.0], [92.4, 5.0], [92.5, 5.0], [92.6, 5.0], [92.7, 5.0], [92.8, 5.0], [92.9, 5.0], [93.0, 5.0], [93.1, 5.0], [93.2, 5.0], [93.3, 5.0], [93.4, 5.0], [93.5, 5.0], [93.6, 5.0], [93.7, 5.0], [93.8, 5.0], [93.9, 5.0], [94.0, 5.0], [94.1, 5.0], [94.2, 5.0], [94.3, 5.0], [94.4, 5.0], [94.5, 5.0], [94.6, 5.0], [94.7, 5.0], [94.8, 5.0], [94.9, 5.0], [95.0, 5.0], [95.1, 5.0], [95.2, 5.0], [95.3, 6.0], [95.4, 6.0], [95.5, 6.0], [95.6, 6.0], [95.7, 6.0], [95.8, 6.0], [95.9, 6.0], [96.0, 6.0], [96.1, 6.0], [96.2, 6.0], [96.3, 6.0], [96.4, 6.0], [96.5, 6.0], [96.6, 6.0], [96.7, 6.0], [96.8, 6.0], [96.9, 6.0], [97.0, 7.0], [97.1, 7.0], [97.2, 7.0], [97.3, 7.0], [97.4, 7.0], [97.5, 7.0], [97.6, 7.0], [97.7, 8.0], [97.8, 8.0], [97.9, 8.0], [98.0, 8.0], [98.1, 9.0], [98.2, 9.0], [98.3, 9.0], [98.4, 10.0], [98.5, 10.0], [98.6, 11.0], [98.7, 11.0], [98.8, 12.0], [98.9, 12.0], [99.0, 13.0], [99.1, 14.0], [99.2, 15.0], [99.3, 16.0], [99.4, 18.0], [99.5, 19.0], [99.6, 21.0], [99.7, 24.0], [99.8, 27.0], [99.9, 32.0], [100.0, 938870.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 271103.0, "series": [{"data": [[0.0, 270956.0], [300.0, 5.0], [3000.0, 1.0], [200.0, 70.0], [1000.0, 83.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 271103.0], [200.0, 8.0], [938800.0, 1.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 938800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 542142.0, "series": [{"data": [[0.0, 542142.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 83.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.4999999999999996, "minX": 1.59839346E12, "maxY": 309.2556302700391, "series": [{"data": [[1.59839436E12, 75.71904656808677], [1.59839658E12, 267.572324227497], [1.59839496E12, 125.59792856194386], [1.59839598E12, 216.51741884402176], [1.59839616E12, 231.49966743034548], [1.59839394E12, 40.86378600823045], [1.59839556E12, 178.07958214624867], [1.5983964E12, 252.53088934148], [1.59839358E12, 11.020634920634906], [1.59839418E12, 60.82093663911842], [1.5983958E12, 200.54977838390766], [1.59839538E12, 160.57995846313628], [1.59839376E12, 25.90196078431369], [1.59839478E12, 110.72477755994592], [1.598397E12, 305.47893519824004], [1.59839562E12, 183.54062788550323], [1.598394E12, 45.8437042459736], [1.59839502E12, 130.86272506704088], [1.5983946E12, 95.71239092495635], [1.59839682E12, 290.44920389733596], [1.5983952E12, 145.5742098030237], [1.59839622E12, 236.4918660978967], [1.59839544E12, 166.6877518130535], [1.59839706E12, 309.2556302700391], [1.59839646E12, 257.5098795821963], [1.59839484E12, 115.72990910402547], [1.59839382E12, 30.886462882096097], [1.59839664E12, 272.6789077212828], [1.59839442E12, 80.99358310908696], [1.59839604E12, 221.51187069832255], [1.59839688E12, 295.44378283712587], [1.59839406E12, 50.81848184818475], [1.59839466E12, 100.74734748010616], [1.59839628E12, 241.47498407755958], [1.59839586E12, 206.28896832654468], [1.59839364E12, 15.957081545064378], [1.59839424E12, 65.81637843336749], [1.59839526E12, 150.6589147286822], [1.59839388E12, 35.874178403755934], [1.5983961E12, 226.50563071574294], [1.59839448E12, 85.68421052631608], [1.5983955E12, 172.5404692082114], [1.59839568E12, 188.48805246137175], [1.5983967E12, 277.0383857054827], [1.59839346E12, 2.4999999999999996], [1.59839508E12, 135.79948333128308], [1.59839592E12, 211.50815019057632], [1.5983937E12, 20.92845528455283], [1.59839532E12, 155.59944277753894], [1.59839694E12, 300.4917393299694], [1.5983949E12, 120.62674595491617], [1.5983943E12, 70.72671394799059], [1.59839652E12, 262.5596138794688], [1.59839514E12, 140.61752846299808], [1.59839454E12, 90.70655375552272], [1.59839352E12, 6.215151515151511], [1.59839676E12, 283.0795062624791], [1.59839412E12, 55.83433373349337], [1.59839634E12, 247.42688842688887], [1.59839472E12, 105.70173775671387], [1.59839574E12, 193.7744814912053]], "isOverall": false, "label": "bzm - Arrivals Thread Group [Scenario 3 Fast Maximum]-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59839706E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.5046153846153847, "minX": 1.0, "maxY": 587.8953922789559, "series": [{"data": [[2.0, 4.0], [3.0, 3.7222222222222228], [4.0, 3.678571428571429], [5.0, 3.939393939393939], [6.0, 3.5], [7.0, 4.000000000000002], [8.0, 3.4545454545454555], [9.0, 3.76923076923077], [10.0, 2.916666666666667], [11.0, 3.3], [12.0, 5.621951219512195], [13.0, 3.433333333333332], [14.0, 3.0485436893203897], [15.0, 3.247619047619047], [16.0, 3.166666666666667], [17.0, 3.3135593220338984], [18.0, 2.726562499999999], [19.0, 3.071942446043165], [20.0, 3.1071428571428563], [21.0, 2.6363636363636362], [22.0, 2.84516129032258], [23.0, 3.33132530120482], [24.0, 3.3139534883720936], [25.0, 3.022222222222225], [26.0, 2.879999999999999], [27.0, 3.135416666666666], [28.0, 2.5223880597014916], [29.0, 2.848341232227486], [30.0, 2.5140186915887854], [31.0, 2.666666666666666], [32.0, 2.2739130434782613], [33.0, 2.4745762711864443], [34.0, 2.25506072874494], [35.0, 2.7108433734939767], [36.0, 2.3055555555555554], [37.0, 2.2716981132075476], [38.0, 2.460144927536232], [39.0, 2.9785714285714264], [40.0, 2.70212765957447], [41.0, 2.895833333333334], [42.0, 2.8892617449664444], [43.0, 3.057877813504823], [44.0, 2.770440251572327], [45.0, 3.8224299065420566], [46.0, 22.425925925925927], [47.0, 3.539936102236422], [48.0, 3.4836065573770463], [49.0, 3.358543417366947], [50.0, 3.1795580110497235], [51.0, 3.7199999999999998], [52.0, 2.7580645161290325], [53.0, 2.75461741424802], [54.0, 3.0025252525252517], [55.0, 2.8934010152284277], [56.0, 2.8813559322033897], [57.0, 2.7456790123456796], [58.0, 2.588807785888079], [59.0, 2.274599542334097], [60.0, 2.557109557109559], [61.0, 3.56338028169014], [62.0, 2.4930875576036864], [63.0, 2.12826086956522], [64.0, 2.7748917748917727], [65.0, 2.3034934497816586], [66.0, 2.9885057471264362], [67.0, 2.278481012658229], [68.0, 2.7659137577002073], [69.0, 2.9196787148594363], [70.0, 3.354775828460037], [71.0, 3.999999999999999], [72.0, 2.677484787018256], [73.0, 2.500000000000001], [74.0, 3.3018518518518527], [75.0, 2.791821561338289], [76.0, 4.3888888888888875], [77.0, 3.3610038610038626], [78.0, 2.6859649122807037], [79.0, 3.008756567425568], [80.0, 3.3710247349823312], [81.0, 104.13913043478263], [82.0, 11.285156250000002], [83.0, 3.1031096563011453], [84.0, 2.9293924466338286], [85.0, 3.0275526742301464], [86.0, 4.105633802816901], [87.0, 2.68651488616462], [88.0, 2.6682464454976347], [89.0, 2.6101694915254234], [90.0, 2.47723704866562], [91.0, 3.0555555555555562], [92.0, 2.6661264181523463], [93.0, 2.222388059701491], [94.0, 2.322533136966131], [95.0, 2.7507552870090652], [96.0, 3.3469387755102042], [97.0, 2.81391830559758], [98.0, 2.759887005649719], [99.0, 3.4500768049155153], [100.0, 6.073968705547654], [101.0, 2.9913419913419923], [102.0, 2.2846924177396284], [103.0, 2.2189189189189205], [104.0, 2.5543624161073817], [105.0, 1.938748335552594], [106.0, 3.0388888888888874], [107.0, 2.1140472878998606], [108.0, 2.99348109517601], [109.0, 2.5693904020752254], [110.0, 2.6032540675844804], [111.0, 7.601809954751129], [112.0, 2.207462686567166], [113.0, 2.6104651162790717], [114.0, 2.56987951807229], [115.0, 2.0998735777496815], [116.0, 6.6929460580912865], [117.0, 2.295580110497238], [118.0, 2.3167420814479662], [119.0, 3.077360637087598], [120.0, 5.980742778541947], [121.0, 6.383775351014045], [122.0, 4.387475538160471], [123.0, 2.675707547169809], [124.0, 2.569264069264068], [125.0, 2.1640271493212673], [126.0, 3.043280182232345], [127.0, 2.4635658914728653], [128.0, 2.492256637168144], [129.0, 2.357370095440087], [130.0, 2.7261774370208074], [131.0, 31.525345622119787], [132.0, 10.562300319488811], [133.0, 3.064994298745725], [134.0, 3.6692111959287517], [135.0, 11.759615384615374], [136.0, 8.388586956521735], [137.0, 4.175], [139.0, 2.3415300546448097], [140.0, 2.90509490509491], [141.0, 5.215568862275446], [142.0, 2.632621951219508], [143.0, 2.5908667287977662], [138.0, 2.4133858267716533], [144.0, 3.124880838894186], [145.0, 2.5076045627376415], [146.0, 3.0949913644214164], [147.0, 2.500713266761769], [148.0, 2.5243088655862693], [149.0, 2.656044985941893], [150.0, 2.682877406281661], [151.0, 2.1424999999999996], [152.0, 1.5046153846153847], [153.0, 1.9021237303785796], [154.0, 2.070143884892085], [155.0, 2.2458410351201503], [156.0, 2.5596491228070177], [157.0, 2.2374371859296476], [158.0, 2.328853046594984], [159.0, 2.178260869565217], [160.0, 2.4941704035874444], [161.0, 2.377326565143826], [162.0, 1.876513317191282], [163.0, 2.2703165098374702], [164.0, 1.8756013745704478], [165.0, 2.326644370122635], [166.0, 3.1063348416289576], [167.0, 3.023972602739724], [168.0, 2.7270363951473118], [169.0, 2.6579612468407756], [170.0, 2.11184210526316], [171.0, 4.198150594451786], [172.0, 2.522111269614842], [173.0, 2.34445371142619], [174.0, 2.664378860672618], [175.0, 2.9261311172668494], [176.0, 2.9963099630996326], [177.0, 2.586114819759678], [178.0, 2.0539215686274535], [179.0, 2.370574350904798], [180.0, 2.0413739266198276], [181.0, 3.6737288135593227], [182.0, 3.3823529411764692], [183.0, 2.7694831829368343], [184.0, 2.729361091170138], [185.0, 2.9814957594448717], [186.0, 3.195828505214364], [187.0, 2.641370869033043], [188.0, 2.486209613869188], [189.0, 2.2442464736451355], [190.0, 2.1897321428571415], [191.0, 2.5813397129186613], [192.0, 1.9870298313878092], [193.0, 2.5399999999999996], [194.0, 2.136363636363637], [195.0, 1.8662337662337636], [196.0, 2.3839351510685303], [197.0, 1.8928571428571432], [198.0, 3.6690391459074725], [199.0, 3.4340277777777795], [200.0, 3.0615711252653943], [201.0, 2.216101694915257], [202.0, 2.862601028655401], [203.0, 2.929949238578679], [204.0, 2.5707491082045197], [205.0, 2.454873646209388], [206.0, 2.381478921907395], [207.0, 1.8847736625514386], [208.0, 2.279411764705884], [209.0, 2.1418002466091255], [210.0, 1.8655052264808367], [211.0, 1.7495003331112577], [212.0, 2.2641379310344854], [213.0, 1.92200557103064], [214.0, 1.8745800671892514], [215.0, 2.0775740479548683], [216.0, 2.5157068062827195], [217.0, 1.7610441767068248], [218.0, 2.313518696069033], [219.0, 2.1112311015118808], [220.0, 1.840425531914894], [221.0, 1.9458943348185884], [222.0, 2.653554175293304], [223.0, 2.3181818181818206], [224.0, 2.185671039354189], [225.0, 2.1734693877550986], [226.0, 1.894801980198019], [227.0, 1.8121405750798714], [228.0, 2.2239631336405563], [229.0, 1.921348314606743], [230.0, 1.630057803468208], [231.0, 1.8679361179361158], [232.0, 1.877304513668149], [233.0, 2.2643678160919527], [234.0, 1.7167167167167185], [235.0, 1.6847690387016232], [236.0, 2.216556688662271], [237.0, 1.7329650092080995], [238.0, 2.2111111111111104], [239.0, 2.2222222222222197], [240.0, 2.1318537859007844], [241.0, 2.9513888888888893], [242.0, 2.7786885245901622], [243.0, 2.1974714027694215], [244.0, 2.039695945945941], [245.0, 1.801548886737658], [246.0, 2.24639423076923], [247.0, 2.8511979823455205], [248.0, 3.477678571428568], [249.0, 2.3906474820143915], [250.0, 2.5500782472613444], [251.0, 2.8974197608558874], [252.0, 2.9654586636466567], [253.0, 3.0740514075887386], [254.0, 3.0532003325020773], [255.0, 3.8780687397708675], [257.0, 2.7025813692480325], [256.0, 2.581325301204815], [258.0, 3.049653579676674], [259.0, 4.246431969552811], [260.0, 4.70626003210272], [261.0, 3.1303177167474368], [262.0, 3.2155223880597013], [263.0, 2.8333333333333313], [264.0, 2.951501154734413], [270.0, 5.7625845229150965], [271.0, 2.2122093023255838], [268.0, 3.7656249999999916], [269.0, 4.813829787234029], [265.0, 2.4067524115755625], [266.0, 2.4238660907127443], [267.0, 1.9280782508630614], [273.0, 3.4938936781609207], [272.0, 2.578158458244109], [274.0, 4.09569732937686], [275.0, 2.758190327613103], [276.0, 2.4722638680659683], [277.0, 2.1240093240093256], [278.0, 2.768027210884353], [279.0, 1.9483870967741923], [280.0, 1.9821011673151763], [286.0, 2.0638547158758063], [287.0, 2.0515970515970525], [284.0, 1.9388075313807545], [285.0, 2.5138274336283164], [281.0, 1.7303785780240077], [282.0, 2.420168067226891], [283.0, 2.2117117117117124], [289.0, 1.7313141182217868], [288.0, 1.6171919770773646], [290.0, 2.533505154639176], [291.0, 2.9045020463847204], [292.0, 2.7888059701492534], [293.0, 2.5704809286898858], [294.0, 2.3856707317073202], [295.0, 2.7786377708978347], [296.0, 2.579537953795381], [302.0, 1.9407504937458848], [303.0, 1.838421052631576], [300.0, 2.2496263079222736], [301.0, 2.04970178926441], [297.0, 2.3816689466484293], [298.0, 2.458489555436532], [299.0, 3.012946659761783], [304.0, 2.2683049147442294], [305.0, 1.8821446636317656], [306.0, 1.7575757575757571], [307.0, 3.833333333333333], [308.0, 2.5], [1.0, 21.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[202.42516644228243, 2.75372812275228]], "isOverall": false, "label": "Open Main Page-Aggregated", "isController": false}, {"data": [[2.0, 6.272727272727273], [3.0, 6.166666666666667], [4.0, 6.0], [5.0, 6.333333333333334], [6.0, 6.6], [7.0, 6.391304347826087], [8.0, 5.163636363636364], [9.0, 5.276923076923079], [10.0, 4.972602739726028], [11.0, 4.599999999999999], [12.0, 5.085365853658537], [13.0, 5.122222222222221], [14.0, 5.68627450980392], [15.0, 5.363636363636365], [16.0, 8.5625], [17.0, 6.129310344827585], [18.0, 5.0546875], [19.0, 4.717391304347827], [20.0, 4.895833333333332], [21.0, 4.947368421052632], [22.0, 4.628205128205128], [23.0, 4.274390243902439], [24.0, 4.457142857142856], [25.0, 4.486187845303867], [26.0, 5.086956521739132], [27.0, 4.492146596858636], [28.0, 4.363184079601989], [29.0, 4.421800947867295], [30.0, 4.227272727272729], [31.0, 3.75], [32.0, 4.048034934497814], [33.0, 4.24896265560166], [34.0, 3.7827868852459035], [35.0, 4.086274509803924], [36.0, 5.485714285714286], [37.0, 3.873076923076922], [38.0, 3.930909090909092], [39.0, 4.163120567375886], [40.0, 3.600000000000001], [41.0, 5.179999999999999], [42.0, 3.972222222222223], [43.0, 4.332268370607025], [44.0, 4.094043887147336], [45.0, 4.359999999999996], [46.0, 5.776699029126213], [47.0, 5.317518248175183], [48.0, 5.18980169971671], [49.0, 4.890756302521007], [50.0, 4.928571428571433], [51.0, 5.423423423423425], [52.0, 4.192810457516338], [53.0, 4.257142857142857], [54.0, 4.235897435897439], [55.0, 3.9949874686716793], [56.0, 4.6], [57.0, 3.3821989528795817], [58.0, 3.668280871670704], [59.0, 3.4873563218390813], [60.0, 3.5425287356321844], [61.0, 4.274999999999999], [62.0, 3.428571428571429], [63.0, 3.4220779220779236], [64.0, 3.7294372294372296], [65.0, 3.598290598290598], [66.0, 4.20289855072464], [67.0, 3.3171912832929777], [68.0, 3.729124236252546], [69.0, 4.327999999999996], [70.0, 6.036608863198462], [71.0, 5.006976744186039], [72.0, 4.951219512195122], [73.0, 4.567877629063103], [74.0, 4.555765595463137], [75.0, 4.591575091575092], [76.0, 4.720357941834451], [77.0, 4.65326633165829], [78.0, 4.499999999999993], [79.0, 4.497335701598586], [80.0, 4.266666666666668], [81.0, 4.332487309644671], [82.0, 4.497907949790791], [83.0, 4.460655737704912], [84.0, 5.883333333333334], [85.0, 5.757774140752863], [86.0, 4.4636363636363665], [87.0, 4.585635359116022], [88.0, 4.211631663974149], [89.0, 3.949843260188087], [90.0, 3.8363914373088703], [91.0, 4.026223776223779], [92.0, 4.261682242990655], [93.0, 3.618759455370653], [94.0, 3.642642642642645], [95.0, 3.662222222222221], [96.0, 3.9714738510301104], [97.0, 4.004098360655739], [98.0, 3.8632352941176453], [99.0, 3.8822629969418996], [100.0, 3.923717059639389], [101.0, 3.7048022598870043], [102.0, 3.8638497652582178], [103.0, 3.399449035812674], [104.0, 3.6733601070950472], [105.0, 3.375328083989503], [106.0, 3.4301412872841452], [107.0, 3.817589576547233], [108.0, 3.6312849162011185], [109.0, 3.4752604166666656], [110.0, 3.3997569866342676], [111.0, 3.342762063227956], [112.0, 3.6703910614525106], [113.0, 3.346055979643766], [114.0, 3.3575832305795297], [115.0, 3.0984393757502966], [116.0, 3.3084260731319537], [117.0, 3.3589743589743577], [118.0, 3.235224586288418], [119.0, 4.635746606334846], [120.0, 5.6987788331071885], [121.0, 5.298034934497816], [122.0, 5.464344941956881], [123.0, 4.7558593750000036], [124.0, 4.200228832951941], [125.0, 3.6566332218506115], [126.0, 4.214128035320086], [127.0, 4.73856209150326], [128.0, 4.288372093023258], [129.0, 4.060175054704588], [130.0, 3.9935483870967743], [131.0, 4.531250000000004], [132.0, 4.933104631217837], [133.0, 4.484154929577459], [134.0, 4.097693351424696], [135.0, 4.444575471698109], [136.0, 3.952464788732395], [137.0, 4.172711571675303], [139.0, 4.067382812499998], [140.0, 4.375858684985281], [141.0, 4.033991228070179], [142.0, 4.2359550561797725], [143.0, 3.6362515413070318], [138.0, 3.963302752293581], [144.0, 3.9304347826086947], [145.0, 3.7048710601719215], [146.0, 4.014720314033363], [147.0, 4.0723981900452495], [148.0, 3.808510638297873], [149.0, 3.857982370225271], [150.0, 3.3617224880382786], [151.0, 2.971518987341769], [152.0, 3.386666666666666], [153.0, 3.1414027149321293], [154.0, 3.271217712177124], [155.0, 3.273534635879216], [156.0, 3.3392689784442338], [157.0, 3.7381703470031558], [158.0, 3.317647058823529], [159.0, 3.2891246684350106], [160.0, 3.4300608166811446], [161.0, 3.4286964129483803], [162.0, 3.754143646408842], [163.0, 3.676308539944903], [164.0, 3.557665260196908], [165.0, 4.0956521739130505], [166.0, 4.475506756756752], [167.0, 4.276842105263157], [168.0, 4.622608695652174], [170.0, 3.737147595356551], [169.0, 3.9369369369369354], [171.0, 3.84043441938179], [172.0, 3.7789072426937715], [173.0, 3.6514215080346086], [174.0, 3.8362133734034556], [175.0, 4.150326797385616], [176.0, 3.9726027397260255], [177.0, 4.138219895287956], [178.0, 3.726783310901748], [179.0, 4.023111111111113], [180.0, 3.6186374314800327], [181.0, 3.6997497914929167], [182.0, 4.051094890510947], [183.0, 4.328476821192053], [184.0, 3.9065743944636697], [185.0, 3.8755760368663585], [186.0, 3.97388632872504], [187.0, 4.048113207547167], [188.0, 4.053206002728511], [189.0, 3.6213114754098332], [190.0, 3.6051051051051086], [191.0, 3.777103866565583], [192.0, 3.910394265232975], [193.0, 3.648293963254592], [194.0, 3.6634615384615374], [195.0, 3.8076923076923057], [196.0, 3.700336700336704], [197.0, 3.4917798427448146], [198.0, 3.5559936908517353], [199.0, 3.737674418604654], [200.0, 3.52729044834308], [201.0, 3.6349614395886847], [202.0, 3.7772925764192173], [203.0, 3.487473156764494], [204.0, 3.640759930915371], [205.0, 3.5226730310262506], [206.0, 3.3888888888888906], [207.0, 3.1840324763193486], [208.0, 3.268575323790047], [210.0, 3.37562189054726], [211.0, 3.1237410071942504], [212.0, 3.236947791164658], [213.0, 3.175720992622404], [214.0, 3.319076133447392], [215.0, 3.2699453551912576], [209.0, 3.3790248390064366], [216.0, 3.2252321981424177], [217.0, 3.042773817239143], [218.0, 3.1281879194630897], [219.0, 3.251644736842106], [220.0, 3.373589164785553], [221.0, 3.0850767085076747], [222.0, 3.268716577540106], [223.0, 3.1283185840707946], [224.0, 3.2799003322259144], [225.0, 3.321138211382114], [226.0, 3.1121700879765366], [227.0, 3.1876160990712097], [228.0, 3.133506156837334], [229.0, 3.1849886277482917], [230.0, 3.1953537486800436], [231.0, 3.2598992080633598], [232.0, 3.1701474201474205], [233.0, 3.209374999999999], [234.0, 3.144314868804666], [235.0, 3.2265624999999982], [236.0, 3.237288135593225], [237.0, 3.1204313960455434], [238.0, 3.131868131868134], [239.0, 3.1711026615969597], [240.0, 3.2002989536621795], [241.0, 3.414587332053742], [242.0, 3.3572519083969463], [243.0, 3.1350364963503643], [244.0, 3.0746180963572236], [245.0, 3.1308607417774637], [246.0, 3.269572953736657], [247.0, 3.367993501218521], [248.0, 3.155974842767299], [249.0, 3.0319796954314677], [250.0, 3.314695340501792], [251.0, 3.6989436619718323], [252.0, 3.356173677069203], [253.0, 3.4615384615384577], [254.0, 3.222442244224422], [255.0, 3.148831488314881], [257.0, 3.089804186360566], [256.0, 3.4688524590163903], [258.0, 3.2396742292030267], [259.0, 3.167994207096308], [260.0, 3.131808278867102], [261.0, 3.419743178170144], [262.0, 3.1867426942266563], [263.0, 2.8833522083805208], [264.0, 3.0470061555679955], [270.0, 3.0140268848626546], [271.0, 3.292929292929294], [268.0, 2.860537836147591], [269.0, 3.182511737089198], [265.0, 3.081098339719032], [266.0, 3.216606498194948], [267.0, 2.9142651296829962], [273.0, 3.362798634812289], [272.0, 3.01053135471518], [275.0, 3.080946450809468], [274.0, 587.8953922789559], [276.0, 3.0593220338983], [277.0, 2.9359773371104754], [278.0, 2.774086378737544], [279.0, 2.8013631937682564], [280.0, 3.1368421052631565], [286.0, 3.0358194308145277], [287.0, 3.1146015125072726], [284.0, 3.124414715719063], [285.0, 3.0769647696476943], [281.0, 3.0649038461538476], [282.0, 2.81930693069307], [283.0, 3.2407786885245864], [289.0, 3.073898305084746], [288.0, 3.1912350597609587], [290.0, 3.2561576354679818], [291.0, 3.178378378378377], [292.0, 3.0533256880733926], [293.0, 3.1561866125760623], [294.0, 3.2172808132147375], [295.0, 2.865631691648826], [296.0, 3.00785468826706], [302.0, 2.8862343572241125], [303.0, 3.0476529160739676], [300.0, 2.9892525647288695], [301.0, 2.9391471011020642], [297.0, 3.013414634146344], [298.0, 3.1533626649905733], [299.0, 3.2256410256410257], [304.0, 2.9851279000594935], [305.0, 2.821676454885207], [306.0, 3.387755102040817], [307.0, 2.0], [308.0, 3.0], [1.0, 27.0]], "isOverall": false, "label": "Make an order", "isController": false}, {"data": [[202.1518376169272, 6.9727197615745276]], "isOverall": false, "label": "Make an order-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 308.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.59839346E12, "maxY": 355208.18333333335, "series": [{"data": [[1.59839436E12, 90768.18333333333], [1.59839658E12, 313109.88333333336], [1.59839496E12, 150839.88333333333], [1.59839598E12, 253004.0], [1.59839616E12, 271068.18333333335], [1.59839394E12, 48664.0], [1.59839556E12, 210934.0], [1.5983964E12, 295074.0], [1.59839358E12, 12614.75], [1.59839418E12, 72704.0], [1.5983958E12, 235014.06666666668], [1.59839538E12, 192904.0], [1.59839376E12, 30637.25], [1.59839478E12, 132838.18333333332], [1.598397E12, 355208.18333333335], [1.59839562E12, 216944.0], [1.598394E12, 54714.066666666666], [1.59839502E12, 156878.18333333332], [1.5983946E12, 114774.0], [1.59839682E12, 337184.06666666665], [1.5983952E12, 174914.06666666668], [1.59839622E12, 277049.88333333336], [1.59839544E12, 198873.93333333332], [1.59839706E12, 187669.08333333334], [1.59839646E12, 301118.18333333335], [1.59839484E12, 138819.88333333333], [1.59839382E12, 36684.85], [1.59839664E12, 319114.0], [1.59839442E12, 96749.88333333333], [1.59839604E12, 259048.18333333332], [1.59839688E12, 343154.0], [1.59839406E12, 60684.0], [1.59839466E12, 120824.06666666667], [1.59839628E12, 283088.18333333335], [1.59839586E12, 240978.11666666667], [1.59839364E12, 18662.3], [1.59839424E12, 78754.06666666667], [1.59839526E12, 180884.0], [1.59839388E12, 42654.0], [1.5983961E12, 265029.88333333336], [1.59839448E12, 102754.0], [1.5983955E12, 204924.0], [1.59839568E12, 222994.06666666668], [1.5983967E12, 325124.0], [1.59839346E12, 1040.9166666666667], [1.59839508E12, 162819.81666666668], [1.59839592E12, 246999.88333333333], [1.5983937E12, 24629.75], [1.59839532E12, 186934.06666666668], [1.59839694E12, 349204.06666666665], [1.5983949E12, 144858.18333333332], [1.5983943E12, 84724.0], [1.59839652E12, 307134.06666666665], [1.59839514E12, 168904.06666666668], [1.59839454E12, 108804.06666666667], [1.59839352E12, 6607.25], [1.59839676E12, 331088.05], [1.59839412E12, 66734.06666666667], [1.59839634E12, 289064.0], [1.59839472E12, 126794.0], [1.59839574E12, 228918.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.59839436E12, 0.0], [1.59839658E12, 0.0], [1.59839496E12, 0.0], [1.59839598E12, 0.0], [1.59839616E12, 0.0], [1.59839394E12, 0.0], [1.59839556E12, 0.0], [1.5983964E12, 0.0], [1.59839358E12, 0.0], [1.59839418E12, 0.0], [1.5983958E12, 0.0], [1.59839538E12, 0.0], [1.59839376E12, 0.0], [1.59839478E12, 0.0], [1.598397E12, 0.0], [1.59839562E12, 0.0], [1.598394E12, 0.0], [1.59839502E12, 0.0], [1.5983946E12, 0.0], [1.59839682E12, 0.0], [1.5983952E12, 0.0], [1.59839622E12, 0.0], [1.59839544E12, 0.0], [1.59839706E12, 0.0], [1.59839646E12, 0.0], [1.59839484E12, 0.0], [1.59839382E12, 0.0], [1.59839664E12, 0.0], [1.59839442E12, 0.0], [1.59839604E12, 0.0], [1.59839688E12, 0.0], [1.59839406E12, 0.0], [1.59839466E12, 0.0], [1.59839628E12, 0.0], [1.59839586E12, 0.0], [1.59839364E12, 0.0], [1.59839424E12, 0.0], [1.59839526E12, 0.0], [1.59839388E12, 0.0], [1.5983961E12, 0.0], [1.59839448E12, 0.0], [1.5983955E12, 0.0], [1.59839568E12, 0.0], [1.5983967E12, 0.0], [1.59839346E12, 0.0], [1.59839508E12, 0.0], [1.59839592E12, 0.0], [1.5983937E12, 0.0], [1.59839532E12, 0.0], [1.59839694E12, 0.0], [1.5983949E12, 0.0], [1.5983943E12, 0.0], [1.59839652E12, 0.0], [1.59839514E12, 0.0], [1.59839454E12, 0.0], [1.59839352E12, 0.0], [1.59839676E12, 0.0], [1.59839412E12, 0.0], [1.59839634E12, 0.0], [1.59839472E12, 0.0], [1.59839574E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59839706E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.8680165533550062, "minX": 1.59839346E12, "maxY": 118.90055452865063, "series": [{"data": [[1.59839436E12, 3.079435127978815], [1.59839658E12, 2.846065259117073], [1.59839496E12, 2.490571049136788], [1.59839598E12, 1.9505938242280292], [1.59839616E12, 1.8680165533550062], [1.59839394E12, 2.9275720164609047], [1.59839556E12, 2.659639126305785], [1.5983964E12, 2.9300746775288493], [1.59839358E12, 3.9492063492063494], [1.59839418E12, 2.43856749311295], [1.5983958E12, 2.7476986021138803], [1.59839538E12, 2.233021806853584], [1.59839376E12, 3.0183006535947694], [1.59839478E12, 2.922798552472858], [1.598397E12, 2.223776223776233], [1.59839562E12, 2.657802400738695], [1.598394E12, 4.133967789165436], [1.59839502E12, 7.111848825331961], [1.5983946E12, 2.6774869109947623], [1.59839682E12, 2.062381178707228], [1.5983952E12, 2.715071003206599], [1.59839622E12, 1.8873463485177215], [1.59839544E12, 2.4117647058823626], [1.59839706E12, 2.146669513236551], [1.59839646E12, 3.063065460351247], [1.59839484E12, 2.6435786435786466], [1.59839382E12, 2.528384279475982], [1.59839664E12, 3.5652228499686087], [1.59839442E12, 9.693581780538297], [1.59839604E12, 2.1192390968141077], [1.59839688E12, 2.398015178050211], [1.59839406E12, 3.042904290429043], [1.59839466E12, 3.44628647214854], [1.59839628E12, 2.0728842343617346], [1.59839586E12, 2.6241064006650037], [1.59839364E12, 3.0836909871244647], [1.59839424E12, 2.551373346897258], [1.59839526E12, 2.1977851605758603], [1.59839388E12, 2.3906103286384943], [1.5983961E12, 2.2367346938775516], [1.59839448E12, 2.9087719298245647], [1.5983955E12, 2.7137829912023346], [1.59839568E12, 2.8490837226015087], [1.5983967E12, 3.2], [1.59839346E12, 4.576923076923077], [1.59839508E12, 5.744832677165363], [1.59839592E12, 2.099270072992709], [1.5983937E12, 3.055284552845527], [1.59839532E12, 2.3009001285898], [1.59839694E12, 2.551170261587874], [1.5983949E12, 4.314435840707956], [1.5983943E12, 2.8851063829787185], [1.59839652E12, 3.2685885729193784], [1.59839514E12, 3.1684060721062646], [1.59839454E12, 2.547496318114873], [1.59839352E12, 3.7696969696969695], [1.59839676E12, 2.1593659244917784], [1.59839412E12, 2.805522208883551], [1.59839634E12, 2.14067914067914], [1.59839472E12, 2.384202211690365], [1.59839574E12, 2.184284214210723]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59839436E12, 4.590286975717432], [1.59839658E12, 3.065762538382811], [1.59839496E12, 4.16091343600638], [1.59839598E12, 3.2031670625494812], [1.59839616E12, 3.1359940872136067], [1.59839394E12, 4.071604938271609], [1.59839556E12, 3.96999050332384], [1.5983964E12, 3.265987780040728], [1.59839358E12, 5.130158730158729], [1.59839418E12, 3.5449035812672154], [1.5983958E12, 3.647800886464372], [1.59839538E12, 3.459397715472483], [1.59839376E12, 4.447058823529419], [1.59839478E12, 3.431674208144796], [1.598397E12, 2.991088550479414], [1.59839562E12, 3.8352723915050784], [1.598394E12, 4.752562225475845], [1.59839502E12, 4.354278416347403], [1.5983946E12, 3.7923211169284494], [1.59839682E12, 3.1052756653992435], [1.5983952E12, 3.885478699038015], [1.59839622E12, 3.2291787160208205], [1.59839544E12, 4.064464141821098], [1.59839706E12, 2.9355389541088637], [1.59839646E12, 3.3232202262142345], [1.59839484E12, 3.2420657818811254], [1.59839382E12, 4.197598253275116], [1.59839664E12, 3.0655367231638406], [1.59839442E12, 4.346440397350989], [1.59839604E12, 3.1775715390564616], [1.59839688E12, 3.161938120256861], [1.59839406E12, 4.682508250825084], [1.59839466E12, 3.7596153846153806], [1.59839628E12, 3.1711252653927766], [1.59839586E12, 3.6253741270369173], [1.59839364E12, 5.615879828326181], [1.59839424E12, 3.6419125127161767], [1.59839526E12, 3.390476190476188], [1.59839388E12, 4.001877934272309], [1.5983961E12, 3.2279322853687926], [1.59839448E12, 5.112280701754384], [1.5983955E12, 3.869403714565008], [1.59839568E12, 4.012396694214874], [1.5983967E12, 118.90055452865063], [1.59839346E12, 7.115384615384616], [1.59839508E12, 4.120787207872084], [1.59839592E12, 3.316899124229647], [1.5983937E12, 4.6813008130081375], [1.59839532E12, 3.3596228032576065], [1.59839694E12, 3.05644791188619], [1.5983949E12, 5.1214384508990305], [1.5983943E12, 4.9205673758865265], [1.59839652E12, 3.2281502739368726], [1.59839514E12, 4.101755218216338], [1.59839454E12, 3.9274668630338714], [1.59839352E12, 5.945454545454548], [1.59839676E12, 2.9225462906934556], [1.59839412E12, 3.859543817527016], [1.59839634E12, 3.1891891891892], [1.59839472E12, 3.533649289099531], [1.59839574E12, 3.686154384736562]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59839706E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.8545669524091046, "minX": 1.59839346E12, "maxY": 118.89956869993847, "series": [{"data": [[1.59839436E12, 3.059135039717565], [1.59839658E12, 2.7523992322456805], [1.59839496E12, 2.4762284196547153], [1.59839598E12, 1.935708630245449], [1.59839616E12, 1.8545669524091046], [1.59839394E12, 2.905349794238682], [1.59839556E12, 2.62886989553656], [1.5983964E12, 2.905634758995241], [1.59839358E12, 3.9333333333333313], [1.59839418E12, 2.4269972451790682], [1.5983958E12, 2.7296283668598695], [1.59839538E12, 2.211214953271028], [1.59839376E12, 2.9960784313725477], [1.59839478E12, 2.884197828709281], [1.598397E12, 2.20674486803519], [1.59839562E12, 2.6369344413665776], [1.598394E12, 4.110541727672022], [1.59839502E12, 7.08299284984677], [1.5983946E12, 2.6534031413612498], [1.59839682E12, 2.0509743346007587], [1.5983952E12, 2.6949152542372867], [1.59839622E12, 1.8785249457700675], [1.59839544E12, 2.3946414182111218], [1.59839706E12, 2.1300170794193014], [1.59839646E12, 3.031266631186807], [1.59839484E12, 2.5613275613275563], [1.59839382E12, 2.5196506550218314], [1.59839664E12, 3.5543000627746344], [1.59839442E12, 9.667908902691511], [1.59839604E12, 2.100525827404893], [1.59839688E12, 2.362988908347929], [1.59839406E12, 3.0118811881188066], [1.59839466E12, 3.3587533156498655], [1.59839628E12, 2.058024341919052], [1.59839586E12, 2.5652535328345873], [1.59839364E12, 3.0686695278969967], [1.59839424E12, 2.535605289928789], [1.59839526E12, 2.1339977851605823], [1.59839388E12, 2.3830985915492944], [1.5983961E12, 2.2157218442932636], [1.59839448E12, 2.88538011695907], [1.5983955E12, 2.685630498533726], [1.59839568E12, 2.819080129356812], [1.5983967E12, 3.180283425754783], [1.59839346E12, 4.500000000000001], [1.59839508E12, 5.7283464566929005], [1.59839592E12, 2.081427412814271], [1.5983937E12, 3.0292682926829215], [1.59839532E12, 2.2824689241320213], [1.59839694E12, 2.511587884350608], [1.5983949E12, 4.172013274336298], [1.5983943E12, 2.870921985815599], [1.59839652E12, 3.239238194625617], [1.59839514E12, 3.1435009487666044], [1.59839454E12, 2.5213549337260726], [1.59839352E12, 3.6666666666666683], [1.59839676E12, 2.146418199419163], [1.59839412E12, 2.7791116446578656], [1.59839634E12, 2.1254331254331214], [1.59839472E12, 2.363981042654032], [1.59839574E12, 2.1674833741687185]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59839436E12, 4.588520971302419], [1.59839658E12, 3.0651228249744045], [1.59839496E12, 4.159851301115238], [1.59839598E12, 3.2019002375296917], [1.59839616E12, 3.1339246119733977], [1.59839394E12, 4.070781893004122], [1.59839556E12, 3.969040835707506], [1.5983964E12, 3.264358452138484], [1.59839358E12, 5.117460317460321], [1.59839418E12, 3.543250688705239], [1.5983958E12, 3.6471189907944], [1.59839538E12, 3.458774662512976], [1.59839376E12, 4.44052287581699], [1.59839478E12, 3.430165912518859], [1.598397E12, 2.989847715736046], [1.59839562E12, 3.8341643582640836], [1.598394E12, 4.751098096632506], [1.59839502E12, 4.352745849297581], [1.5983946E12, 3.7909249563699796], [1.59839682E12, 3.103849809885938], [1.5983952E12, 3.884562528630327], [1.59839622E12, 3.227877385772133], [1.59839544E12, 4.062651087832402], [1.59839706E12, 2.933617929562437], [1.59839646E12, 3.3216234198270187], [1.59839484E12, 3.240911713791107], [1.59839382E12, 4.195414847161573], [1.59839664E12, 3.0650345260514813], [1.59839442E12, 4.3439569536423885], [1.59839604E12, 3.176488785769532], [1.59839688E12, 3.160653823701113], [1.59839406E12, 4.682508250825084], [1.59839466E12, 3.7579575596816994], [1.59839628E12, 3.169851380042464], [1.59839586E12, 3.6240438975723293], [1.59839364E12, 5.609442060085836], [1.59839424E12, 3.6408952187182053], [1.59839526E12, 3.3898117386489495], [1.59839388E12, 3.997183098591537], [1.5983961E12, 3.227327690447404], [1.59839448E12, 5.111500974658869], [1.5983955E12, 3.869403714565008], [1.59839568E12, 4.011857707509876], [1.5983967E12, 118.89956869993847], [1.59839346E12, 7.115384615384616], [1.59839508E12, 4.119803198031974], [1.59839592E12, 3.3164125851443416], [1.5983937E12, 4.674796747967483], [1.59839532E12, 3.359194170595784], [1.59839694E12, 3.054497475906384], [1.5983949E12, 5.120885200553239], [1.5983943E12, 4.919621749408973], [1.59839652E12, 3.2271067049308675], [1.59839514E12, 4.100569259962063], [1.59839454E12, 3.927098674521349], [1.59839352E12, 5.915151515151515], [1.59839676E12, 2.9213360764855323], [1.59839412E12, 3.858343337334926], [1.59839634E12, 3.187664587664583], [1.59839472E12, 3.532385466034754], [1.59839574E12, 3.6852791878172626]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59839706E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.59839346E12, "maxY": 4.9E-324, "series": [{"data": [[1.59839436E12, 0.0], [1.59839658E12, 0.0], [1.59839496E12, 0.0], [1.59839598E12, 0.0], [1.59839616E12, 0.0], [1.59839394E12, 0.0], [1.59839556E12, 0.0], [1.5983964E12, 0.0], [1.59839358E12, 0.0], [1.59839418E12, 0.0], [1.5983958E12, 0.0], [1.59839538E12, 0.0], [1.59839376E12, 0.0], [1.59839478E12, 0.0], [1.598397E12, 0.0], [1.59839562E12, 0.0], [1.598394E12, 0.0], [1.59839502E12, 0.0], [1.5983946E12, 0.0], [1.59839682E12, 0.0], [1.5983952E12, 0.0], [1.59839622E12, 0.0], [1.59839544E12, 0.0], [1.59839706E12, 0.0], [1.59839646E12, 0.0], [1.59839484E12, 0.0], [1.59839382E12, 0.0], [1.59839664E12, 0.0], [1.59839442E12, 0.0], [1.59839604E12, 0.0], [1.59839688E12, 0.0], [1.59839406E12, 0.0], [1.59839466E12, 0.0], [1.59839628E12, 0.0], [1.59839586E12, 0.0], [1.59839364E12, 0.0], [1.59839424E12, 0.0], [1.59839526E12, 0.0], [1.59839388E12, 0.0], [1.5983961E12, 0.0], [1.59839448E12, 0.0], [1.5983955E12, 0.0], [1.59839568E12, 0.0], [1.5983967E12, 0.0], [1.59839346E12, 0.0], [1.59839508E12, 0.0], [1.59839592E12, 0.0], [1.5983937E12, 0.0], [1.59839532E12, 0.0], [1.59839694E12, 0.0], [1.5983949E12, 0.0], [1.5983943E12, 0.0], [1.59839652E12, 0.0], [1.59839514E12, 0.0], [1.59839454E12, 0.0], [1.59839352E12, 0.0], [1.59839676E12, 0.0], [1.59839412E12, 0.0], [1.59839634E12, 0.0], [1.59839472E12, 0.0], [1.59839574E12, 0.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59839436E12, 0.0], [1.59839658E12, 0.0], [1.59839496E12, 0.0], [1.59839598E12, 0.0], [1.59839616E12, 0.0], [1.59839394E12, 0.0], [1.59839556E12, 0.0], [1.5983964E12, 0.0], [1.59839358E12, 0.0], [1.59839418E12, 0.0], [1.5983958E12, 0.0], [1.59839538E12, 0.0], [1.59839376E12, 0.0], [1.59839478E12, 0.0], [1.598397E12, 0.0], [1.59839562E12, 0.0], [1.598394E12, 0.0], [1.59839502E12, 0.0], [1.5983946E12, 0.0], [1.59839682E12, 0.0], [1.5983952E12, 0.0], [1.59839622E12, 0.0], [1.59839544E12, 0.0], [1.59839706E12, 0.0], [1.59839646E12, 0.0], [1.59839484E12, 0.0], [1.59839382E12, 0.0], [1.59839664E12, 0.0], [1.59839442E12, 0.0], [1.59839604E12, 0.0], [1.59839688E12, 0.0], [1.59839406E12, 0.0], [1.59839466E12, 0.0], [1.59839628E12, 0.0], [1.59839586E12, 0.0], [1.59839364E12, 0.0], [1.59839424E12, 0.0], [1.59839526E12, 0.0], [1.59839388E12, 0.0], [1.5983961E12, 0.0], [1.59839448E12, 0.0], [1.5983955E12, 0.0], [1.59839568E12, 0.0], [1.5983967E12, 0.0], [1.59839346E12, 0.0], [1.59839508E12, 0.0], [1.59839592E12, 0.0], [1.5983937E12, 0.0], [1.59839532E12, 0.0], [1.59839694E12, 0.0], [1.5983949E12, 0.0], [1.5983943E12, 0.0], [1.59839652E12, 0.0], [1.59839514E12, 0.0], [1.59839454E12, 0.0], [1.59839352E12, 0.0], [1.59839676E12, 0.0], [1.59839412E12, 0.0], [1.59839634E12, 0.0], [1.59839472E12, 0.0], [1.59839574E12, 0.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59839706E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.59839346E12, "maxY": 938870.0, "series": [{"data": [[1.59839436E12, 210.0], [1.59839658E12, 1034.0], [1.59839496E12, 206.0], [1.59839598E12, 43.0], [1.59839616E12, 48.0], [1.59839394E12, 54.0], [1.59839556E12, 40.0], [1.5983964E12, 1014.0], [1.59839358E12, 220.0], [1.59839418E12, 38.0], [1.5983958E12, 1022.0], [1.59839538E12, 46.0], [1.59839376E12, 24.0], [1.59839478E12, 1006.0], [1.598397E12, 228.0], [1.59839562E12, 1025.0], [1.598394E12, 1007.0], [1.59839502E12, 1031.0], [1.5983946E12, 227.0], [1.59839682E12, 1028.0], [1.5983952E12, 220.0], [1.59839622E12, 202.0], [1.59839544E12, 45.0], [1.59839706E12, 203.0], [1.59839646E12, 1023.0], [1.59839484E12, 1007.0], [1.59839382E12, 37.0], [1.59839664E12, 1032.0], [1.59839442E12, 1039.0], [1.59839604E12, 38.0], [1.59839688E12, 48.0], [1.59839406E12, 36.0], [1.59839466E12, 1017.0], [1.59839628E12, 48.0], [1.59839586E12, 207.0], [1.59839364E12, 34.0], [1.59839424E12, 34.0], [1.59839526E12, 208.0], [1.59839388E12, 45.0], [1.5983961E12, 42.0], [1.59839448E12, 44.0], [1.5983955E12, 1025.0], [1.59839568E12, 40.0], [1.5983967E12, 938870.0], [1.59839346E12, 27.0], [1.59839508E12, 3023.0], [1.59839592E12, 60.0], [1.5983937E12, 41.0], [1.59839532E12, 34.0], [1.59839694E12, 47.0], [1.5983949E12, 1033.0], [1.5983943E12, 220.0], [1.59839652E12, 1018.0], [1.59839514E12, 1029.0], [1.59839454E12, 37.0], [1.59839352E12, 20.0], [1.59839676E12, 1003.0], [1.59839412E12, 206.0], [1.59839634E12, 207.0], [1.59839472E12, 32.0], [1.59839574E12, 45.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.59839436E12, 2.0], [1.59839658E12, 1.0], [1.59839496E12, 1.0], [1.59839598E12, 1.0], [1.59839616E12, 1.0], [1.59839394E12, 2.0], [1.59839556E12, 1.0], [1.5983964E12, 1.0], [1.59839358E12, 2.0], [1.59839418E12, 1.0], [1.5983958E12, 1.0], [1.59839538E12, 1.0], [1.59839376E12, 2.0], [1.59839478E12, 1.0], [1.598397E12, 1.0], [1.59839562E12, 1.0], [1.598394E12, 2.0], [1.59839502E12, 1.0], [1.5983946E12, 1.0], [1.59839682E12, 1.0], [1.5983952E12, 1.0], [1.59839622E12, 1.0], [1.59839544E12, 1.0], [1.59839706E12, 1.0], [1.59839646E12, 1.0], [1.59839484E12, 1.0], [1.59839382E12, 2.0], [1.59839664E12, 1.0], [1.59839442E12, 2.0], [1.59839604E12, 1.0], [1.59839688E12, 1.0], [1.59839406E12, 2.0], [1.59839466E12, 1.0], [1.59839628E12, 1.0], [1.59839586E12, 1.0], [1.59839364E12, 2.0], [1.59839424E12, 1.0], [1.59839526E12, 1.0], [1.59839388E12, 2.0], [1.5983961E12, 1.0], [1.59839448E12, 1.0], [1.5983955E12, 1.0], [1.59839568E12, 1.0], [1.5983967E12, 1.0], [1.59839346E12, 3.0], [1.59839508E12, 1.0], [1.59839592E12, 1.0], [1.5983937E12, 2.0], [1.59839532E12, 1.0], [1.59839694E12, 1.0], [1.5983949E12, 1.0], [1.5983943E12, 2.0], [1.59839652E12, 1.0], [1.59839514E12, 1.0], [1.59839454E12, 1.0], [1.59839352E12, 2.9789999210834504], [1.59839676E12, 1.0], [1.59839412E12, 1.0], [1.59839634E12, 1.0], [1.59839472E12, 1.0], [1.59839574E12, 1.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.59839436E12, 2.0], [1.59839658E12, 1.0], [1.59839496E12, 1.0], [1.59839598E12, 1.0], [1.59839616E12, 1.0], [1.59839394E12, 2.0], [1.59839556E12, 1.0], [1.5983964E12, 1.0], [1.59839358E12, 2.0], [1.59839418E12, 1.0], [1.5983958E12, 1.0], [1.59839538E12, 1.0], [1.59839376E12, 2.0], [1.59839478E12, 1.0], [1.598397E12, 1.0], [1.59839562E12, 1.0], [1.598394E12, 2.0], [1.59839502E12, 1.0], [1.5983946E12, 1.0], [1.59839682E12, 1.0], [1.5983952E12, 1.0], [1.59839622E12, 1.0], [1.59839544E12, 1.0], [1.59839706E12, 1.0], [1.59839646E12, 1.0], [1.59839484E12, 1.0], [1.59839382E12, 2.0], [1.59839664E12, 1.0], [1.59839442E12, 2.0], [1.59839604E12, 1.0], [1.59839688E12, 1.0], [1.59839406E12, 2.0], [1.59839466E12, 1.0], [1.59839628E12, 1.0], [1.59839586E12, 1.0], [1.59839364E12, 2.0], [1.59839424E12, 1.0], [1.59839526E12, 1.0], [1.59839388E12, 2.0], [1.5983961E12, 1.0], [1.59839448E12, 1.0], [1.5983955E12, 1.0], [1.59839568E12, 1.0], [1.5983967E12, 1.0], [1.59839346E12, 3.0], [1.59839508E12, 1.0], [1.59839592E12, 1.0], [1.5983937E12, 2.0], [1.59839532E12, 1.0], [1.59839694E12, 1.0], [1.5983949E12, 1.0], [1.5983943E12, 2.0], [1.59839652E12, 1.0], [1.59839514E12, 1.0], [1.59839454E12, 1.0], [1.59839352E12, 3.0], [1.59839676E12, 1.0], [1.59839412E12, 1.0], [1.59839634E12, 1.0], [1.59839472E12, 1.0], [1.59839574E12, 1.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.59839436E12, 2.0], [1.59839658E12, 1.0], [1.59839496E12, 1.0], [1.59839598E12, 1.0], [1.59839616E12, 1.0], [1.59839394E12, 2.0], [1.59839556E12, 1.0], [1.5983964E12, 1.0], [1.59839358E12, 2.0], [1.59839418E12, 1.0], [1.5983958E12, 1.0], [1.59839538E12, 1.0], [1.59839376E12, 2.0], [1.59839478E12, 1.0], [1.598397E12, 1.0], [1.59839562E12, 1.0], [1.598394E12, 2.0], [1.59839502E12, 1.0], [1.5983946E12, 1.0], [1.59839682E12, 1.0], [1.5983952E12, 1.0], [1.59839622E12, 1.0], [1.59839544E12, 1.0], [1.59839706E12, 1.0], [1.59839646E12, 1.0], [1.59839484E12, 1.0], [1.59839382E12, 2.0], [1.59839664E12, 1.0], [1.59839442E12, 2.0], [1.59839604E12, 1.0], [1.59839688E12, 1.0], [1.59839406E12, 2.0], [1.59839466E12, 1.0], [1.59839628E12, 1.0], [1.59839586E12, 1.0], [1.59839364E12, 2.0], [1.59839424E12, 1.0], [1.59839526E12, 1.0], [1.59839388E12, 2.0], [1.5983961E12, 1.0], [1.59839448E12, 1.0], [1.5983955E12, 1.0], [1.59839568E12, 1.0], [1.5983967E12, 1.0], [1.59839346E12, 3.0], [1.59839508E12, 1.0], [1.59839592E12, 1.0], [1.5983937E12, 2.0], [1.59839532E12, 1.0], [1.59839694E12, 1.0], [1.5983949E12, 1.0], [1.5983943E12, 2.0], [1.59839652E12, 1.0], [1.59839514E12, 1.0], [1.59839454E12, 1.0], [1.59839352E12, 3.0], [1.59839676E12, 1.0], [1.59839412E12, 1.0], [1.59839634E12, 1.0], [1.59839472E12, 1.0], [1.59839574E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.59839436E12, 1.0], [1.59839658E12, 1.0], [1.59839496E12, 1.0], [1.59839598E12, 1.0], [1.59839616E12, 1.0], [1.59839394E12, 1.0], [1.59839556E12, 1.0], [1.5983964E12, 1.0], [1.59839358E12, 2.0], [1.59839418E12, 1.0], [1.5983958E12, 1.0], [1.59839538E12, 1.0], [1.59839376E12, 2.0], [1.59839478E12, 1.0], [1.598397E12, 1.0], [1.59839562E12, 1.0], [1.598394E12, 2.0], [1.59839502E12, 1.0], [1.5983946E12, 1.0], [1.59839682E12, 1.0], [1.5983952E12, 1.0], [1.59839622E12, 1.0], [1.59839544E12, 1.0], [1.59839706E12, 1.0], [1.59839646E12, 1.0], [1.59839484E12, 1.0], [1.59839382E12, 2.0], [1.59839664E12, 1.0], [1.59839442E12, 2.0], [1.59839604E12, 1.0], [1.59839688E12, 1.0], [1.59839406E12, 2.0], [1.59839466E12, 1.0], [1.59839628E12, 1.0], [1.59839586E12, 1.0], [1.59839364E12, 2.0], [1.59839424E12, 1.0], [1.59839526E12, 1.0], [1.59839388E12, 1.0], [1.5983961E12, 1.0], [1.59839448E12, 1.0], [1.5983955E12, 1.0], [1.59839568E12, 1.0], [1.5983967E12, 1.0], [1.59839346E12, 3.0], [1.59839508E12, 1.0], [1.59839592E12, 1.0], [1.5983937E12, 2.0], [1.59839532E12, 1.0], [1.59839694E12, 1.0], [1.5983949E12, 1.0], [1.5983943E12, 1.0], [1.59839652E12, 1.0], [1.59839514E12, 1.0], [1.59839454E12, 1.0], [1.59839352E12, 2.0], [1.59839676E12, 1.0], [1.59839412E12, 1.0], [1.59839634E12, 1.0], [1.59839472E12, 1.0], [1.59839574E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.59839436E12, 4.0], [1.59839658E12, 2.0], [1.59839496E12, 3.0], [1.59839598E12, 3.0], [1.59839616E12, 2.0], [1.59839394E12, 3.0], [1.59839556E12, 3.0], [1.5983964E12, 3.0], [1.59839358E12, 4.0], [1.59839418E12, 3.0], [1.5983958E12, 3.0], [1.59839538E12, 3.0], [1.59839376E12, 4.0], [1.59839478E12, 3.0], [1.598397E12, 2.0], [1.59839562E12, 3.0], [1.598394E12, 4.0], [1.59839502E12, 3.0], [1.5983946E12, 3.0], [1.59839682E12, 2.0], [1.5983952E12, 3.0], [1.59839622E12, 2.0], [1.59839544E12, 3.0], [1.59839706E12, 2.0], [1.59839646E12, 3.0], [1.59839484E12, 3.0], [1.59839382E12, 3.0], [1.59839664E12, 2.0], [1.59839442E12, 4.0], [1.59839604E12, 3.0], [1.59839688E12, 2.0], [1.59839406E12, 4.0], [1.59839466E12, 3.0], [1.59839628E12, 2.0], [1.59839586E12, 3.0], [1.59839364E12, 4.0], [1.59839424E12, 3.0], [1.59839526E12, 3.0], [1.59839388E12, 3.0], [1.5983961E12, 3.0], [1.59839448E12, 4.0], [1.5983955E12, 3.0], [1.59839568E12, 3.0], [1.5983967E12, 2.0], [1.59839346E12, 5.0], [1.59839508E12, 3.0], [1.59839592E12, 3.0], [1.5983937E12, 4.0], [1.59839532E12, 3.0], [1.59839694E12, 2.0], [1.5983949E12, 4.0], [1.5983943E12, 4.0], [1.59839652E12, 3.0], [1.59839514E12, 3.0], [1.59839454E12, 3.0], [1.59839352E12, 5.0], [1.59839676E12, 2.0], [1.59839412E12, 3.0], [1.59839634E12, 3.0], [1.59839472E12, 3.0], [1.59839574E12, 3.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59839706E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 2.0, "maxY": 5.0, "series": [{"data": [[2.0, 5.0], [4.0, 5.0], [6.0, 5.0], [8.0, 4.0], [10.0, 4.0], [12.0, 4.0], [14.0, 4.0], [16.0, 4.0], [18.0, 4.0], [19.0, 4.0], [20.0, 4.0], [21.0, 4.0], [22.0, 4.0], [23.0, 4.0], [24.0, 4.0], [26.0, 4.0], [27.0, 3.0], [28.0, 3.0], [29.0, 4.0], [30.0, 3.0], [32.0, 3.0], [33.0, 3.0], [34.0, 3.0], [35.0, 3.5], [36.0, 3.0], [37.0, 3.0], [38.0, 3.0], [40.0, 3.0], [41.0, 4.0], [42.0, 3.0], [43.0, 3.0], [44.0, 3.0], [46.0, 4.0], [48.0, 4.0], [49.0, 4.0], [50.0, 4.0], [51.0, 4.0], [52.0, 4.0], [53.0, 3.5], [54.0, 3.0], [55.0, 3.0], [56.0, 3.0], [57.0, 3.0], [58.0, 3.0], [59.0, 3.0], [60.0, 3.0], [61.0, 3.0], [62.0, 3.0], [63.0, 3.0], [64.0, 3.0], [66.0, 3.0], [65.0, 3.0], [67.0, 3.0], [68.0, 3.0], [69.0, 3.0], [70.0, 4.0], [71.0, 4.0], [72.0, 4.0], [73.0, 4.0], [74.0, 4.0], [75.0, 4.0], [77.0, 4.0], [76.0, 4.0], [78.0, 4.0], [79.0, 4.0], [80.0, 4.0], [81.0, 4.0], [82.0, 4.0], [83.0, 3.0], [84.0, 4.0], [86.0, 4.0], [85.0, 4.0], [87.0, 4.0], [88.0, 3.0], [90.0, 3.0], [89.0, 3.0], [91.0, 3.0], [92.0, 3.0], [94.0, 3.0], [93.0, 3.0], [96.0, 3.0], [97.0, 3.0], [98.0, 3.0], [99.0, 3.0], [100.0, 3.0], [101.0, 3.0], [102.0, 3.0], [103.0, 3.0], [104.0, 3.0], [106.0, 3.0], [107.0, 3.0], [105.0, 4.0], [111.0, 3.0], [108.0, 3.0], [110.0, 3.0], [109.0, 3.0], [112.0, 3.0], [114.0, 3.0], [113.0, 3.0], [115.0, 3.0], [116.0, 3.0], [117.0, 3.0], [118.0, 3.0], [119.0, 3.0], [120.0, 4.0], [122.0, 4.0], [123.0, 4.0], [121.0, 4.0], [124.0, 3.0], [125.0, 3.0], [126.0, 3.0], [127.0, 3.0], [128.0, 3.0], [130.0, 3.0], [129.0, 3.0], [131.0, 4.0], [132.0, 4.0], [134.0, 3.0], [133.0, 3.0], [135.0, 3.0], [138.0, 3.0], [137.0, 3.0], [136.0, 3.0], [139.0, 3.0], [140.0, 3.0], [141.0, 3.0], [142.0, 3.0], [143.0, 3.0], [146.0, 3.0], [144.0, 3.0], [145.0, 3.0], [147.0, 3.0], [148.0, 3.0], [149.0, 3.0], [150.0, 3.0], [151.0, 2.0], [157.0, 3.0], [152.0, 2.0], [155.0, 3.0], [153.0, 3.0], [154.0, 3.0], [156.0, 3.0], [158.0, 3.0], [159.0, 3.0], [161.0, 3.0], [160.0, 3.0], [162.0, 3.0], [163.0, 3.0], [164.0, 3.0], [165.0, 3.0], [166.0, 3.0], [167.0, 3.0], [168.0, 3.0], [169.0, 3.0], [170.0, 3.0], [171.0, 3.0], [172.0, 3.0], [174.0, 3.0], [173.0, 3.0], [175.0, 3.0], [178.0, 3.0], [176.0, 3.0], [177.0, 3.0], [179.0, 3.0], [182.0, 3.0], [180.0, 3.0], [181.0, 3.0], [183.0, 3.0], [184.0, 3.0], [185.0, 3.0], [186.0, 3.0], [187.0, 3.0], [188.0, 3.0], [189.0, 3.0], [190.0, 3.0], [191.0, 3.0], [192.0, 3.0], [193.0, 3.0], [194.0, 3.0], [195.0, 3.0], [196.0, 3.0], [199.0, 3.0], [197.0, 3.0], [198.0, 3.0], [200.0, 3.0], [201.0, 3.0], [203.0, 3.0], [205.0, 3.0], [202.0, 3.0], [204.0, 3.0], [206.0, 3.0], [207.0, 3.0], [208.0, 2.0], [211.0, 2.0], [209.0, 2.0], [210.0, 3.0], [212.0, 2.0], [213.0, 3.0], [214.0, 3.0], [215.0, 2.0], [216.0, 2.0], [217.0, 2.0], [218.0, 2.0], [219.0, 2.0], [220.0, 3.0], [221.0, 3.0], [222.0, 3.0], [223.0, 3.0], [228.0, 2.0], [224.0, 2.0], [225.0, 2.0], [226.0, 2.0], [227.0, 2.0], [229.0, 2.0], [230.0, 2.0], [231.0, 2.0], [236.0, 2.0], [232.0, 2.0], [234.0, 3.0], [233.0, 2.0], [235.0, 2.0], [237.0, 3.0], [239.0, 3.0], [238.0, 3.0], [240.0, 3.0], [241.0, 2.0], [242.0, 2.0], [243.0, 3.0], [244.0, 3.0], [245.0, 2.0], [247.0, 3.0], [246.0, 2.0], [248.0, 3.0], [251.0, 3.0], [249.0, 3.0], [250.0, 3.0], [253.0, 3.0], [252.0, 3.0], [254.0, 3.0], [255.0, 3.0], [257.0, 3.0], [256.0, 3.0], [259.0, 2.0], [258.0, 3.0], [261.0, 2.0], [260.0, 2.0], [266.0, 2.0], [267.0, 2.0], [264.0, 2.0], [268.0, 2.0], [269.0, 2.0], [271.0, 3.0], [270.0, 3.0], [265.0, 2.0], [262.0, 2.0], [263.0, 2.0], [273.0, 2.0], [272.0, 2.0], [274.0, 2.0], [275.0, 2.0], [276.0, 2.0], [277.0, 2.0], [278.0, 2.0], [280.0, 2.0], [286.0, 3.0], [287.0, 3.0], [284.0, 2.0], [285.0, 2.0], [281.0, 2.0], [282.0, 2.0], [283.0, 2.0], [279.0, 2.0], [289.0, 2.0], [288.0, 3.0], [290.0, 3.0], [292.0, 2.0], [291.0, 2.0], [293.0, 3.0], [294.0, 2.0], [295.0, 2.0], [296.0, 2.0], [302.0, 2.0], [300.0, 2.0], [301.0, 2.0], [297.0, 2.0], [298.0, 2.0], [299.0, 2.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 302.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 2.0, "maxY": 5.0, "series": [{"data": [[2.0, 5.0], [4.0, 5.0], [6.0, 5.0], [8.0, 4.0], [10.0, 4.0], [12.0, 4.0], [14.0, 4.0], [16.0, 4.0], [18.0, 4.0], [19.0, 4.0], [20.0, 4.0], [21.0, 4.0], [22.0, 4.0], [23.0, 4.0], [24.0, 4.0], [26.0, 4.0], [27.0, 3.0], [28.0, 3.0], [29.0, 4.0], [30.0, 3.0], [32.0, 3.0], [33.0, 3.0], [34.0, 3.0], [35.0, 3.0], [36.0, 3.0], [37.0, 3.0], [38.0, 3.0], [40.0, 3.0], [41.0, 4.0], [42.0, 3.0], [43.0, 3.0], [44.0, 3.0], [46.0, 4.0], [48.0, 4.0], [49.0, 4.0], [50.0, 4.0], [51.0, 4.0], [52.0, 4.0], [53.0, 3.0], [54.0, 3.0], [55.0, 3.0], [56.0, 3.0], [57.0, 3.0], [58.0, 3.0], [59.0, 3.0], [60.0, 3.0], [61.0, 3.0], [62.0, 3.0], [63.0, 3.0], [64.0, 3.0], [66.0, 3.0], [65.0, 3.0], [67.0, 3.0], [68.0, 3.0], [69.0, 3.0], [70.0, 4.0], [71.0, 4.0], [72.0, 4.0], [73.0, 4.0], [74.0, 4.0], [75.0, 4.0], [77.0, 4.0], [76.0, 4.0], [78.0, 4.0], [79.0, 4.0], [80.0, 4.0], [81.0, 4.0], [82.0, 4.0], [83.0, 3.0], [84.0, 4.0], [86.0, 4.0], [85.0, 4.0], [87.0, 4.0], [88.0, 3.0], [90.0, 3.0], [89.0, 3.0], [91.0, 3.0], [92.0, 3.0], [94.0, 3.0], [93.0, 3.0], [96.0, 3.0], [97.0, 3.0], [98.0, 3.0], [99.0, 3.0], [100.0, 3.0], [101.0, 3.0], [102.0, 3.0], [103.0, 3.0], [104.0, 3.0], [106.0, 3.0], [107.0, 3.0], [105.0, 4.0], [111.0, 3.0], [108.0, 3.0], [110.0, 3.0], [109.0, 3.0], [112.0, 3.0], [114.0, 3.0], [113.0, 3.0], [115.0, 3.0], [116.0, 3.0], [117.0, 3.0], [118.0, 3.0], [119.0, 3.0], [120.0, 4.0], [122.0, 4.0], [123.0, 4.0], [121.0, 4.0], [124.0, 3.0], [125.0, 3.0], [126.0, 3.0], [127.0, 3.0], [128.0, 3.0], [130.0, 3.0], [129.0, 3.0], [131.0, 4.0], [132.0, 4.0], [134.0, 3.0], [133.0, 3.0], [135.0, 3.0], [138.0, 3.0], [137.0, 3.0], [136.0, 3.0], [139.0, 3.0], [140.0, 3.0], [141.0, 3.0], [142.0, 3.0], [143.0, 3.0], [146.0, 3.0], [144.0, 3.0], [145.0, 3.0], [147.0, 3.0], [148.0, 3.0], [149.0, 3.0], [150.0, 3.0], [151.0, 2.0], [157.0, 3.0], [152.0, 2.0], [155.0, 3.0], [153.0, 3.0], [154.0, 3.0], [156.0, 3.0], [158.0, 3.0], [159.0, 3.0], [161.0, 3.0], [160.0, 3.0], [162.0, 3.0], [163.0, 3.0], [164.0, 3.0], [165.0, 3.0], [166.0, 3.0], [167.0, 3.0], [168.0, 3.0], [169.0, 3.0], [170.0, 3.0], [171.0, 3.0], [172.0, 3.0], [174.0, 3.0], [173.0, 3.0], [175.0, 3.0], [178.0, 3.0], [176.0, 3.0], [177.0, 3.0], [179.0, 3.0], [182.0, 3.0], [180.0, 3.0], [181.0, 3.0], [183.0, 3.0], [184.0, 3.0], [185.0, 3.0], [186.0, 3.0], [187.0, 3.0], [188.0, 3.0], [189.0, 3.0], [190.0, 3.0], [191.0, 3.0], [192.0, 3.0], [193.0, 3.0], [194.0, 3.0], [195.0, 3.0], [196.0, 3.0], [199.0, 3.0], [197.0, 3.0], [198.0, 3.0], [200.0, 3.0], [201.0, 3.0], [203.0, 3.0], [205.0, 3.0], [202.0, 3.0], [204.0, 3.0], [206.0, 3.0], [207.0, 3.0], [208.0, 2.0], [211.0, 2.0], [209.0, 2.0], [210.0, 3.0], [212.0, 2.0], [213.0, 3.0], [214.0, 3.0], [215.0, 2.0], [216.0, 2.0], [217.0, 2.0], [218.0, 2.0], [219.0, 2.0], [220.0, 3.0], [221.0, 3.0], [222.0, 3.0], [223.0, 3.0], [228.0, 2.0], [224.0, 2.0], [225.0, 2.0], [226.0, 2.0], [227.0, 2.0], [229.0, 2.0], [230.0, 2.0], [231.0, 2.0], [236.0, 2.0], [232.0, 2.0], [234.0, 3.0], [233.0, 2.0], [235.0, 2.0], [237.0, 3.0], [239.0, 3.0], [238.0, 3.0], [240.0, 3.0], [241.0, 2.0], [242.0, 2.0], [243.0, 3.0], [244.0, 3.0], [245.0, 2.0], [247.0, 3.0], [246.0, 2.0], [248.0, 3.0], [251.0, 3.0], [249.0, 3.0], [250.0, 3.0], [253.0, 3.0], [252.0, 3.0], [254.0, 3.0], [255.0, 3.0], [257.0, 3.0], [256.0, 3.0], [259.0, 2.0], [258.0, 3.0], [261.0, 2.0], [260.0, 2.0], [266.0, 2.0], [267.0, 2.0], [264.0, 2.0], [268.0, 2.0], [269.0, 2.0], [271.0, 3.0], [270.0, 3.0], [265.0, 2.0], [262.0, 2.0], [263.0, 2.0], [273.0, 2.0], [272.0, 2.0], [274.0, 2.0], [275.0, 2.0], [276.0, 2.0], [277.0, 2.0], [278.0, 2.0], [280.0, 2.0], [286.0, 3.0], [287.0, 3.0], [284.0, 2.0], [285.0, 2.0], [281.0, 2.0], [282.0, 2.0], [283.0, 2.0], [279.0, 2.0], [289.0, 2.0], [288.0, 3.0], [290.0, 2.0], [292.0, 2.0], [291.0, 2.0], [293.0, 3.0], [294.0, 2.0], [295.0, 2.0], [296.0, 2.0], [302.0, 2.0], [300.0, 2.0], [301.0, 2.0], [297.0, 2.0], [298.0, 2.0], [299.0, 2.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 302.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.59839346E12, "maxY": 295.53333333333336, "series": [{"data": [[1.59839436E12, 75.53333333333333], [1.59839658E12, 260.5], [1.59839496E12, 125.5], [1.59839598E12, 210.51666666666668], [1.59839616E12, 225.51666666666668], [1.59839394E12, 40.516666666666666], [1.59839556E12, 175.48333333333332], [1.5983964E12, 245.51666666666668], [1.59839358E12, 10.5], [1.59839418E12, 60.5], [1.5983958E12, 195.51666666666668], [1.59839538E12, 160.51666666666668], [1.59839376E12, 25.5], [1.59839478E12, 110.53333333333333], [1.598397E12, 295.53333333333336], [1.59839562E12, 180.51666666666668], [1.598394E12, 45.516666666666666], [1.59839502E12, 130.53333333333333], [1.5983946E12, 95.51666666666667], [1.59839682E12, 280.51666666666665], [1.5983952E12, 145.51666666666668], [1.59839622E12, 230.5], [1.59839544E12, 165.45], [1.59839706E12, 156.13333333333333], [1.59839646E12, 250.51666666666668], [1.59839484E12, 115.5], [1.59839382E12, 30.533333333333335], [1.59839664E12, 265.51666666666665], [1.59839442E12, 80.5], [1.59839604E12, 215.51666666666668], [1.59839688E12, 285.51666666666665], [1.59839406E12, 50.5], [1.59839466E12, 100.51666666666667], [1.59839628E12, 235.53333333333333], [1.59839586E12, 200.48333333333332], [1.59839364E12, 15.533333333333333], [1.59839424E12, 65.53333333333333], [1.59839526E12, 150.51666666666668], [1.59839388E12, 35.5], [1.5983961E12, 220.51666666666668], [1.59839448E12, 85.51666666666667], [1.5983955E12, 170.51666666666668], [1.59839568E12, 185.51666666666668], [1.5983967E12, 270.48333333333335], [1.59839346E12, 0.8666666666666667], [1.59839508E12, 135.48333333333332], [1.59839592E12, 205.51666666666668], [1.5983937E12, 20.5], [1.59839532E12, 155.51666666666668], [1.59839694E12, 290.51666666666665], [1.5983949E12, 120.53333333333333], [1.5983943E12, 70.5], [1.59839652E12, 255.53333333333333], [1.59839514E12, 140.53333333333333], [1.59839454E12, 90.51666666666667], [1.59839352E12, 5.5], [1.59839676E12, 275.45], [1.59839412E12, 55.53333333333333], [1.59839634E12, 240.48333333333332], [1.59839472E12, 105.5], [1.59839574E12, 190.48333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59839706E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.59839346E12, "maxY": 295.51666666666665, "series": [{"data": [[1.59839436E12, 75.51666666666667], [1.59839658E12, 260.51666666666665], [1.59839496E12, 125.51666666666667], [1.59839598E12, 210.5], [1.59839616E12, 225.51666666666668], [1.59839394E12, 40.5], [1.59839556E12, 175.5], [1.5983964E12, 245.5], [1.59839358E12, 10.5], [1.59839418E12, 60.5], [1.5983958E12, 195.53333333333333], [1.59839538E12, 160.5], [1.59839376E12, 25.5], [1.59839478E12, 110.51666666666667], [1.598397E12, 295.51666666666665], [1.59839562E12, 180.5], [1.598394E12, 45.53333333333333], [1.59839502E12, 130.51666666666668], [1.5983946E12, 95.5], [1.59839682E12, 280.53333333333336], [1.5983952E12, 145.53333333333333], [1.59839622E12, 230.51666666666668], [1.59839544E12, 165.46666666666667], [1.59839706E12, 156.15], [1.59839646E12, 250.51666666666668], [1.59839484E12, 115.51666666666667], [1.59839382E12, 30.533333333333335], [1.59839664E12, 265.5], [1.59839442E12, 80.51666666666667], [1.59839604E12, 215.51666666666668], [1.59839688E12, 285.5], [1.59839406E12, 50.5], [1.59839466E12, 100.53333333333333], [1.59839628E12, 235.51666666666668], [1.59839586E12, 200.48333333333332], [1.59839364E12, 15.533333333333333], [1.59839424E12, 65.53333333333333], [1.59839526E12, 150.5], [1.59839388E12, 35.5], [1.5983961E12, 220.51666666666668], [1.59839448E12, 85.5], [1.5983955E12, 170.5], [1.59839568E12, 185.53333333333333], [1.5983967E12, 270.5], [1.59839346E12, 0.8666666666666667], [1.59839508E12, 135.48333333333332], [1.59839592E12, 205.51666666666668], [1.5983937E12, 20.5], [1.59839532E12, 155.53333333333333], [1.59839694E12, 290.53333333333336], [1.5983949E12, 120.51666666666667], [1.5983943E12, 70.5], [1.59839652E12, 255.53333333333333], [1.59839514E12, 140.53333333333333], [1.59839454E12, 90.53333333333333], [1.59839352E12, 5.5], [1.59839676E12, 275.45], [1.59839412E12, 55.53333333333333], [1.59839634E12, 240.5], [1.59839472E12, 105.5], [1.59839574E12, 190.45]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59839706E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.59839346E12, "maxY": 147.76666666666668, "series": [{"data": [[1.59839436E12, 37.766666666666666], [1.59839658E12, 130.25], [1.59839496E12, 62.75], [1.59839598E12, 105.25], [1.59839616E12, 112.76666666666667], [1.59839394E12, 20.25], [1.59839556E12, 87.75], [1.5983964E12, 122.75], [1.59839358E12, 5.25], [1.59839418E12, 30.25], [1.5983958E12, 97.76666666666667], [1.59839538E12, 80.25], [1.59839376E12, 12.75], [1.59839478E12, 55.266666666666666], [1.598397E12, 147.76666666666668], [1.59839562E12, 90.25], [1.598394E12, 22.766666666666666], [1.59839502E12, 65.26666666666667], [1.5983946E12, 47.75], [1.59839682E12, 140.26666666666668], [1.5983952E12, 72.76666666666667], [1.59839622E12, 115.25], [1.59839544E12, 82.73333333333333], [1.59839706E12, 78.06666666666666], [1.59839646E12, 125.26666666666667], [1.59839484E12, 57.75], [1.59839382E12, 15.266666666666667], [1.59839664E12, 132.75], [1.59839442E12, 40.25], [1.59839604E12, 107.76666666666667], [1.59839688E12, 142.75], [1.59839406E12, 25.25], [1.59839466E12, 50.266666666666666], [1.59839628E12, 117.76666666666667], [1.59839586E12, 100.25], [1.59839364E12, 7.766666666666667], [1.59839424E12, 32.766666666666666], [1.59839526E12, 75.25], [1.59839388E12, 17.75], [1.5983961E12, 110.25], [1.59839448E12, 42.75], [1.5983955E12, 85.25], [1.59839568E12, 92.76666666666667], [1.5983967E12, 135.25], [1.59839346E12, 0.43333333333333335], [1.59839508E12, 67.73333333333333], [1.59839592E12, 102.75], [1.5983937E12, 10.25], [1.59839532E12, 77.76666666666667], [1.59839694E12, 145.26666666666668], [1.5983949E12, 60.266666666666666], [1.5983943E12, 35.25], [1.59839652E12, 127.76666666666667], [1.59839514E12, 70.26666666666667], [1.59839454E12, 45.266666666666666], [1.59839352E12, 2.75], [1.59839676E12, 137.73333333333332], [1.59839412E12, 27.766666666666666], [1.59839634E12, 120.25], [1.59839472E12, 52.75], [1.59839574E12, 95.23333333333333]], "isOverall": false, "label": "Open Main Page-success", "isController": false}, {"data": [[1.59839436E12, 37.75], [1.59839658E12, 130.26666666666668], [1.59839496E12, 62.766666666666666], [1.59839598E12, 105.25], [1.59839616E12, 112.75], [1.59839394E12, 20.25], [1.59839556E12, 87.75], [1.5983964E12, 122.75], [1.59839358E12, 5.25], [1.59839418E12, 30.25], [1.5983958E12, 97.76666666666667], [1.59839538E12, 80.25], [1.59839376E12, 12.75], [1.59839478E12, 55.25], [1.598397E12, 147.75], [1.59839562E12, 90.25], [1.598394E12, 22.766666666666666], [1.59839502E12, 65.25], [1.5983946E12, 47.75], [1.59839682E12, 140.26666666666668], [1.5983952E12, 72.76666666666667], [1.59839622E12, 115.26666666666667], [1.59839544E12, 82.73333333333333], [1.59839706E12, 78.08333333333333], [1.59839646E12, 125.25], [1.59839484E12, 57.766666666666666], [1.59839382E12, 15.266666666666667], [1.59839664E12, 132.75], [1.59839442E12, 40.266666666666666], [1.59839604E12, 107.75], [1.59839688E12, 142.75], [1.59839406E12, 25.25], [1.59839466E12, 50.266666666666666], [1.59839628E12, 117.75], [1.59839586E12, 100.23333333333333], [1.59839364E12, 7.766666666666667], [1.59839424E12, 32.766666666666666], [1.59839526E12, 75.25], [1.59839388E12, 17.75], [1.5983961E12, 110.26666666666667], [1.59839448E12, 42.75], [1.5983955E12, 85.25], [1.59839568E12, 92.76666666666667], [1.5983967E12, 135.25], [1.59839346E12, 0.43333333333333335], [1.59839508E12, 67.75], [1.59839592E12, 102.76666666666667], [1.5983937E12, 10.25], [1.59839532E12, 77.76666666666667], [1.59839694E12, 145.26666666666668], [1.5983949E12, 60.25], [1.5983943E12, 35.25], [1.59839652E12, 127.76666666666667], [1.59839514E12, 70.26666666666667], [1.59839454E12, 45.266666666666666], [1.59839352E12, 2.75], [1.59839676E12, 137.71666666666667], [1.59839412E12, 27.766666666666666], [1.59839634E12, 120.25], [1.59839472E12, 52.75], [1.59839574E12, 95.21666666666667]], "isOverall": false, "label": "Make an order-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59839706E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8666666666666667, "minX": 1.59839346E12, "maxY": 295.51666666666665, "series": [{"data": [[1.59839436E12, 75.51666666666667], [1.59839658E12, 260.51666666666665], [1.59839496E12, 125.51666666666667], [1.59839598E12, 210.5], [1.59839616E12, 225.51666666666668], [1.59839394E12, 40.5], [1.59839556E12, 175.5], [1.5983964E12, 245.5], [1.59839358E12, 10.5], [1.59839418E12, 60.5], [1.5983958E12, 195.53333333333333], [1.59839538E12, 160.5], [1.59839376E12, 25.5], [1.59839478E12, 110.51666666666667], [1.598397E12, 295.51666666666665], [1.59839562E12, 180.5], [1.598394E12, 45.53333333333333], [1.59839502E12, 130.51666666666668], [1.5983946E12, 95.5], [1.59839682E12, 280.53333333333336], [1.5983952E12, 145.53333333333333], [1.59839622E12, 230.51666666666668], [1.59839544E12, 165.46666666666667], [1.59839706E12, 156.15], [1.59839646E12, 250.51666666666668], [1.59839484E12, 115.51666666666667], [1.59839382E12, 30.533333333333335], [1.59839664E12, 265.5], [1.59839442E12, 80.51666666666667], [1.59839604E12, 215.51666666666668], [1.59839688E12, 285.5], [1.59839406E12, 50.5], [1.59839466E12, 100.53333333333333], [1.59839628E12, 235.51666666666668], [1.59839586E12, 200.48333333333332], [1.59839364E12, 15.533333333333333], [1.59839424E12, 65.53333333333333], [1.59839526E12, 150.5], [1.59839388E12, 35.5], [1.5983961E12, 220.51666666666668], [1.59839448E12, 85.5], [1.5983955E12, 170.5], [1.59839568E12, 185.53333333333333], [1.5983967E12, 270.5], [1.59839346E12, 0.8666666666666667], [1.59839508E12, 135.48333333333332], [1.59839592E12, 205.51666666666668], [1.5983937E12, 20.5], [1.59839532E12, 155.53333333333333], [1.59839694E12, 290.53333333333336], [1.5983949E12, 120.51666666666667], [1.5983943E12, 70.5], [1.59839652E12, 255.53333333333333], [1.59839514E12, 140.53333333333333], [1.59839454E12, 90.53333333333333], [1.59839352E12, 5.5], [1.59839676E12, 275.45], [1.59839412E12, 55.53333333333333], [1.59839634E12, 240.5], [1.59839472E12, 105.5], [1.59839574E12, 190.45]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59839706E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

