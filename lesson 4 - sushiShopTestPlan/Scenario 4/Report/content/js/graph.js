/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 29.0, "minX": 0.0, "maxY": 1115.0, "series": [{"data": [[0.0, 29.0], [0.1, 31.0], [0.2, 31.0], [0.3, 31.0], [0.4, 31.0], [0.5, 31.0], [0.6, 31.0], [0.7, 32.0], [0.8, 32.0], [0.9, 32.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 32.0], [1.5, 32.0], [1.6, 32.0], [1.7, 32.0], [1.8, 32.0], [1.9, 32.0], [2.0, 32.0], [2.1, 32.0], [2.2, 32.0], [2.3, 32.0], [2.4, 32.0], [2.5, 32.0], [2.6, 32.0], [2.7, 32.0], [2.8, 32.0], [2.9, 32.0], [3.0, 32.0], [3.1, 32.0], [3.2, 32.0], [3.3, 32.0], [3.4, 32.0], [3.5, 32.0], [3.6, 32.0], [3.7, 32.0], [3.8, 32.0], [3.9, 32.0], [4.0, 32.0], [4.1, 32.0], [4.2, 32.0], [4.3, 32.0], [4.4, 32.0], [4.5, 32.0], [4.6, 32.0], [4.7, 32.0], [4.8, 32.0], [4.9, 32.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 32.0], [5.4, 32.0], [5.5, 32.0], [5.6, 32.0], [5.7, 32.0], [5.8, 32.0], [5.9, 32.0], [6.0, 32.0], [6.1, 32.0], [6.2, 32.0], [6.3, 32.0], [6.4, 32.0], [6.5, 32.0], [6.6, 32.0], [6.7, 32.0], [6.8, 32.0], [6.9, 32.0], [7.0, 32.0], [7.1, 32.0], [7.2, 32.0], [7.3, 32.0], [7.4, 32.0], [7.5, 32.0], [7.6, 32.0], [7.7, 32.0], [7.8, 32.0], [7.9, 32.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 32.0], [8.5, 32.0], [8.6, 32.0], [8.7, 32.0], [8.8, 32.0], [8.9, 32.0], [9.0, 32.0], [9.1, 32.0], [9.2, 32.0], [9.3, 32.0], [9.4, 32.0], [9.5, 32.0], [9.6, 32.0], [9.7, 32.0], [9.8, 32.0], [9.9, 32.0], [10.0, 32.0], [10.1, 32.0], [10.2, 32.0], [10.3, 32.0], [10.4, 32.0], [10.5, 32.0], [10.6, 32.0], [10.7, 32.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 32.0], [11.8, 32.0], [11.9, 32.0], [12.0, 32.0], [12.1, 32.0], [12.2, 32.0], [12.3, 32.0], [12.4, 32.0], [12.5, 32.0], [12.6, 32.0], [12.7, 32.0], [12.8, 32.0], [12.9, 32.0], [13.0, 32.0], [13.1, 32.0], [13.2, 32.0], [13.3, 32.0], [13.4, 32.0], [13.5, 32.0], [13.6, 32.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 32.0], [14.2, 32.0], [14.3, 32.0], [14.4, 32.0], [14.5, 32.0], [14.6, 32.0], [14.7, 32.0], [14.8, 32.0], [14.9, 32.0], [15.0, 32.0], [15.1, 32.0], [15.2, 32.0], [15.3, 32.0], [15.4, 32.0], [15.5, 32.0], [15.6, 32.0], [15.7, 32.0], [15.8, 32.0], [15.9, 32.0], [16.0, 32.0], [16.1, 32.0], [16.2, 32.0], [16.3, 32.0], [16.4, 32.0], [16.5, 32.0], [16.6, 32.0], [16.7, 32.0], [16.8, 32.0], [16.9, 32.0], [17.0, 32.0], [17.1, 32.0], [17.2, 32.0], [17.3, 32.0], [17.4, 33.0], [17.5, 33.0], [17.6, 33.0], [17.7, 33.0], [17.8, 33.0], [17.9, 33.0], [18.0, 33.0], [18.1, 33.0], [18.2, 33.0], [18.3, 33.0], [18.4, 33.0], [18.5, 33.0], [18.6, 33.0], [18.7, 33.0], [18.8, 33.0], [18.9, 33.0], [19.0, 33.0], [19.1, 33.0], [19.2, 33.0], [19.3, 33.0], [19.4, 33.0], [19.5, 33.0], [19.6, 33.0], [19.7, 33.0], [19.8, 33.0], [19.9, 33.0], [20.0, 33.0], [20.1, 33.0], [20.2, 33.0], [20.3, 33.0], [20.4, 33.0], [20.5, 33.0], [20.6, 33.0], [20.7, 33.0], [20.8, 33.0], [20.9, 33.0], [21.0, 33.0], [21.1, 33.0], [21.2, 33.0], [21.3, 33.0], [21.4, 33.0], [21.5, 33.0], [21.6, 33.0], [21.7, 33.0], [21.8, 33.0], [21.9, 33.0], [22.0, 33.0], [22.1, 33.0], [22.2, 33.0], [22.3, 33.0], [22.4, 33.0], [22.5, 33.0], [22.6, 33.0], [22.7, 33.0], [22.8, 33.0], [22.9, 33.0], [23.0, 33.0], [23.1, 33.0], [23.2, 33.0], [23.3, 33.0], [23.4, 33.0], [23.5, 33.0], [23.6, 33.0], [23.7, 33.0], [23.8, 33.0], [23.9, 33.0], [24.0, 33.0], [24.1, 33.0], [24.2, 33.0], [24.3, 33.0], [24.4, 33.0], [24.5, 33.0], [24.6, 33.0], [24.7, 33.0], [24.8, 33.0], [24.9, 33.0], [25.0, 33.0], [25.1, 33.0], [25.2, 33.0], [25.3, 33.0], [25.4, 33.0], [25.5, 33.0], [25.6, 33.0], [25.7, 33.0], [25.8, 33.0], [25.9, 33.0], [26.0, 33.0], [26.1, 33.0], [26.2, 33.0], [26.3, 33.0], [26.4, 33.0], [26.5, 33.0], [26.6, 33.0], [26.7, 33.0], [26.8, 33.0], [26.9, 33.0], [27.0, 33.0], [27.1, 33.0], [27.2, 33.0], [27.3, 33.0], [27.4, 33.0], [27.5, 33.0], [27.6, 33.0], [27.7, 33.0], [27.8, 33.0], [27.9, 33.0], [28.0, 33.0], [28.1, 33.0], [28.2, 33.0], [28.3, 33.0], [28.4, 33.0], [28.5, 33.0], [28.6, 33.0], [28.7, 33.0], [28.8, 33.0], [28.9, 33.0], [29.0, 33.0], [29.1, 33.0], [29.2, 33.0], [29.3, 33.0], [29.4, 33.0], [29.5, 33.0], [29.6, 33.0], [29.7, 33.0], [29.8, 33.0], [29.9, 33.0], [30.0, 33.0], [30.1, 33.0], [30.2, 33.0], [30.3, 33.0], [30.4, 33.0], [30.5, 33.0], [30.6, 33.0], [30.7, 33.0], [30.8, 33.0], [30.9, 33.0], [31.0, 33.0], [31.1, 33.0], [31.2, 33.0], [31.3, 33.0], [31.4, 33.0], [31.5, 33.0], [31.6, 33.0], [31.7, 33.0], [31.8, 33.0], [31.9, 33.0], [32.0, 33.0], [32.1, 33.0], [32.2, 33.0], [32.3, 33.0], [32.4, 33.0], [32.5, 33.0], [32.6, 33.0], [32.7, 33.0], [32.8, 33.0], [32.9, 33.0], [33.0, 33.0], [33.1, 33.0], [33.2, 33.0], [33.3, 33.0], [33.4, 33.0], [33.5, 33.0], [33.6, 33.0], [33.7, 33.0], [33.8, 33.0], [33.9, 33.0], [34.0, 33.0], [34.1, 33.0], [34.2, 33.0], [34.3, 33.0], [34.4, 33.0], [34.5, 33.0], [34.6, 33.0], [34.7, 33.0], [34.8, 33.0], [34.9, 33.0], [35.0, 33.0], [35.1, 33.0], [35.2, 33.0], [35.3, 33.0], [35.4, 33.0], [35.5, 33.0], [35.6, 33.0], [35.7, 33.0], [35.8, 33.0], [35.9, 33.0], [36.0, 33.0], [36.1, 33.0], [36.2, 33.0], [36.3, 33.0], [36.4, 33.0], [36.5, 33.0], [36.6, 33.0], [36.7, 33.0], [36.8, 33.0], [36.9, 33.0], [37.0, 33.0], [37.1, 33.0], [37.2, 33.0], [37.3, 33.0], [37.4, 33.0], [37.5, 33.0], [37.6, 33.0], [37.7, 33.0], [37.8, 33.0], [37.9, 33.0], [38.0, 33.0], [38.1, 33.0], [38.2, 33.0], [38.3, 33.0], [38.4, 33.0], [38.5, 33.0], [38.6, 33.0], [38.7, 33.0], [38.8, 33.0], [38.9, 33.0], [39.0, 33.0], [39.1, 33.0], [39.2, 33.0], [39.3, 33.0], [39.4, 33.0], [39.5, 33.0], [39.6, 33.0], [39.7, 33.0], [39.8, 33.0], [39.9, 33.0], [40.0, 33.0], [40.1, 33.0], [40.2, 33.0], [40.3, 33.0], [40.4, 33.0], [40.5, 33.0], [40.6, 33.0], [40.7, 33.0], [40.8, 33.0], [40.9, 33.0], [41.0, 33.0], [41.1, 33.0], [41.2, 33.0], [41.3, 33.0], [41.4, 33.0], [41.5, 33.0], [41.6, 33.0], [41.7, 33.0], [41.8, 33.0], [41.9, 33.0], [42.0, 33.0], [42.1, 33.0], [42.2, 33.0], [42.3, 33.0], [42.4, 33.0], [42.5, 33.0], [42.6, 33.0], [42.7, 33.0], [42.8, 33.0], [42.9, 33.0], [43.0, 33.0], [43.1, 33.0], [43.2, 33.0], [43.3, 33.0], [43.4, 33.0], [43.5, 33.0], [43.6, 33.0], [43.7, 33.0], [43.8, 33.0], [43.9, 33.0], [44.0, 33.0], [44.1, 33.0], [44.2, 33.0], [44.3, 33.0], [44.4, 33.0], [44.5, 33.0], [44.6, 33.0], [44.7, 33.0], [44.8, 33.0], [44.9, 33.0], [45.0, 33.0], [45.1, 33.0], [45.2, 33.0], [45.3, 33.0], [45.4, 33.0], [45.5, 33.0], [45.6, 33.0], [45.7, 33.0], [45.8, 33.0], [45.9, 33.0], [46.0, 33.0], [46.1, 33.0], [46.2, 33.0], [46.3, 33.0], [46.4, 33.0], [46.5, 33.0], [46.6, 33.0], [46.7, 33.0], [46.8, 33.0], [46.9, 33.0], [47.0, 33.0], [47.1, 33.0], [47.2, 33.0], [47.3, 33.0], [47.4, 33.0], [47.5, 33.0], [47.6, 33.0], [47.7, 33.0], [47.8, 33.0], [47.9, 33.0], [48.0, 33.0], [48.1, 33.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 33.0], [48.6, 33.0], [48.7, 34.0], [48.8, 34.0], [48.9, 34.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 34.0], [49.9, 34.0], [50.0, 34.0], [50.1, 34.0], [50.2, 34.0], [50.3, 34.0], [50.4, 34.0], [50.5, 34.0], [50.6, 34.0], [50.7, 34.0], [50.8, 34.0], [50.9, 34.0], [51.0, 34.0], [51.1, 34.0], [51.2, 34.0], [51.3, 34.0], [51.4, 34.0], [51.5, 34.0], [51.6, 34.0], [51.7, 34.0], [51.8, 34.0], [51.9, 34.0], [52.0, 34.0], [52.1, 34.0], [52.2, 34.0], [52.3, 34.0], [52.4, 34.0], [52.5, 34.0], [52.6, 34.0], [52.7, 34.0], [52.8, 34.0], [52.9, 34.0], [53.0, 34.0], [53.1, 34.0], [53.2, 34.0], [53.3, 34.0], [53.4, 34.0], [53.5, 34.0], [53.6, 34.0], [53.7, 34.0], [53.8, 34.0], [53.9, 34.0], [54.0, 34.0], [54.1, 34.0], [54.2, 34.0], [54.3, 34.0], [54.4, 34.0], [54.5, 34.0], [54.6, 34.0], [54.7, 34.0], [54.8, 34.0], [54.9, 34.0], [55.0, 34.0], [55.1, 34.0], [55.2, 34.0], [55.3, 34.0], [55.4, 34.0], [55.5, 34.0], [55.6, 34.0], [55.7, 34.0], [55.8, 34.0], [55.9, 34.0], [56.0, 34.0], [56.1, 34.0], [56.2, 34.0], [56.3, 34.0], [56.4, 34.0], [56.5, 34.0], [56.6, 34.0], [56.7, 34.0], [56.8, 34.0], [56.9, 34.0], [57.0, 34.0], [57.1, 34.0], [57.2, 34.0], [57.3, 34.0], [57.4, 34.0], [57.5, 34.0], [57.6, 34.0], [57.7, 34.0], [57.8, 34.0], [57.9, 34.0], [58.0, 34.0], [58.1, 34.0], [58.2, 34.0], [58.3, 34.0], [58.4, 34.0], [58.5, 34.0], [58.6, 34.0], [58.7, 34.0], [58.8, 34.0], [58.9, 34.0], [59.0, 34.0], [59.1, 34.0], [59.2, 34.0], [59.3, 34.0], [59.4, 34.0], [59.5, 34.0], [59.6, 34.0], [59.7, 34.0], [59.8, 34.0], [59.9, 34.0], [60.0, 34.0], [60.1, 34.0], [60.2, 34.0], [60.3, 34.0], [60.4, 34.0], [60.5, 34.0], [60.6, 34.0], [60.7, 34.0], [60.8, 34.0], [60.9, 34.0], [61.0, 34.0], [61.1, 34.0], [61.2, 34.0], [61.3, 34.0], [61.4, 34.0], [61.5, 34.0], [61.6, 34.0], [61.7, 34.0], [61.8, 34.0], [61.9, 34.0], [62.0, 34.0], [62.1, 34.0], [62.2, 34.0], [62.3, 34.0], [62.4, 34.0], [62.5, 34.0], [62.6, 34.0], [62.7, 34.0], [62.8, 34.0], [62.9, 34.0], [63.0, 34.0], [63.1, 34.0], [63.2, 34.0], [63.3, 34.0], [63.4, 34.0], [63.5, 34.0], [63.6, 34.0], [63.7, 34.0], [63.8, 34.0], [63.9, 34.0], [64.0, 34.0], [64.1, 34.0], [64.2, 34.0], [64.3, 34.0], [64.4, 34.0], [64.5, 35.0], [64.6, 35.0], [64.7, 35.0], [64.8, 35.0], [64.9, 35.0], [65.0, 35.0], [65.1, 35.0], [65.2, 35.0], [65.3, 35.0], [65.4, 35.0], [65.5, 35.0], [65.6, 35.0], [65.7, 35.0], [65.8, 35.0], [65.9, 35.0], [66.0, 35.0], [66.1, 35.0], [66.2, 35.0], [66.3, 35.0], [66.4, 35.0], [66.5, 35.0], [66.6, 35.0], [66.7, 35.0], [66.8, 35.0], [66.9, 35.0], [67.0, 35.0], [67.1, 35.0], [67.2, 35.0], [67.3, 35.0], [67.4, 35.0], [67.5, 35.0], [67.6, 35.0], [67.7, 35.0], [67.8, 35.0], [67.9, 35.0], [68.0, 35.0], [68.1, 35.0], [68.2, 35.0], [68.3, 35.0], [68.4, 35.0], [68.5, 35.0], [68.6, 35.0], [68.7, 35.0], [68.8, 35.0], [68.9, 35.0], [69.0, 35.0], [69.1, 35.0], [69.2, 35.0], [69.3, 35.0], [69.4, 35.0], [69.5, 35.0], [69.6, 35.0], [69.7, 35.0], [69.8, 35.0], [69.9, 35.0], [70.0, 35.0], [70.1, 35.0], [70.2, 35.0], [70.3, 35.0], [70.4, 35.0], [70.5, 35.0], [70.6, 35.0], [70.7, 35.0], [70.8, 35.0], [70.9, 35.0], [71.0, 35.0], [71.1, 35.0], [71.2, 35.0], [71.3, 35.0], [71.4, 35.0], [71.5, 35.0], [71.6, 35.0], [71.7, 35.0], [71.8, 35.0], [71.9, 35.0], [72.0, 35.0], [72.1, 35.0], [72.2, 35.0], [72.3, 36.0], [72.4, 36.0], [72.5, 36.0], [72.6, 36.0], [72.7, 36.0], [72.8, 36.0], [72.9, 36.0], [73.0, 36.0], [73.1, 36.0], [73.2, 36.0], [73.3, 36.0], [73.4, 36.0], [73.5, 36.0], [73.6, 36.0], [73.7, 36.0], [73.8, 36.0], [73.9, 36.0], [74.0, 36.0], [74.1, 36.0], [74.2, 36.0], [74.3, 36.0], [74.4, 36.0], [74.5, 36.0], [74.6, 36.0], [74.7, 36.0], [74.8, 36.0], [74.9, 36.0], [75.0, 36.0], [75.1, 36.0], [75.2, 36.0], [75.3, 36.0], [75.4, 36.0], [75.5, 36.0], [75.6, 36.0], [75.7, 36.0], [75.8, 36.0], [75.9, 36.0], [76.0, 36.0], [76.1, 36.0], [76.2, 36.0], [76.3, 36.0], [76.4, 36.0], [76.5, 36.0], [76.6, 36.0], [76.7, 36.0], [76.8, 36.0], [76.9, 36.0], [77.0, 36.0], [77.1, 36.0], [77.2, 36.0], [77.3, 36.0], [77.4, 36.0], [77.5, 36.0], [77.6, 36.0], [77.7, 36.0], [77.8, 36.0], [77.9, 37.0], [78.0, 37.0], [78.1, 37.0], [78.2, 37.0], [78.3, 37.0], [78.4, 37.0], [78.5, 37.0], [78.6, 37.0], [78.7, 37.0], [78.8, 37.0], [78.9, 37.0], [79.0, 37.0], [79.1, 37.0], [79.2, 37.0], [79.3, 37.0], [79.4, 37.0], [79.5, 37.0], [79.6, 37.0], [79.7, 37.0], [79.8, 37.0], [79.9, 37.0], [80.0, 37.0], [80.1, 37.0], [80.2, 37.0], [80.3, 37.0], [80.4, 37.0], [80.5, 37.0], [80.6, 37.0], [80.7, 37.0], [80.8, 37.0], [80.9, 37.0], [81.0, 37.0], [81.1, 37.0], [81.2, 37.0], [81.3, 37.0], [81.4, 37.0], [81.5, 37.0], [81.6, 37.0], [81.7, 37.0], [81.8, 37.0], [81.9, 37.0], [82.0, 37.0], [82.1, 38.0], [82.2, 38.0], [82.3, 38.0], [82.4, 38.0], [82.5, 38.0], [82.6, 38.0], [82.7, 38.0], [82.8, 38.0], [82.9, 38.0], [83.0, 38.0], [83.1, 38.0], [83.2, 38.0], [83.3, 38.0], [83.4, 38.0], [83.5, 38.0], [83.6, 38.0], [83.7, 38.0], [83.8, 38.0], [83.9, 38.0], [84.0, 38.0], [84.1, 38.0], [84.2, 38.0], [84.3, 38.0], [84.4, 38.0], [84.5, 38.0], [84.6, 38.0], [84.7, 38.0], [84.8, 38.0], [84.9, 38.0], [85.0, 38.0], [85.1, 39.0], [85.2, 39.0], [85.3, 39.0], [85.4, 39.0], [85.5, 39.0], [85.6, 39.0], [85.7, 39.0], [85.8, 39.0], [85.9, 39.0], [86.0, 39.0], [86.1, 39.0], [86.2, 39.0], [86.3, 39.0], [86.4, 40.0], [86.5, 40.0], [86.6, 40.0], [86.7, 40.0], [86.8, 40.0], [86.9, 41.0], [87.0, 41.0], [87.1, 41.0], [87.2, 42.0], [87.3, 42.0], [87.4, 43.0], [87.5, 44.0], [87.6, 46.0], [87.7, 49.0], [87.8, 54.0], [87.9, 67.0], [88.0, 1033.0], [88.1, 1034.0], [88.2, 1034.0], [88.3, 1034.0], [88.4, 1034.0], [88.5, 1034.0], [88.6, 1034.0], [88.7, 1034.0], [88.8, 1034.0], [88.9, 1034.0], [89.0, 1034.0], [89.1, 1034.0], [89.2, 1034.0], [89.3, 1034.0], [89.4, 1035.0], [89.5, 1035.0], [89.6, 1035.0], [89.7, 1035.0], [89.8, 1035.0], [89.9, 1035.0], [90.0, 1035.0], [90.1, 1035.0], [90.2, 1035.0], [90.3, 1036.0], [90.4, 1036.0], [90.5, 1036.0], [90.6, 1036.0], [90.7, 1036.0], [90.8, 1037.0], [90.9, 1037.0], [91.0, 1037.0], [91.1, 1038.0], [91.2, 1038.0], [91.3, 1039.0], [91.4, 1039.0], [91.5, 1039.0], [91.6, 1040.0], [91.7, 1040.0], [91.8, 1041.0], [91.9, 1041.0], [92.0, 1041.0], [92.1, 1042.0], [92.2, 1042.0], [92.3, 1042.0], [92.4, 1042.0], [92.5, 1042.0], [92.6, 1042.0], [92.7, 1042.0], [92.8, 1042.0], [92.9, 1043.0], [93.0, 1043.0], [93.1, 1043.0], [93.2, 1043.0], [93.3, 1043.0], [93.4, 1043.0], [93.5, 1044.0], [93.6, 1044.0], [93.7, 1044.0], [93.8, 1044.0], [93.9, 1045.0], [94.0, 1046.0], [94.1, 1047.0], [94.2, 1048.0], [94.3, 1048.0], [94.4, 1048.0], [94.5, 1049.0], [94.6, 1049.0], [94.7, 1049.0], [94.8, 1050.0], [94.9, 1050.0], [95.0, 1050.0], [95.1, 1050.0], [95.2, 1050.0], [95.3, 1050.0], [95.4, 1051.0], [95.5, 1051.0], [95.6, 1051.0], [95.7, 1051.0], [95.8, 1052.0], [95.9, 1052.0], [96.0, 1053.0], [96.1, 1053.0], [96.2, 1054.0], [96.3, 1054.0], [96.4, 1055.0], [96.5, 1055.0], [96.6, 1055.0], [96.7, 1056.0], [96.8, 1056.0], [96.9, 1056.0], [97.0, 1056.0], [97.1, 1057.0], [97.2, 1057.0], [97.3, 1057.0], [97.4, 1057.0], [97.5, 1058.0], [97.6, 1058.0], [97.7, 1059.0], [97.8, 1059.0], [97.9, 1060.0], [98.0, 1060.0], [98.1, 1061.0], [98.2, 1062.0], [98.3, 1062.0], [98.4, 1063.0], [98.5, 1063.0], [98.6, 1064.0], [98.7, 1064.0], [98.8, 1064.0], [98.9, 1064.0], [99.0, 1065.0], [99.1, 1065.0], [99.2, 1065.0], [99.3, 1066.0], [99.4, 1066.0], [99.5, 1066.0], [99.6, 1067.0], [99.7, 1068.0], [99.8, 1069.0], [99.9, 1071.0]], "isOverall": false, "label": "Open Main Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 21110.0, "series": [{"data": [[0.0, 21110.0], [1100.0, 2.0], [300.0, 1.0], [400.0, 2.0], [200.0, 2.0], [1000.0, 2883.0]], "isOverall": false, "label": "Open Main Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2885.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1\u00A0500ms"], [2, "Requests having \nresponse time > 1\u00A0500ms"], [3, "Requests in error"]], "maxY": 21115.0, "series": [{"data": [[0.0, 21115.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2885.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1\u00A0500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1\u00A0500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.59745698E12, "maxY": 1.2500000000000004, "series": [{"data": [[1.597458E12, 1.0600000000000007], [1.5974616E12, 1.111111111111111], [1.59746808E12, 1.1199999999999999], [1.59746142E12, 1.0792079207920788], [1.59746586E12, 1.198019801980198], [1.5974703E12, 1.0999999999999994], [1.59746364E12, 1.1200000000000006], [1.59745956E12, 1.1212121212121213], [1.597464E12, 1.0999999999999996], [1.59746826E12, 1.1300000000000001], [1.59747048E12, 1.1500000000000001], [1.59746178E12, 1.0899999999999994], [1.59746382E12, 1.1089108910891086], [1.59746604E12, 1.1500000000000001], [1.59745782E12, 1.1188118811881194], [1.59745974E12, 1.1386138613861385], [1.59746196E12, 1.07], [1.59746418E12, 1.1200000000000006], [1.5974664E12, 1.0899999999999999], [1.59746844E12, 1.1089108910891092], [1.59747066E12, 1.1400000000000003], [1.59745764E12, 1.0899999999999996], [1.59746622E12, 1.13], [1.59746862E12, 1.1414141414141417], [1.59747084E12, 1.1600000000000006], [1.59746214E12, 1.0899999999999999], [1.59746658E12, 1.1000000000000003], [1.59746436E12, 1.08], [1.59745746E12, 1.1200000000000003], [1.59745992E12, 1.0693069306930694], [1.5974688E12, 1.1300000000000001], [1.59747102E12, 1.15], [1.5974571E12, 1.1100000000000008], [1.59745932E12, 1.1500000000000004], [1.59746676E12, 1.138613861386139], [1.59746454E12, 1.1], [1.59745728E12, 1.0909090909090908], [1.59746898E12, 1.0799999999999998], [1.5974712E12, 1.12], [1.5974601E12, 1.0999999999999996], [1.59746232E12, 1.1300000000000001], [1.59745914E12, 1.1199999999999999], [1.59746694E12, 1.2300000000000004], [1.59746472E12, 1.1313131313131313], [1.59746916E12, 1.1100000000000005], [1.59746028E12, 1.1683168316831685], [1.59747138E12, 1.1250000000000002], [1.5974625E12, 1.1000000000000005], [1.59745896E12, 1.1584158415841583], [1.59746064E12, 1.217821782178218], [1.59746046E12, 1.1313131313131313], [1.59746268E12, 1.1400000000000006], [1.5974649E12, 1.1699999999999997], [1.59746712E12, 1.168316831683169], [1.59746934E12, 1.1100000000000005], [1.59746082E12, 1.16], [1.59746304E12, 1.0699999999999998], [1.59746952E12, 1.1500000000000004], [1.59746286E12, 1.1199999999999997], [1.5974673E12, 1.07], [1.59745878E12, 1.1100000000000003], [1.59746508E12, 1.1500000000000001], [1.5974574E12, 1.0899999999999999], [1.59746646E12, 1.1999999999999997], [1.5974598E12, 1.1100000000000003], [1.59746424E12, 1.0800000000000005], [1.59746868E12, 1.13], [1.59746202E12, 1.17], [1.5974709E12, 1.2000000000000006], [1.59745722E12, 1.0600000000000003], [1.59746016E12, 1.0899999999999999], [1.59746886E12, 1.1300000000000001], [1.59747108E12, 1.109999999999999], [1.59745998E12, 1.0899999999999994], [1.5974622E12, 1.0999999999999999], [1.59746442E12, 1.0700000000000003], [1.59746664E12, 1.09], [1.59745704E12, 1.0499999999999996], [1.59746256E12, 1.1200000000000006], [1.59746034E12, 1.070000000000001], [1.59746904E12, 1.2099999999999995], [1.59746682E12, 1.1200000000000006], [1.59747126E12, 1.0799999999999996], [1.59746238E12, 1.0499999999999998], [1.59745926E12, 1.0499999999999996], [1.5974646E12, 1.0799999999999998], [1.59746052E12, 1.1499999999999997], [1.59746496E12, 1.1199999999999999], [1.59746922E12, 1.14], [1.59746274E12, 1.1300000000000001], [1.59745908E12, 1.0799999999999994], [1.59746478E12, 1.138613861386138], [1.597467E12, 1.12], [1.5974607E12, 1.1700000000000002], [1.59746292E12, 1.0799999999999994], [1.59746514E12, 1.1800000000000002], [1.59746736E12, 1.1300000000000003], [1.5974694E12, 1.1300000000000003], [1.5974589E12, 1.0909090909090906], [1.59746718E12, 1.2200000000000006], [1.59746958E12, 1.18], [1.5974631E12, 1.0799999999999998], [1.59746754E12, 1.1300000000000001], [1.59745854E12, 1.0699999999999996], [1.59746532E12, 1.1400000000000001], [1.59745872E12, 1.0792079207920793], [1.59746088E12, 1.1600000000000001], [1.59746976E12, 1.12], [1.59745836E12, 1.1414141414141414], [1.5974655E12, 1.1188118811881191], [1.59746772E12, 1.1700000000000006], [1.59746106E12, 1.1099999999999999], [1.59746328E12, 1.131313131313131], [1.59746994E12, 1.0799999999999994], [1.59745818E12, 1.0899999999999996], [1.5974679E12, 1.1400000000000001], [1.59747012E12, 1.11], [1.59746124E12, 1.1212121212121215], [1.59746568E12, 1.1500000000000004], [1.59746346E12, 1.1386138613861383], [1.5974691E12, 1.2500000000000004], [1.59747132E12, 1.14], [1.59746262E12, 1.1699999999999997], [1.59746706E12, 1.1818181818181819], [1.59745902E12, 1.1200000000000006], [1.59746484E12, 1.1300000000000003], [1.59745698E12, 1.0], [1.5974592E12, 1.1499999999999997], [1.59746928E12, 1.0699999999999996], [1.5974604E12, 1.0899999999999999], [1.59745884E12, 1.1299999999999997], [1.59746502E12, 1.1300000000000003], [1.59746724E12, 1.1500000000000004], [1.59746058E12, 1.2199999999999995], [1.5974628E12, 1.1400000000000001], [1.59746946E12, 1.1400000000000001], [1.59745866E12, 1.1313131313131317], [1.59746742E12, 1.0799999999999996], [1.59746076E12, 1.1500000000000004], [1.5974652E12, 1.13], [1.59746964E12, 1.1400000000000008], [1.59746298E12, 1.1400000000000006], [1.59745848E12, 1.06], [1.59746112E12, 1.1287128712871288], [1.59746094E12, 1.0900000000000003], [1.59746316E12, 1.0900000000000005], [1.59746538E12, 1.0600000000000003], [1.5974676E12, 1.14], [1.59746982E12, 1.13], [1.5974613E12, 1.2178217821782185], [1.59746352E12, 1.1099999999999999], [1.59747E12, 1.1515151515151516], [1.59746334E12, 1.079207920792079], [1.59746778E12, 1.16], [1.59746556E12, 1.0900000000000003], [1.5974583E12, 1.11], [1.5974637E12, 1.1500000000000008], [1.59746592E12, 1.1800000000000002], [1.59746148E12, 1.0899999999999996], [1.59746796E12, 1.08], [1.59747018E12, 1.1200000000000003], [1.59745812E12, 1.1], [1.59746574E12, 1.0899999999999996], [1.59746814E12, 1.17], [1.59747036E12, 1.1099999999999999], [1.59746166E12, 1.1386138613861385], [1.5974661E12, 1.1000000000000005], [1.59746388E12, 1.0699999999999998], [1.59745794E12, 1.1199999999999999], [1.59745944E12, 1.11], [1.59746832E12, 1.1111111111111112], [1.59747054E12, 1.0909090909090913], [1.59746406E12, 1.0600000000000005], [1.59746628E12, 1.1499999999999997], [1.59745758E12, 1.0799999999999996], [1.59745776E12, 1.121212121212122], [1.59745962E12, 1.0990099009900987], [1.59746184E12, 1.1899999999999997], [1.5974685E12, 1.101010101010101], [1.59747072E12, 1.161616161616162], [1.597461E12, 1.1515151515151512], [1.59746544E12, 1.1919191919191916], [1.5974697E12, 1.0899999999999999], [1.59746322E12, 1.0600000000000005], [1.5974586E12, 1.1000000000000005], [1.59746526E12, 1.1699999999999997], [1.59746748E12, 1.1899999999999997], [1.59746118E12, 1.1400000000000003], [1.5974634E12, 1.1414141414141412], [1.59746562E12, 1.1100000000000003], [1.59746988E12, 1.12], [1.59745842E12, 1.1089108910891097], [1.59746766E12, 1.08], [1.59746784E12, 1.1399999999999997], [1.59746358E12, 1.0999999999999994], [1.59747006E12, 1.118811881188119], [1.5974658E12, 1.161616161616162], [1.59745806E12, 1.0899999999999994], [1.59745824E12, 1.1200000000000003], [1.59746802E12, 1.1400000000000008], [1.59747024E12, 1.1500000000000001], [1.59746136E12, 1.121212121212121], [1.59745788E12, 1.1200000000000003], [1.59746598E12, 1.1200000000000003], [1.59746376E12, 1.0909090909090904], [1.5974682E12, 1.1200000000000006], [1.59746154E12, 1.1200000000000006], [1.59747042E12, 1.1100000000000003], [1.5974577E12, 1.0599999999999998], [1.59745968E12, 1.1111111111111116], [1.5974595E12, 1.0700000000000003], [1.59746172E12, 1.1000000000000005], [1.59746394E12, 1.11], [1.59746616E12, 1.1800000000000004], [1.59746838E12, 1.1000000000000003], [1.5974706E12, 1.1188118811881191], [1.59745752E12, 1.1200000000000006], [1.59745986E12, 1.0808080808080807], [1.59746208E12, 1.11], [1.59746856E12, 1.1188118811881196], [1.5974619E12, 1.100000000000001], [1.59746634E12, 1.1400000000000003], [1.59747078E12, 1.0693069306930694], [1.59746412E12, 1.1500000000000001], [1.59746004E12, 1.0999999999999999], [1.59746448E12, 1.1500000000000004], [1.59747096E12, 1.0799999999999998], [1.59746874E12, 1.1089108910891095], [1.59746226E12, 1.0699999999999998], [1.5974643E12, 1.1199999999999999], [1.59746652E12, 1.1899999999999997], [1.59745734E12, 1.099009900990099], [1.59746466E12, 1.12], [1.59746688E12, 1.0899999999999999], [1.59746022E12, 1.1010101010101008], [1.59746244E12, 1.0899999999999996], [1.59746892E12, 1.0600000000000005], [1.59747114E12, 1.0699999999999998], [1.59745938E12, 1.1300000000000003], [1.59745716E12, 1.0499999999999998], [1.5974667E12, 1.1111111111111114]], "isOverall": false, "label": "bzm - Arrivals Thread Group [Scenario 4]-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59747138E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 149.96776429809327, "minX": 1.0, "maxY": 156.7400426237273, "series": [{"data": [[1.0, 156.7400426237273], [2.0, 149.96776429809327]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.1202083333333357, 155.9259583333337]], "isOverall": false, "label": "Open Main Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10.333333333333334, "minX": 1.59745698E12, "maxY": 3452.516666666667, "series": [{"data": [[1.597458E12, 3418.3333333333335], [1.5974616E12, 3384.15], [1.59746808E12, 3418.3333333333335], [1.59746142E12, 3452.516666666667], [1.59746586E12, 3452.516666666667], [1.5974703E12, 3418.3333333333335], [1.59746364E12, 3418.3333333333335], [1.59745956E12, 3384.15], [1.597464E12, 3418.3333333333335], [1.59746826E12, 3418.3333333333335], [1.59747048E12, 3418.3333333333335], [1.59746178E12, 3418.3333333333335], [1.59746382E12, 3452.516666666667], [1.59746604E12, 3418.3333333333335], [1.59745782E12, 3452.516666666667], [1.59745974E12, 3452.516666666667], [1.59746196E12, 3418.3333333333335], [1.59746418E12, 3418.3333333333335], [1.5974664E12, 3418.3333333333335], [1.59746844E12, 3452.516666666667], [1.59747066E12, 3418.3333333333335], [1.59745764E12, 3418.3333333333335], [1.59746622E12, 3418.3333333333335], [1.59746862E12, 3384.15], [1.59747084E12, 3418.3333333333335], [1.59746214E12, 3418.3333333333335], [1.59746658E12, 3418.3333333333335], [1.59746436E12, 3418.3333333333335], [1.59745746E12, 3418.3333333333335], [1.59745992E12, 3452.516666666667], [1.5974688E12, 3418.3333333333335], [1.59747102E12, 3418.3333333333335], [1.5974571E12, 3418.3333333333335], [1.59745932E12, 3418.3333333333335], [1.59746676E12, 3452.516666666667], [1.59746454E12, 3418.3333333333335], [1.59745728E12, 3384.15], [1.59746898E12, 3418.3333333333335], [1.5974712E12, 3418.3333333333335], [1.5974601E12, 3418.3333333333335], [1.59746232E12, 3418.3333333333335], [1.59745914E12, 3418.3333333333335], [1.59746694E12, 3418.3333333333335], [1.59746472E12, 3384.15], [1.59746916E12, 3418.3333333333335], [1.59746028E12, 3452.516666666667], [1.59747138E12, 3281.6], [1.5974625E12, 3418.3333333333335], [1.59745896E12, 3452.516666666667], [1.59746064E12, 3452.516666666667], [1.59746046E12, 3384.15], [1.59746268E12, 3418.3333333333335], [1.5974649E12, 3418.3333333333335], [1.59746712E12, 3452.516666666667], [1.59746934E12, 3418.3333333333335], [1.59746082E12, 3418.3333333333335], [1.59746304E12, 3418.3333333333335], [1.59746952E12, 3418.3333333333335], [1.59746286E12, 3418.3333333333335], [1.5974673E12, 3418.3333333333335], [1.59745878E12, 3418.3333333333335], [1.59746508E12, 3418.3333333333335], [1.5974574E12, 3418.3333333333335], [1.59746646E12, 3418.3333333333335], [1.5974598E12, 3418.3333333333335], [1.59746424E12, 3418.3333333333335], [1.59746868E12, 3418.3333333333335], [1.59746202E12, 3418.3333333333335], [1.5974709E12, 3418.3333333333335], [1.59745722E12, 3418.3333333333335], [1.59746016E12, 3418.3333333333335], [1.59746886E12, 3418.3333333333335], [1.59747108E12, 3418.3333333333335], [1.59745998E12, 3418.3333333333335], [1.5974622E12, 3418.3333333333335], [1.59746442E12, 3418.3333333333335], [1.59746664E12, 3418.3333333333335], [1.59745704E12, 3418.3333333333335], [1.59746256E12, 3418.3333333333335], [1.59746034E12, 3418.3333333333335], [1.59746904E12, 3418.3333333333335], [1.59746682E12, 3418.3333333333335], [1.59747126E12, 3418.3333333333335], [1.59746238E12, 3418.3333333333335], [1.59745926E12, 3418.3333333333335], [1.5974646E12, 3418.3333333333335], [1.59746052E12, 3418.3333333333335], [1.59746496E12, 3418.3333333333335], [1.59746922E12, 3418.3333333333335], [1.59746274E12, 3418.3333333333335], [1.59745908E12, 3418.3333333333335], [1.59746478E12, 3452.516666666667], [1.597467E12, 3418.3333333333335], [1.5974607E12, 3418.3333333333335], [1.59746292E12, 3418.3333333333335], [1.59746514E12, 3418.3333333333335], [1.59746736E12, 3418.3333333333335], [1.5974694E12, 3418.3333333333335], [1.5974589E12, 3384.15], [1.59746718E12, 3418.3333333333335], [1.59746958E12, 3418.3333333333335], [1.5974631E12, 3418.3333333333335], [1.59746754E12, 3418.3333333333335], [1.59745854E12, 3418.3333333333335], [1.59746532E12, 3418.3333333333335], [1.59745872E12, 3452.516666666667], [1.59746088E12, 3418.3333333333335], [1.59746976E12, 3418.3333333333335], [1.59745836E12, 3384.15], [1.5974655E12, 3452.516666666667], [1.59746772E12, 3418.3333333333335], [1.59746106E12, 3418.3333333333335], [1.59746328E12, 3384.15], [1.59746994E12, 3418.3333333333335], [1.59745818E12, 3418.3333333333335], [1.5974679E12, 3418.3333333333335], [1.59747012E12, 3418.3333333333335], [1.59746124E12, 3384.15], [1.59746568E12, 3418.3333333333335], [1.59746346E12, 3452.516666666667], [1.5974691E12, 3418.3333333333335], [1.59747132E12, 3418.3333333333335], [1.59746262E12, 3418.3333333333335], [1.59746706E12, 3384.15], [1.59745902E12, 3418.3333333333335], [1.59746484E12, 3418.3333333333335], [1.59745698E12, 136.73333333333332], [1.5974592E12, 3418.3333333333335], [1.59746928E12, 3418.3333333333335], [1.5974604E12, 3418.3333333333335], [1.59745884E12, 3418.3333333333335], [1.59746502E12, 3418.3333333333335], [1.59746724E12, 3418.3333333333335], [1.59746058E12, 3418.3333333333335], [1.5974628E12, 3418.3333333333335], [1.59746946E12, 3418.3333333333335], [1.59745866E12, 3384.15], [1.59746742E12, 3418.3333333333335], [1.59746076E12, 3418.3333333333335], [1.5974652E12, 3418.3333333333335], [1.59746964E12, 3418.3333333333335], [1.59746298E12, 3418.3333333333335], [1.59745848E12, 3418.3333333333335], [1.59746112E12, 3452.516666666667], [1.59746094E12, 3418.3333333333335], [1.59746316E12, 3418.3333333333335], [1.59746538E12, 3418.3333333333335], [1.5974676E12, 3418.3333333333335], [1.59746982E12, 3418.3333333333335], [1.5974613E12, 3452.516666666667], [1.59746352E12, 3418.3333333333335], [1.59747E12, 3384.15], [1.59746334E12, 3452.516666666667], [1.59746778E12, 3418.3333333333335], [1.59746556E12, 3418.3333333333335], [1.5974583E12, 3418.3333333333335], [1.5974637E12, 3418.3333333333335], [1.59746592E12, 3418.3333333333335], [1.59746148E12, 3418.3333333333335], [1.59746796E12, 3418.3333333333335], [1.59747018E12, 3418.3333333333335], [1.59745812E12, 3418.3333333333335], [1.59746574E12, 3418.3333333333335], [1.59746814E12, 3418.3333333333335], [1.59747036E12, 3418.3333333333335], [1.59746166E12, 3452.516666666667], [1.5974661E12, 3418.3333333333335], [1.59746388E12, 3418.3333333333335], [1.59745794E12, 3418.3333333333335], [1.59745944E12, 3418.3333333333335], [1.59746832E12, 3384.15], [1.59747054E12, 3384.15], [1.59746406E12, 3418.3333333333335], [1.59746628E12, 3418.3333333333335], [1.59745758E12, 3418.3333333333335], [1.59745776E12, 3384.15], [1.59745962E12, 3452.516666666667], [1.59746184E12, 3418.3333333333335], [1.5974685E12, 3384.15], [1.59747072E12, 3384.15], [1.597461E12, 3384.15], [1.59746544E12, 3384.15], [1.5974697E12, 3418.3333333333335], [1.59746322E12, 3418.3333333333335], [1.5974586E12, 3418.3333333333335], [1.59746526E12, 3418.3333333333335], [1.59746748E12, 3418.3333333333335], [1.59746118E12, 3418.3333333333335], [1.5974634E12, 3384.15], [1.59746562E12, 3418.3333333333335], [1.59746988E12, 3418.3333333333335], [1.59745842E12, 3452.516666666667], [1.59746766E12, 3418.3333333333335], [1.59746784E12, 3418.3333333333335], [1.59746358E12, 3418.3333333333335], [1.59747006E12, 3452.516666666667], [1.5974658E12, 3384.15], [1.59745806E12, 3418.3333333333335], [1.59745824E12, 3418.3333333333335], [1.59746802E12, 3418.3333333333335], [1.59747024E12, 3418.3333333333335], [1.59746136E12, 3384.15], [1.59745788E12, 3418.3333333333335], [1.59746598E12, 3418.3333333333335], [1.59746376E12, 3384.15], [1.5974682E12, 3418.3333333333335], [1.59746154E12, 3418.3333333333335], [1.59747042E12, 3418.3333333333335], [1.5974577E12, 3418.3333333333335], [1.59745968E12, 3384.15], [1.5974595E12, 3418.3333333333335], [1.59746172E12, 3418.3333333333335], [1.59746394E12, 3418.3333333333335], [1.59746616E12, 3418.3333333333335], [1.59746838E12, 3418.3333333333335], [1.5974706E12, 3452.516666666667], [1.59745752E12, 3418.3333333333335], [1.59745986E12, 3384.15], [1.59746208E12, 3418.3333333333335], [1.59746856E12, 3452.516666666667], [1.5974619E12, 3418.3333333333335], [1.59746634E12, 3418.3333333333335], [1.59747078E12, 3452.516666666667], [1.59746412E12, 3418.3333333333335], [1.59746004E12, 3418.3333333333335], [1.59746448E12, 3418.3333333333335], [1.59747096E12, 3418.3333333333335], [1.59746874E12, 3452.516666666667], [1.59746226E12, 3418.3333333333335], [1.5974643E12, 3418.3333333333335], [1.59746652E12, 3418.3333333333335], [1.59745734E12, 3452.516666666667], [1.59746466E12, 3418.3333333333335], [1.59746688E12, 3418.3333333333335], [1.59746022E12, 3384.15], [1.59746244E12, 3418.3333333333335], [1.59746892E12, 3418.3333333333335], [1.59747114E12, 3418.3333333333335], [1.59745938E12, 3418.3333333333335], [1.59745716E12, 3418.3333333333335], [1.5974667E12, 3384.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.597458E12, 258.3333333333333], [1.5974616E12, 255.75], [1.59746808E12, 258.3333333333333], [1.59746142E12, 260.9166666666667], [1.59746586E12, 260.9166666666667], [1.5974703E12, 258.3333333333333], [1.59746364E12, 258.3333333333333], [1.59745956E12, 255.75], [1.597464E12, 258.3333333333333], [1.59746826E12, 258.3333333333333], [1.59747048E12, 258.3333333333333], [1.59746178E12, 258.3333333333333], [1.59746382E12, 260.9166666666667], [1.59746604E12, 258.3333333333333], [1.59745782E12, 260.9166666666667], [1.59745974E12, 260.9166666666667], [1.59746196E12, 258.3333333333333], [1.59746418E12, 258.3333333333333], [1.5974664E12, 258.3333333333333], [1.59746844E12, 260.9166666666667], [1.59747066E12, 258.3333333333333], [1.59745764E12, 258.3333333333333], [1.59746622E12, 258.3333333333333], [1.59746862E12, 255.75], [1.59747084E12, 258.3333333333333], [1.59746214E12, 258.3333333333333], [1.59746658E12, 258.3333333333333], [1.59746436E12, 258.3333333333333], [1.59745746E12, 258.3333333333333], [1.59745992E12, 260.9166666666667], [1.5974688E12, 258.3333333333333], [1.59747102E12, 258.3333333333333], [1.5974571E12, 258.3333333333333], [1.59745932E12, 258.3333333333333], [1.59746676E12, 260.9166666666667], [1.59746454E12, 258.3333333333333], [1.59745728E12, 255.75], [1.59746898E12, 258.3333333333333], [1.5974712E12, 258.3333333333333], [1.5974601E12, 258.3333333333333], [1.59746232E12, 258.3333333333333], [1.59745914E12, 258.3333333333333], [1.59746694E12, 258.3333333333333], [1.59746472E12, 255.75], [1.59746916E12, 258.3333333333333], [1.59746028E12, 260.9166666666667], [1.59747138E12, 248.0], [1.5974625E12, 258.3333333333333], [1.59745896E12, 260.9166666666667], [1.59746064E12, 260.9166666666667], [1.59746046E12, 255.75], [1.59746268E12, 258.3333333333333], [1.5974649E12, 258.3333333333333], [1.59746712E12, 260.9166666666667], [1.59746934E12, 258.3333333333333], [1.59746082E12, 258.3333333333333], [1.59746304E12, 258.3333333333333], [1.59746952E12, 258.3333333333333], [1.59746286E12, 258.3333333333333], [1.5974673E12, 258.3333333333333], [1.59745878E12, 258.3333333333333], [1.59746508E12, 258.3333333333333], [1.5974574E12, 258.3333333333333], [1.59746646E12, 258.3333333333333], [1.5974598E12, 258.3333333333333], [1.59746424E12, 258.3333333333333], [1.59746868E12, 258.3333333333333], [1.59746202E12, 258.3333333333333], [1.5974709E12, 258.3333333333333], [1.59745722E12, 258.3333333333333], [1.59746016E12, 258.3333333333333], [1.59746886E12, 258.3333333333333], [1.59747108E12, 258.3333333333333], [1.59745998E12, 258.3333333333333], [1.5974622E12, 258.3333333333333], [1.59746442E12, 258.3333333333333], [1.59746664E12, 258.3333333333333], [1.59745704E12, 258.3333333333333], [1.59746256E12, 258.3333333333333], [1.59746034E12, 258.3333333333333], [1.59746904E12, 258.3333333333333], [1.59746682E12, 258.3333333333333], [1.59747126E12, 258.3333333333333], [1.59746238E12, 258.3333333333333], [1.59745926E12, 258.3333333333333], [1.5974646E12, 258.3333333333333], [1.59746052E12, 258.3333333333333], [1.59746496E12, 258.3333333333333], [1.59746922E12, 258.3333333333333], [1.59746274E12, 258.3333333333333], [1.59745908E12, 258.3333333333333], [1.59746478E12, 260.9166666666667], [1.597467E12, 258.3333333333333], [1.5974607E12, 258.3333333333333], [1.59746292E12, 258.3333333333333], [1.59746514E12, 258.3333333333333], [1.59746736E12, 258.3333333333333], [1.5974694E12, 258.3333333333333], [1.5974589E12, 255.75], [1.59746718E12, 258.3333333333333], [1.59746958E12, 258.3333333333333], [1.5974631E12, 258.3333333333333], [1.59746754E12, 258.3333333333333], [1.59745854E12, 258.3333333333333], [1.59746532E12, 258.3333333333333], [1.59745872E12, 260.9166666666667], [1.59746088E12, 258.3333333333333], [1.59746976E12, 258.3333333333333], [1.59745836E12, 255.75], [1.5974655E12, 260.9166666666667], [1.59746772E12, 258.3333333333333], [1.59746106E12, 258.3333333333333], [1.59746328E12, 255.75], [1.59746994E12, 258.3333333333333], [1.59745818E12, 258.3333333333333], [1.5974679E12, 258.3333333333333], [1.59747012E12, 258.3333333333333], [1.59746124E12, 255.75], [1.59746568E12, 258.3333333333333], [1.59746346E12, 260.9166666666667], [1.5974691E12, 258.3333333333333], [1.59747132E12, 258.3333333333333], [1.59746262E12, 258.3333333333333], [1.59746706E12, 255.75], [1.59745902E12, 258.3333333333333], [1.59746484E12, 258.3333333333333], [1.59745698E12, 10.333333333333334], [1.5974592E12, 258.3333333333333], [1.59746928E12, 258.3333333333333], [1.5974604E12, 258.3333333333333], [1.59745884E12, 258.3333333333333], [1.59746502E12, 258.3333333333333], [1.59746724E12, 258.3333333333333], [1.59746058E12, 258.3333333333333], [1.5974628E12, 258.3333333333333], [1.59746946E12, 258.3333333333333], [1.59745866E12, 255.75], [1.59746742E12, 258.3333333333333], [1.59746076E12, 258.3333333333333], [1.5974652E12, 258.3333333333333], [1.59746964E12, 258.3333333333333], [1.59746298E12, 258.3333333333333], [1.59745848E12, 258.3333333333333], [1.59746112E12, 260.9166666666667], [1.59746094E12, 258.3333333333333], [1.59746316E12, 258.3333333333333], [1.59746538E12, 258.3333333333333], [1.5974676E12, 258.3333333333333], [1.59746982E12, 258.3333333333333], [1.5974613E12, 260.9166666666667], [1.59746352E12, 258.3333333333333], [1.59747E12, 255.75], [1.59746334E12, 260.9166666666667], [1.59746778E12, 258.3333333333333], [1.59746556E12, 258.3333333333333], [1.5974583E12, 258.3333333333333], [1.5974637E12, 258.3333333333333], [1.59746592E12, 258.3333333333333], [1.59746148E12, 258.3333333333333], [1.59746796E12, 258.3333333333333], [1.59747018E12, 258.3333333333333], [1.59745812E12, 258.3333333333333], [1.59746574E12, 258.3333333333333], [1.59746814E12, 258.3333333333333], [1.59747036E12, 258.3333333333333], [1.59746166E12, 260.9166666666667], [1.5974661E12, 258.3333333333333], [1.59746388E12, 258.3333333333333], [1.59745794E12, 258.3333333333333], [1.59745944E12, 258.3333333333333], [1.59746832E12, 255.75], [1.59747054E12, 255.75], [1.59746406E12, 258.3333333333333], [1.59746628E12, 258.3333333333333], [1.59745758E12, 258.3333333333333], [1.59745776E12, 255.75], [1.59745962E12, 260.9166666666667], [1.59746184E12, 258.3333333333333], [1.5974685E12, 255.75], [1.59747072E12, 255.75], [1.597461E12, 255.75], [1.59746544E12, 255.75], [1.5974697E12, 258.3333333333333], [1.59746322E12, 258.3333333333333], [1.5974586E12, 258.3333333333333], [1.59746526E12, 258.3333333333333], [1.59746748E12, 258.3333333333333], [1.59746118E12, 258.3333333333333], [1.5974634E12, 255.75], [1.59746562E12, 258.3333333333333], [1.59746988E12, 258.3333333333333], [1.59745842E12, 260.9166666666667], [1.59746766E12, 258.3333333333333], [1.59746784E12, 258.3333333333333], [1.59746358E12, 258.3333333333333], [1.59747006E12, 260.9166666666667], [1.5974658E12, 255.75], [1.59745806E12, 258.3333333333333], [1.59745824E12, 258.3333333333333], [1.59746802E12, 258.3333333333333], [1.59747024E12, 258.3333333333333], [1.59746136E12, 255.75], [1.59745788E12, 258.3333333333333], [1.59746598E12, 258.3333333333333], [1.59746376E12, 255.75], [1.5974682E12, 258.3333333333333], [1.59746154E12, 258.3333333333333], [1.59747042E12, 258.3333333333333], [1.5974577E12, 258.3333333333333], [1.59745968E12, 255.75], [1.5974595E12, 258.3333333333333], [1.59746172E12, 258.3333333333333], [1.59746394E12, 258.3333333333333], [1.59746616E12, 258.3333333333333], [1.59746838E12, 258.3333333333333], [1.5974706E12, 260.9166666666667], [1.59745752E12, 258.3333333333333], [1.59745986E12, 255.75], [1.59746208E12, 258.3333333333333], [1.59746856E12, 260.9166666666667], [1.5974619E12, 258.3333333333333], [1.59746634E12, 258.3333333333333], [1.59747078E12, 260.9166666666667], [1.59746412E12, 258.3333333333333], [1.59746004E12, 258.3333333333333], [1.59746448E12, 258.3333333333333], [1.59747096E12, 258.3333333333333], [1.59746874E12, 260.9166666666667], [1.59746226E12, 258.3333333333333], [1.5974643E12, 258.3333333333333], [1.59746652E12, 258.3333333333333], [1.59745734E12, 260.9166666666667], [1.59746466E12, 258.3333333333333], [1.59746688E12, 258.3333333333333], [1.59746022E12, 255.75], [1.59746244E12, 258.3333333333333], [1.59746892E12, 258.3333333333333], [1.59747114E12, 258.3333333333333], [1.59745938E12, 258.3333333333333], [1.59745716E12, 258.3333333333333], [1.5974667E12, 255.75]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59747138E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 47.5, "minX": 1.59745698E12, "maxY": 289.05, "series": [{"data": [[1.597458E12, 95.31999999999995], [1.5974616E12, 146.8686868686869], [1.59746808E12, 156.0199999999999], [1.59746142E12, 114.2376237623763], [1.59746586E12, 233.6633663366337], [1.5974703E12, 135.82999999999996], [1.59746364E12, 155.41], [1.59745956E12, 156.21212121212122], [1.597464E12, 134.61999999999998], [1.59746826E12, 166.2], [1.59747048E12, 186.81000000000003], [1.59746178E12, 124.98999999999992], [1.59746382E12, 143.7821782178218], [1.59746604E12, 184.66], [1.59745782E12, 155.94059405940592], [1.59745974E12, 173.6039603960396], [1.59746196E12, 105.0], [1.59746418E12, 155.16], [1.5974664E12, 125.37999999999995], [1.59746844E12, 144.08910891089107], [1.59747066E12, 176.04], [1.59745764E12, 126.10999999999996], [1.59746622E12, 165.50000000000006], [1.59746862E12, 177.71717171717174], [1.59747084E12, 197.43000000000004], [1.59746214E12, 124.27000000000004], [1.59746658E12, 136.14000000000001], [1.59746436E12, 114.58999999999997], [1.59745746E12, 156.59000000000003], [1.59745992E12, 103.75247524752471], [1.5974688E12, 165.64], [1.59747102E12, 186.32999999999998], [1.5974571E12, 147.45000000000002], [1.59745932E12, 185.46999999999997], [1.59746676E12, 174.18811881188114], [1.59746454E12, 134.80999999999995], [1.59745728E12, 127.05050505050501], [1.59746898E12, 115.37], [1.5974712E12, 157.31000000000003], [1.5974601E12, 135.24], [1.59746232E12, 164.22999999999996], [1.59745914E12, 154.51], [1.59746694E12, 268.65999999999997], [1.59746472E12, 166.3030303030302], [1.59746916E12, 148.2299999999999], [1.59746028E12, 204.8415841584159], [1.59747138E12, 161.59375000000006], [1.5974625E12, 134.36000000000004], [1.59745896E12, 193.61386138613858], [1.59746064E12, 255.33663366336637], [1.59746046E12, 167.5151515151515], [1.59746268E12, 175.18999999999997], [1.5974649E12, 205.22000000000008], [1.59746712E12, 206.009900990099], [1.59746934E12, 145.70000000000007], [1.59746082E12, 196.40000000000003], [1.59746304E12, 104.85000000000001], [1.59746952E12, 185.84000000000006], [1.59746286E12, 154.46999999999997], [1.5974673E12, 105.34999999999997], [1.59745878E12, 144.9600000000001], [1.59746508E12, 184.60999999999999], [1.5974574E12, 126.34], [1.59746646E12, 237.13000000000005], [1.5974598E12, 144.90000000000003], [1.59746424E12, 114.16999999999999], [1.59746868E12, 166.10000000000005], [1.59746202E12, 206.98999999999995], [1.5974709E12, 237.4599999999999], [1.59745722E12, 95.86000000000001], [1.59746016E12, 124.67999999999996], [1.59746886E12, 165.61000000000004], [1.59747108E12, 145.5], [1.59745998E12, 125.82000000000001], [1.5974622E12, 133.83000000000004], [1.59746442E12, 105.08], [1.59746664E12, 125.22999999999998], [1.59745704E12, 86.47000000000001], [1.59746256E12, 155.07999999999996], [1.59746034E12, 108.24], [1.59746904E12, 248.53], [1.59746682E12, 156.44999999999996], [1.59747126E12, 115.48999999999998], [1.59746238E12, 84.15000000000002], [1.59745926E12, 85.04], [1.5974646E12, 114.41999999999999], [1.59746052E12, 186.61], [1.59746496E12, 155.03999999999994], [1.59746922E12, 175.73], [1.59746274E12, 165.11999999999998], [1.59745908E12, 114.79000000000002], [1.59746478E12, 173.18811881188122], [1.597467E12, 155.79999999999998], [1.5974607E12, 206.40999999999994], [1.59746292E12, 114.25], [1.59746514E12, 215.33999999999995], [1.59746736E12, 166.46999999999997], [1.5974694E12, 166.23999999999998], [1.5974589E12, 125.3232323232323], [1.59746718E12, 257.94], [1.59746958E12, 217.19999999999996], [1.5974631E12, 115.08000000000003], [1.59746754E12, 167.01999999999992], [1.59745854E12, 105.84000000000002], [1.59746532E12, 174.88999999999996], [1.59745872E12, 114.73267326732672], [1.59746088E12, 196.21000000000006], [1.59746976E12, 156.48000000000005], [1.59745836E12, 177.81818181818178], [1.5974655E12, 153.5742574257426], [1.59746772E12, 207.17000000000004], [1.59746106E12, 145.11999999999998], [1.59746328E12, 165.83838383838386], [1.59746994E12, 115.31999999999992], [1.59745818E12, 126.03999999999995], [1.5974679E12, 176.70000000000013], [1.59747012E12, 145.63999999999996], [1.59746124E12, 156.90909090909085], [1.59746568E12, 184.40999999999994], [1.59746346E12, 173.92079207920798], [1.5974691E12, 289.05], [1.59747132E12, 176.45999999999995], [1.59746262E12, 205.13999999999996], [1.59746706E12, 218.2727272727274], [1.59745902E12, 155.31], [1.59746484E12, 165.09999999999994], [1.59745698E12, 47.5], [1.5974592E12, 185.10999999999993], [1.59746928E12, 105.49999999999997], [1.5974604E12, 124.82999999999998], [1.59745884E12, 164.95999999999995], [1.59746502E12, 164.6100000000001], [1.59746724E12, 188.19999999999993], [1.59746058E12, 258.07000000000005], [1.5974628E12, 174.84999999999997], [1.59746946E12, 175.41000000000003], [1.59745866E12, 167.6161616161616], [1.59746742E12, 116.28000000000004], [1.59746076E12, 187.67999999999998], [1.5974652E12, 164.44000000000003], [1.59746964E12, 176.35000000000005], [1.59746298E12, 175.21], [1.59745848E12, 94.38999999999999], [1.59746112E12, 164.08910891089104], [1.59746094E12, 126.03000000000002], [1.59746316E12, 124.43999999999996], [1.59746538E12, 94.54000000000005], [1.5974676E12, 177.8600000000001], [1.59746982E12, 166.48999999999998], [1.5974613E12, 254.72277227722768], [1.59746352E12, 144.39000000000004], [1.59747E12, 187.939393939394], [1.59746334E12, 114.0990099009901], [1.59746778E12, 196.19], [1.59746556E12, 124.99000000000002], [1.5974583E12, 145.57999999999996], [1.5974637E12, 185.58000000000004], [1.59746592E12, 216.25999999999996], [1.59746148E12, 125.34999999999994], [1.59746796E12, 115.33], [1.59747018E12, 156.45000000000002], [1.59745812E12, 135.96000000000004], [1.59746574E12, 125.07000000000006], [1.59746814E12, 207.76999999999998], [1.59747036E12, 146.78], [1.59746166E12, 173.940594059406], [1.5974661E12, 134.79000000000002], [1.59746388E12, 104.26000000000005], [1.59745794E12, 157.11], [1.59745944E12, 144.44000000000005], [1.59746832E12, 146.65656565656568], [1.59747054E12, 126.2222222222222], [1.59746406E12, 94.20000000000002], [1.59746628E12, 185.89000000000001], [1.59745758E12, 115.59999999999998], [1.59745776E12, 157.40404040404044], [1.59745962E12, 133.96039603960398], [1.59746184E12, 226.48999999999998], [1.5974685E12, 139.969696969697], [1.59747072E12, 197.92929292929293], [1.597461E12, 187.92929292929304], [1.59746544E12, 227.42424242424238], [1.5974697E12, 124.84999999999998], [1.59746322E12, 94.38000000000001], [1.5974586E12, 136.05999999999997], [1.59746526E12, 204.99000000000004], [1.59746748E12, 227.45000000000007], [1.59746118E12, 176.09], [1.5974634E12, 176.76767676767676], [1.59746562E12, 144.8800000000001], [1.59746988E12, 156.01999999999998], [1.59745842E12, 144.83168316831677], [1.59746766E12, 115.77999999999999], [1.59746784E12, 176.64000000000001], [1.59746358E12, 135.10999999999999], [1.59747006E12, 154.77227722772287], [1.5974658E12, 196.61616161616166], [1.59745806E12, 125.80000000000003], [1.59745824E12, 155.88000000000005], [1.59746802E12, 176.72999999999996], [1.59747024E12, 187.07], [1.59746136E12, 157.19191919191923], [1.59745788E12, 156.02999999999997], [1.59746598E12, 155.37999999999997], [1.59746376E12, 125.25252525252523], [1.5974682E12, 156.05], [1.59746154E12, 155.66], [1.59747042E12, 146.73999999999998], [1.5974577E12, 94.98000000000002], [1.59745968E12, 146.7878787878788], [1.5974595E12, 104.37], [1.59746172E12, 134.82], [1.59746394E12, 149.11999999999992], [1.59746616E12, 217.21999999999994], [1.59746838E12, 135.40999999999997], [1.5974706E12, 154.99999999999997], [1.59745752E12, 155.92999999999998], [1.59745986E12, 115.28282828282826], [1.59746208E12, 144.54999999999995], [1.59746856E12, 154.77227722772273], [1.5974619E12, 135.04000000000005], [1.59746634E12, 175.56000000000006], [1.59747078E12, 104.8118811881188], [1.59746412E12, 184.85000000000005], [1.59746004E12, 135.06999999999996], [1.59746448E12, 184.91000000000005], [1.59747096E12, 115.15999999999998], [1.59746874E12, 144.71287128712873], [1.59746226E12, 104.39999999999995], [1.5974643E12, 154.73999999999995], [1.59746652E12, 226.34000000000003], [1.59745734E12, 134.91089108910896], [1.59746466E12, 155.01999999999995], [1.59746688E12, 124.43999999999996], [1.59746022E12, 136.3838383838384], [1.59746244E12, 123.6], [1.59746892E12, 94.94], [1.59747114E12, 107.49000000000004], [1.59745938E12, 165.66999999999993], [1.59745716E12, 85.98999999999997], [1.5974667E12, 146.92929292929293]], "isOverall": false, "label": "Open Main Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59747138E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 46.75, "minX": 1.59745698E12, "maxY": 286.18, "series": [{"data": [[1.597458E12, 94.55000000000001], [1.5974616E12, 145.76767676767673], [1.59746808E12, 154.49999999999997], [1.59746142E12, 113.61386138613861], [1.59746586E12, 233.49504950495043], [1.5974703E12, 134.34999999999997], [1.59746364E12, 155.36999999999998], [1.59745956E12, 156.20202020202026], [1.597464E12, 134.60999999999996], [1.59746826E12, 164.97999999999996], [1.59747048E12, 185.08000000000007], [1.59746178E12, 124.06999999999998], [1.59746382E12, 143.75247524752476], [1.59746604E12, 184.6500000000001], [1.59745782E12, 154.34653465346528], [1.59745974E12, 173.41584158415847], [1.59746196E12, 104.67000000000004], [1.59746418E12, 155.13], [1.5974664E12, 124.43999999999997], [1.59746844E12, 143.30693069306923], [1.59747066E12, 174.67], [1.59745764E12, 125.22], [1.59746622E12, 164.76000000000002], [1.59746862E12, 176.3434343434343], [1.59747084E12, 195.15000000000003], [1.59746214E12, 124.27000000000004], [1.59746658E12, 135.40000000000003], [1.59746436E12, 114.57999999999996], [1.59745746E12, 155.70000000000002], [1.59745992E12, 103.42574257425744], [1.5974688E12, 164.57000000000005], [1.59747102E12, 184.62000000000003], [1.5974571E12, 146.18000000000006], [1.59745932E12, 185.45], [1.59746676E12, 173.5940594059407], [1.59746454E12, 134.79999999999998], [1.59745728E12, 126.26262626262626], [1.59746898E12, 114.4], [1.5974712E12, 155.46], [1.5974601E12, 134.89000000000004], [1.59746232E12, 164.18999999999997], [1.59745914E12, 154.49], [1.59746694E12, 266.6000000000001], [1.59746472E12, 166.29292929292922], [1.59746916E12, 147.00000000000003], [1.59746028E12, 203.19801980198017], [1.59747138E12, 160.18749999999986], [1.5974625E12, 134.31999999999996], [1.59745896E12, 193.59405940594064], [1.59746064E12, 253.9702970297029], [1.59746046E12, 166.60606060606054], [1.59746268E12, 175.03999999999994], [1.5974649E12, 205.19000000000003], [1.59746712E12, 203.84158415841577], [1.59746934E12, 144.48], [1.59746082E12, 195.15000000000006], [1.59746304E12, 104.84], [1.59746952E12, 184.66], [1.59746286E12, 154.45000000000005], [1.5974673E12, 104.75999999999999], [1.59745878E12, 144.88000000000005], [1.59746508E12, 184.59999999999997], [1.5974574E12, 125.55999999999999], [1.59746646E12, 235.61], [1.5974598E12, 144.72], [1.59746424E12, 114.16999999999999], [1.59746868E12, 164.72000000000003], [1.59746202E12, 205.80999999999995], [1.5974709E12, 235.48000000000002], [1.59745722E12, 95.17000000000003], [1.59746016E12, 124.07000000000001], [1.59746886E12, 164.35999999999999], [1.59747108E12, 144.26000000000008], [1.59745998E12, 124.88], [1.5974622E12, 133.81999999999996], [1.59746442E12, 105.07], [1.59746664E12, 124.65000000000002], [1.59745704E12, 85.97999999999996], [1.59746256E12, 155.06000000000006], [1.59746034E12, 108.00999999999999], [1.59746904E12, 246.4099999999999], [1.59746682E12, 155.38999999999993], [1.59747126E12, 114.69000000000003], [1.59746238E12, 84.13000000000001], [1.59745926E12, 85.00000000000003], [1.5974646E12, 114.38999999999999], [1.59746052E12, 185.19], [1.59746496E12, 154.86999999999998], [1.59746922E12, 174.23], [1.59746274E12, 165.09999999999994], [1.59745908E12, 114.77000000000004], [1.59746478E12, 173.16831683168317], [1.597467E12, 154.76000000000002], [1.5974607E12, 205.16000000000003], [1.59746292E12, 114.24000000000007], [1.59746514E12, 215.33999999999995], [1.59746736E12, 164.89999999999998], [1.5974694E12, 164.56000000000006], [1.5974589E12, 125.2929292929293], [1.59746718E12, 255.35000000000002], [1.59746958E12, 215.21000000000006], [1.5974631E12, 115.00000000000001], [1.59746754E12, 165.70999999999998], [1.59745854E12, 105.04999999999995], [1.59746532E12, 174.81], [1.59745872E12, 114.35643564356437], [1.59746088E12, 195.39999999999998], [1.59746976E12, 154.97000000000003], [1.59745836E12, 176.69696969696966], [1.5974655E12, 153.56435643564356], [1.59746772E12, 205.01000000000002], [1.59746106E12, 144.36000000000004], [1.59746328E12, 165.8080808080808], [1.59746994E12, 114.39], [1.59745818E12, 125.11000000000001], [1.5974679E12, 175.03999999999996], [1.59747012E12, 144.28000000000003], [1.59746124E12, 155.7878787878788], [1.59746568E12, 184.35], [1.59746346E12, 173.9009900990099], [1.5974691E12, 286.18], [1.59747132E12, 174.57999999999998], [1.59746262E12, 205.12000000000003], [1.59746706E12, 216.55555555555557], [1.59745902E12, 155.27000000000004], [1.59746484E12, 165.05999999999995], [1.59745698E12, 46.75], [1.5974592E12, 185.09000000000006], [1.59746928E12, 104.41999999999999], [1.5974604E12, 124.37000000000006], [1.59745884E12, 164.95], [1.59746502E12, 164.6100000000001], [1.59746724E12, 185.94], [1.59746058E12, 255.7200000000002], [1.5974628E12, 174.84999999999997], [1.59746946E12, 174.07000000000002], [1.59745866E12, 166.3939393939394], [1.59746742E12, 115.20999999999995], [1.59746076E12, 186.29000000000002], [1.5974652E12, 164.44000000000003], [1.59746964E12, 174.72000000000008], [1.59746298E12, 175.19999999999996], [1.59745848E12, 94.04000000000003], [1.59746112E12, 163.00990099009897], [1.59746094E12, 125.06999999999996], [1.59746316E12, 124.35999999999997], [1.59746538E12, 94.52000000000001], [1.5974676E12, 175.99000000000004], [1.59746982E12, 165.10999999999996], [1.5974613E12, 252.5346534653465], [1.59746352E12, 144.36999999999998], [1.59747E12, 186.10101010101008], [1.59746334E12, 114.05940594059402], [1.59746778E12, 194.76], [1.59746556E12, 124.98000000000002], [1.5974583E12, 145.1200000000001], [1.5974637E12, 185.56], [1.59746592E12, 216.08999999999997], [1.59746148E12, 124.31000000000002], [1.59746796E12, 114.58999999999997], [1.59747018E12, 154.96], [1.59745812E12, 134.69999999999993], [1.59746574E12, 125.05999999999997], [1.59746814E12, 205.45], [1.59747036E12, 145.16000000000003], [1.59746166E12, 173.18811881188125], [1.5974661E12, 134.48], [1.59746388E12, 104.22999999999998], [1.59745794E12, 155.53000000000003], [1.59745944E12, 144.36999999999995], [1.59746832E12, 145.39393939393938], [1.59747054E12, 125.33333333333326], [1.59746406E12, 94.17], [1.59746628E12, 184.85], [1.59745758E12, 115.10000000000001], [1.59745776E12, 156.01010101010098], [1.59745962E12, 133.94059405940595], [1.59746184E12, 224.83], [1.5974685E12, 138.70707070707073], [1.59747072E12, 196.55555555555557], [1.597461E12, 186.64646464646466], [1.59746544E12, 227.41414141414137], [1.5974697E12, 124.06999999999996], [1.59746322E12, 94.35], [1.5974586E12, 135.57999999999998], [1.59746526E12, 204.95999999999998], [1.59746748E12, 225.52999999999983], [1.59746118E12, 174.87000000000006], [1.5974634E12, 176.74747474747477], [1.59746562E12, 144.8800000000001], [1.59746988E12, 154.6399999999999], [1.59745842E12, 143.89108910891085], [1.59746766E12, 114.99000000000002], [1.59746784E12, 174.90999999999997], [1.59746358E12, 135.06999999999994], [1.59747006E12, 153.3366336633664], [1.5974658E12, 196.5959595959597], [1.59745806E12, 124.98000000000003], [1.59745824E12, 155.1], [1.59746802E12, 174.94], [1.59747024E12, 184.96000000000004], [1.59746136E12, 155.92929292929296], [1.59745788E12, 155.22], [1.59746598E12, 155.21], [1.59746376E12, 125.21212121212122], [1.5974682E12, 154.54], [1.59746154E12, 154.55999999999997], [1.59747042E12, 145.29], [1.5974577E12, 94.53000000000003], [1.59745968E12, 146.71717171717168], [1.5974595E12, 104.31999999999995], [1.59746172E12, 134.19999999999993], [1.59746394E12, 149.07999999999993], [1.59746616E12, 215.71999999999997], [1.59746838E12, 134.45], [1.5974706E12, 153.71287128712882], [1.59745752E12, 155.45999999999998], [1.59745986E12, 115.23232323232322], [1.59746208E12, 144.51000000000016], [1.59746856E12, 153.5445544554456], [1.5974619E12, 134.29], [1.59746634E12, 174.74999999999997], [1.59747078E12, 104.02970297029702], [1.59746412E12, 184.82999999999996], [1.59746004E12, 134.61999999999998], [1.59746448E12, 184.88999999999996], [1.59747096E12, 114.67999999999999], [1.59746874E12, 143.48514851485146], [1.59746226E12, 104.39999999999995], [1.5974643E12, 154.7299999999999], [1.59746652E12, 225.15], [1.59745734E12, 134.22772277227727], [1.59746466E12, 155.01], [1.59746688E12, 123.95], [1.59746022E12, 135.1616161616162], [1.59746244E12, 123.59000000000005], [1.59746892E12, 94.11999999999999], [1.59747114E12, 104.13], [1.59745938E12, 165.62], [1.59745716E12, 85.25000000000001], [1.5974667E12, 146.17171717171715]], "isOverall": false, "label": "Open Main Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59747138E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 24.25, "minX": 1.59745698E12, "maxY": 268.64, "series": [{"data": [[1.597458E12, 77.14999999999998], [1.5974616E12, 128.21212121212122], [1.59746808E12, 137.29000000000005], [1.59746142E12, 96.24752475247524], [1.59746586E12, 216.39603960396036], [1.5974703E12, 116.81999999999998], [1.59746364E12, 137.89000000000001], [1.59745956E12, 138.7575757575758], [1.597464E12, 116.98000000000002], [1.59746826E12, 147.14999999999998], [1.59747048E12, 167.14000000000004], [1.59746178E12, 106.87000000000005], [1.59746382E12, 126.48514851485147], [1.59746604E12, 167.09999999999997], [1.59745782E12, 136.71287128712876], [1.59745974E12, 155.91089108910887], [1.59746196E12, 87.17], [1.59746418E12, 137.88000000000002], [1.5974664E12, 107.04000000000003], [1.59746844E12, 125.70297029702965], [1.59747066E12, 157.08999999999997], [1.59745764E12, 107.54000000000002], [1.59746622E12, 147.34999999999997], [1.59746862E12, 158.82828282828282], [1.59747084E12, 177.75], [1.59746214E12, 106.91000000000001], [1.59746658E12, 117.61000000000001], [1.59746436E12, 96.89999999999998], [1.59745746E12, 138.34999999999997], [1.59745992E12, 86.04950495049503], [1.5974688E12, 147.02000000000004], [1.59747102E12, 167.10000000000008], [1.5974571E12, 127.95], [1.59745932E12, 167.73000000000005], [1.59746676E12, 156.14851485148517], [1.59746454E12, 117.46], [1.59745728E12, 108.50505050505049], [1.59746898E12, 96.77999999999997], [1.5974712E12, 137.87], [1.5974601E12, 117.41999999999999], [1.59746232E12, 146.70000000000002], [1.59745914E12, 137.01999999999995], [1.59746694E12, 249.03999999999996], [1.59746472E12, 148.77777777777786], [1.59746916E12, 127.10000000000007], [1.59746028E12, 185.73267326732676], [1.59747138E12, 142.82291666666657], [1.5974625E12, 116.99000000000001], [1.59745896E12, 175.96039603960395], [1.59746064E12, 236.31683168316832], [1.59746046E12, 148.88888888888889], [1.59746268E12, 157.86000000000007], [1.5974649E12, 187.58], [1.59746712E12, 186.23762376237624], [1.59746934E12, 126.98000000000012], [1.59746082E12, 177.91000000000005], [1.59746304E12, 87.31000000000003], [1.59746952E12, 167.26000000000005], [1.59746286E12, 137.23999999999998], [1.5974673E12, 87.47], [1.59745878E12, 127.36999999999996], [1.59746508E12, 167.32999999999998], [1.5974574E12, 107.91000000000001], [1.59746646E12, 218.14000000000001], [1.5974598E12, 127.43000000000002], [1.59746424E12, 96.88999999999997], [1.59746868E12, 147.25000000000003], [1.59746202E12, 188.47999999999988], [1.5974709E12, 217.96999999999997], [1.59745722E12, 77.52], [1.59746016E12, 106.79999999999998], [1.59746886E12, 146.87], [1.59747108E12, 126.84999999999997], [1.59745998E12, 107.20000000000002], [1.5974622E12, 116.53], [1.59746442E12, 86.84], [1.59746664E12, 107.15999999999997], [1.59745704E12, 67.64999999999998], [1.59746256E12, 137.23999999999998], [1.59746034E12, 90.52000000000001], [1.59746904E12, 228.62999999999994], [1.59746682E12, 137.98000000000002], [1.59747126E12, 96.93000000000004], [1.59746238E12, 66.79000000000002], [1.59745926E12, 67.36], [1.5974646E12, 96.88], [1.59746052E12, 167.57], [1.59746496E12, 137.45000000000002], [1.59746922E12, 156.96000000000004], [1.59746274E12, 147.75], [1.59745908E12, 97.33000000000003], [1.59746478E12, 155.60396039603967], [1.597467E12, 137.36999999999995], [1.5974607E12, 187.89999999999998], [1.59746292E12, 96.98000000000002], [1.59746514E12, 198.07999999999998], [1.59746736E12, 147.41000000000003], [1.5974694E12, 147.16], [1.5974589E12, 107.82828282828281], [1.59746718E12, 238.07000000000008], [1.59746958E12, 197.70999999999992], [1.5974631E12, 97.53999999999999], [1.59746754E12, 148.01000000000002], [1.59745854E12, 87.19000000000001], [1.59746532E12, 157.38999999999996], [1.59745872E12, 96.7326732673267], [1.59746088E12, 178.09999999999994], [1.59746976E12, 137.57999999999993], [1.59745836E12, 159.2626262626262], [1.5974655E12, 135.990099009901], [1.59746772E12, 187.45000000000007], [1.59746106E12, 127.02999999999999], [1.59746328E12, 148.42424242424238], [1.59746994E12, 96.90999999999998], [1.59745818E12, 107.40999999999997], [1.5974679E12, 157.23999999999998], [1.59747012E12, 127.08999999999997], [1.59746124E12, 138.18181818181816], [1.59746568E12, 167.14999999999992], [1.59746346E12, 156.4158415841584], [1.5974691E12, 268.64], [1.59747132E12, 157.38000000000002], [1.59746262E12, 187.90000000000003], [1.59746706E12, 199.3131313131313], [1.59745902E12, 137.56999999999994], [1.59746484E12, 147.28], [1.59745698E12, 24.25], [1.5974592E12, 167.81999999999996], [1.59746928E12, 87.11999999999996], [1.5974604E12, 107.00000000000001], [1.59745884E12, 147.38999999999996], [1.59746502E12, 147.19000000000005], [1.59746724E12, 168.41000000000003], [1.59746058E12, 238.29999999999998], [1.5974628E12, 157.49], [1.59746946E12, 156.84], [1.59745866E12, 148.9090909090909], [1.59746742E12, 97.29], [1.59746076E12, 168.31000000000006], [1.5974652E12, 147.22], [1.59746964E12, 157.35], [1.59746298E12, 157.89000000000001], [1.59745848E12, 76.68000000000005], [1.59746112E12, 145.64356435643566], [1.59746094E12, 107.54999999999998], [1.59746316E12, 106.94000000000005], [1.59746538E12, 76.97999999999999], [1.5974676E12, 157.98999999999992], [1.59746982E12, 147.26], [1.5974613E12, 235.3564356435643], [1.59746352E12, 127.06999999999995], [1.59747E12, 168.65656565656562], [1.59746334E12, 96.66336633663362], [1.59746778E12, 177.20999999999995], [1.59746556E12, 107.50000000000004], [1.5974583E12, 127.55000000000003], [1.5974637E12, 167.90999999999997], [1.59746592E12, 198.65000000000006], [1.59746148E12, 107.00999999999998], [1.59746796E12, 96.86], [1.59747018E12, 137.10999999999999], [1.59745812E12, 117.16000000000003], [1.59746574E12, 107.24000000000007], [1.59746814E12, 188.07999999999996], [1.59747036E12, 127.68000000000002], [1.59746166E12, 155.950495049505], [1.5974661E12, 116.97999999999995], [1.59746388E12, 86.93999999999998], [1.59745794E12, 137.84999999999997], [1.59745944E12, 127.01999999999998], [1.59746832E12, 127.77777777777783], [1.59747054E12, 107.87878787878785], [1.59746406E12, 76.74000000000002], [1.59746628E12, 167.48000000000002], [1.59745758E12, 97.61000000000001], [1.59745776E12, 138.35353535353536], [1.59745962E12, 116.50495049504948], [1.59746184E12, 207.54999999999995], [1.5974685E12, 118.46464646464644], [1.59747072E12, 179.18181818181816], [1.597461E12, 169.08080808080808], [1.59746544E12, 210.0101010101009], [1.5974697E12, 106.79999999999997], [1.59746322E12, 77.0], [1.5974586E12, 117.50000000000001], [1.59746526E12, 187.37999999999997], [1.59746748E12, 208.04999999999998], [1.59746118E12, 157.49000000000004], [1.5974634E12, 159.08080808080814], [1.59746562E12, 126.84000000000003], [1.59746988E12, 136.99999999999986], [1.59745842E12, 126.3366336633664], [1.59746766E12, 97.46000000000001], [1.59746784E12, 157.32999999999998], [1.59746358E12, 117.44999999999997], [1.59747006E12, 136.07920792079207], [1.5974658E12, 179.3232323232323], [1.59745806E12, 107.34999999999997], [1.59745824E12, 137.73], [1.59746802E12, 157.35000000000005], [1.59747024E12, 167.47], [1.59746136E12, 138.5757575757576], [1.59745788E12, 137.33000000000004], [1.59746598E12, 137.35999999999996], [1.59746376E12, 108.00000000000003], [1.5974682E12, 137.17999999999995], [1.59746154E12, 137.05999999999992], [1.59747042E12, 127.51000000000002], [1.5974577E12, 76.98], [1.59745968E12, 128.97979797979795], [1.5974595E12, 86.92], [1.59746172E12, 117.03000000000004], [1.59746394E12, 127.6], [1.59746616E12, 198.37], [1.59746838E12, 117.02999999999997], [1.5974706E12, 136.009900990099], [1.59745752E12, 137.64000000000001], [1.59745986E12, 97.79797979797976], [1.59746208E12, 126.97999999999999], [1.59746856E12, 136.0990099009901], [1.5974619E12, 116.92999999999994], [1.59746634E12, 157.32], [1.59747078E12, 86.25742574257427], [1.59746412E12, 167.42000000000002], [1.59746004E12, 117.16999999999999], [1.59746448E12, 167.47000000000003], [1.59747096E12, 96.98999999999998], [1.59746874E12, 125.96039603960392], [1.59746226E12, 86.67000000000002], [1.5974643E12, 137.39], [1.59746652E12, 207.70999999999998], [1.59745734E12, 116.38613861386136], [1.59746466E12, 137.36000000000007], [1.59746688E12, 106.76000000000002], [1.59746022E12, 118.0909090909091], [1.59746244E12, 106.32], [1.59746892E12, 76.66999999999997], [1.59747114E12, 86.87000000000006], [1.59745938E12, 148.05000000000004], [1.59745716E12, 67.23], [1.5974667E12, 128.5151515151515]], "isOverall": false, "label": "Open Main Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59747138E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.59745698E12, "maxY": 1115.0, "series": [{"data": [[1.597458E12, 1065.0], [1.5974616E12, 1066.0], [1.59746808E12, 1066.0], [1.59746142E12, 1067.0], [1.59746586E12, 1058.0], [1.5974703E12, 1069.0], [1.59746364E12, 1051.0], [1.59745956E12, 1053.0], [1.597464E12, 1054.0], [1.59746826E12, 1066.0], [1.59747048E12, 1070.0], [1.59746178E12, 1065.0], [1.59746382E12, 1054.0], [1.59746604E12, 1051.0], [1.59745782E12, 1068.0], [1.59745974E12, 1057.0], [1.59746196E12, 1072.0], [1.59746418E12, 1051.0], [1.5974664E12, 1066.0], [1.59746844E12, 1064.0], [1.59747066E12, 1071.0], [1.59745764E12, 1065.0], [1.59746622E12, 1061.0], [1.59746862E12, 1065.0], [1.59747084E12, 1070.0], [1.59746214E12, 1044.0], [1.59746658E12, 1077.0], [1.59746436E12, 1051.0], [1.59745746E12, 1115.0], [1.59745992E12, 1059.0], [1.5974688E12, 1064.0], [1.59747102E12, 1070.0], [1.5974571E12, 1071.0], [1.59745932E12, 1051.0], [1.59746676E12, 1063.0], [1.59746454E12, 1052.0], [1.59745728E12, 1070.0], [1.59746898E12, 1072.0], [1.5974712E12, 1078.0], [1.5974601E12, 1062.0], [1.59746232E12, 1046.0], [1.59745914E12, 1052.0], [1.59746694E12, 1069.0], [1.59746472E12, 1055.0], [1.59746916E12, 1070.0], [1.59746028E12, 1060.0], [1.59747138E12, 1069.0], [1.5974625E12, 1051.0], [1.59745896E12, 1053.0], [1.59746064E12, 1063.0], [1.59746046E12, 1067.0], [1.59746268E12, 1058.0], [1.5974649E12, 1052.0], [1.59746712E12, 1068.0], [1.59746934E12, 1064.0], [1.59746082E12, 1063.0], [1.59746304E12, 1051.0], [1.59746952E12, 1066.0], [1.59746286E12, 1052.0], [1.5974673E12, 1065.0], [1.59745878E12, 1046.0], [1.59746508E12, 1054.0], [1.5974574E12, 1065.0], [1.59746646E12, 1066.0], [1.5974598E12, 1075.0], [1.59746424E12, 1051.0], [1.59746868E12, 1067.0], [1.59746202E12, 1077.0], [1.5974709E12, 1071.0], [1.59745722E12, 1071.0], [1.59746016E12, 1059.0], [1.59746886E12, 1068.0], [1.59747108E12, 1068.0], [1.59745998E12, 1102.0], [1.5974622E12, 1044.0], [1.59746442E12, 1052.0], [1.59746664E12, 1064.0], [1.59745704E12, 1068.0], [1.59746256E12, 1055.0], [1.59746034E12, 1062.0], [1.59746904E12, 1069.0], [1.59746682E12, 1065.0], [1.59747126E12, 1072.0], [1.59746238E12, 1051.0], [1.59745926E12, 1053.0], [1.5974646E12, 1054.0], [1.59746052E12, 1064.0], [1.59746496E12, 1052.0], [1.59746922E12, 1066.0], [1.59746274E12, 1055.0], [1.59745908E12, 1052.0], [1.59746478E12, 1053.0], [1.597467E12, 1065.0], [1.5974607E12, 1069.0], [1.59746292E12, 1050.0], [1.59746514E12, 1051.0], [1.59746736E12, 1070.0], [1.5974694E12, 1066.0], [1.5974589E12, 1042.0], [1.59746718E12, 1066.0], [1.59746958E12, 1068.0], [1.5974631E12, 1047.0], [1.59746754E12, 1068.0], [1.59745854E12, 1060.0], [1.59746532E12, 1058.0], [1.59745872E12, 1074.0], [1.59746088E12, 1066.0], [1.59746976E12, 1067.0], [1.59745836E12, 1066.0], [1.5974655E12, 1051.0], [1.59746772E12, 1065.0], [1.59746106E12, 1064.0], [1.59746328E12, 1054.0], [1.59746994E12, 1068.0], [1.59745818E12, 1069.0], [1.5974679E12, 1068.0], [1.59747012E12, 1067.0], [1.59746124E12, 1068.0], [1.59746568E12, 1053.0], [1.59746346E12, 1053.0], [1.5974691E12, 1067.0], [1.59747132E12, 1073.0], [1.59746262E12, 1056.0], [1.59746706E12, 1065.0], [1.59745902E12, 1058.0], [1.59746484E12, 1051.0], [1.59745698E12, 84.0], [1.5974592E12, 1053.0], [1.59746928E12, 1065.0], [1.5974604E12, 1053.0], [1.59745884E12, 1051.0], [1.59746502E12, 1051.0], [1.59746724E12, 1067.0], [1.59746058E12, 1073.0], [1.5974628E12, 1051.0], [1.59746946E12, 1066.0], [1.59745866E12, 1074.0], [1.59746742E12, 1068.0], [1.59746076E12, 1067.0], [1.5974652E12, 1051.0], [1.59746964E12, 1066.0], [1.59746298E12, 1056.0], [1.59745848E12, 1061.0], [1.59746112E12, 1065.0], [1.59746094E12, 1067.0], [1.59746316E12, 1051.0], [1.59746538E12, 1051.0], [1.5974676E12, 1069.0], [1.59746982E12, 1069.0], [1.5974613E12, 1069.0], [1.59746352E12, 1053.0], [1.59747E12, 1068.0], [1.59746334E12, 1054.0], [1.59746778E12, 1069.0], [1.59746556E12, 1059.0], [1.5974583E12, 1056.0], [1.5974637E12, 1053.0], [1.59746592E12, 1059.0], [1.59746148E12, 1066.0], [1.59746796E12, 1065.0], [1.59747018E12, 1065.0], [1.59745812E12, 1065.0], [1.59746574E12, 1050.0], [1.59746814E12, 1066.0], [1.59747036E12, 1069.0], [1.59746166E12, 1063.0], [1.5974661E12, 1069.0], [1.59746388E12, 1052.0], [1.59745794E12, 1066.0], [1.59745944E12, 1050.0], [1.59746832E12, 1064.0], [1.59747054E12, 1069.0], [1.59746406E12, 1046.0], [1.59746628E12, 1063.0], [1.59745758E12, 1064.0], [1.59745776E12, 1064.0], [1.59745962E12, 1053.0], [1.59746184E12, 1067.0], [1.5974685E12, 1066.0], [1.59747072E12, 1074.0], [1.597461E12, 1070.0], [1.59746544E12, 1055.0], [1.5974697E12, 1065.0], [1.59746322E12, 1053.0], [1.5974586E12, 1059.0], [1.59746526E12, 1053.0], [1.59746748E12, 1069.0], [1.59746118E12, 1066.0], [1.5974634E12, 1055.0], [1.59746562E12, 1050.0], [1.59746988E12, 1068.0], [1.59745842E12, 1061.0], [1.59746766E12, 1065.0], [1.59746784E12, 1065.0], [1.59746358E12, 1051.0], [1.59747006E12, 1070.0], [1.5974658E12, 1052.0], [1.59745806E12, 1067.0], [1.59745824E12, 1064.0], [1.59746802E12, 1066.0], [1.59747024E12, 1070.0], [1.59746136E12, 1068.0], [1.59745788E12, 1065.0], [1.59746598E12, 1053.0], [1.59746376E12, 1051.0], [1.5974682E12, 1065.0], [1.59746154E12, 1069.0], [1.59747042E12, 1067.0], [1.5974577E12, 1058.0], [1.59745968E12, 1054.0], [1.5974595E12, 1057.0], [1.59746172E12, 1063.0], [1.59746394E12, 1052.0], [1.59746616E12, 1079.0], [1.59746838E12, 1065.0], [1.5974706E12, 1067.0], [1.59745752E12, 1056.0], [1.59745986E12, 1044.0], [1.59746208E12, 1044.0], [1.59746856E12, 1067.0], [1.5974619E12, 1059.0], [1.59746634E12, 1059.0], [1.59747078E12, 1063.0], [1.59746412E12, 1050.0], [1.59746004E12, 1066.0], [1.59746448E12, 1052.0], [1.59747096E12, 1071.0], [1.59746874E12, 1066.0], [1.59746226E12, 1044.0], [1.5974643E12, 1057.0], [1.59746652E12, 1076.0], [1.59745734E12, 1063.0], [1.59746466E12, 1056.0], [1.59746688E12, 1063.0], [1.59746022E12, 1063.0], [1.59746244E12, 1041.0], [1.59746892E12, 1064.0], [1.59747114E12, 1068.0], [1.59745938E12, 1054.0], [1.59745716E12, 1070.0], [1.5974667E12, 1062.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.597458E12, 32.0], [1.5974616E12, 31.0], [1.59746808E12, 32.0], [1.59746142E12, 32.0], [1.59746586E12, 31.0], [1.5974703E12, 31.0], [1.59746364E12, 32.0], [1.59745956E12, 32.0], [1.597464E12, 31.0], [1.59746826E12, 32.0], [1.59747048E12, 32.0], [1.59746178E12, 31.0], [1.59746382E12, 32.0], [1.59746604E12, 31.0], [1.59745782E12, 32.0], [1.59745974E12, 32.0], [1.59746196E12, 32.0], [1.59746418E12, 31.0], [1.5974664E12, 32.0], [1.59746844E12, 31.0], [1.59747066E12, 32.0], [1.59745764E12, 32.0], [1.59746622E12, 32.0], [1.59746862E12, 32.0], [1.59747084E12, 32.0], [1.59746214E12, 31.0], [1.59746658E12, 32.0], [1.59746436E12, 31.0], [1.59745746E12, 32.0], [1.59745992E12, 32.0], [1.5974688E12, 31.0], [1.59747102E12, 31.0], [1.5974571E12, 32.0], [1.59745932E12, 32.0], [1.59746676E12, 31.0], [1.59746454E12, 31.0], [1.59745728E12, 33.0], [1.59746898E12, 31.0], [1.5974712E12, 31.0], [1.5974601E12, 31.0], [1.59746232E12, 31.0], [1.59745914E12, 29.0], [1.59746694E12, 31.0], [1.59746472E12, 32.0], [1.59746916E12, 31.0], [1.59746028E12, 32.0], [1.59747138E12, 32.0], [1.5974625E12, 31.0], [1.59745896E12, 32.0], [1.59746064E12, 32.0], [1.59746046E12, 32.0], [1.59746268E12, 32.0], [1.5974649E12, 31.0], [1.59746712E12, 31.0], [1.59746934E12, 31.0], [1.59746082E12, 30.0], [1.59746304E12, 31.0], [1.59746952E12, 32.0], [1.59746286E12, 32.0], [1.5974673E12, 32.0], [1.59745878E12, 32.0], [1.59746508E12, 32.0], [1.5974574E12, 32.0], [1.59746646E12, 32.0], [1.5974598E12, 32.0], [1.59746424E12, 32.0], [1.59746868E12, 31.0], [1.59746202E12, 32.0], [1.5974709E12, 32.0], [1.59745722E12, 32.0], [1.59746016E12, 32.0], [1.59746886E12, 31.0], [1.59747108E12, 31.0], [1.59745998E12, 32.0], [1.5974622E12, 31.0], [1.59746442E12, 32.0], [1.59746664E12, 32.0], [1.59745704E12, 32.0], [1.59746256E12, 31.0], [1.59746034E12, 31.0], [1.59746904E12, 31.0], [1.59746682E12, 31.0], [1.59747126E12, 32.0], [1.59746238E12, 31.0], [1.59745926E12, 32.0], [1.5974646E12, 32.0], [1.59746052E12, 32.0], [1.59746496E12, 31.0], [1.59746922E12, 31.0], [1.59746274E12, 31.0], [1.59745908E12, 32.0], [1.59746478E12, 31.0], [1.597467E12, 30.0], [1.5974607E12, 32.0], [1.59746292E12, 31.0], [1.59746514E12, 31.0], [1.59746736E12, 32.0], [1.5974694E12, 31.0], [1.5974589E12, 32.0], [1.59746718E12, 31.0], [1.59746958E12, 32.0], [1.5974631E12, 31.0], [1.59746754E12, 31.0], [1.59745854E12, 33.0], [1.59746532E12, 31.0], [1.59745872E12, 32.0], [1.59746088E12, 32.0], [1.59746976E12, 31.0], [1.59745836E12, 32.0], [1.5974655E12, 30.0], [1.59746772E12, 32.0], [1.59746106E12, 32.0], [1.59746328E12, 31.0], [1.59746994E12, 32.0], [1.59745818E12, 32.0], [1.5974679E12, 32.0], [1.59747012E12, 32.0], [1.59746124E12, 32.0], [1.59746568E12, 31.0], [1.59746346E12, 32.0], [1.5974691E12, 32.0], [1.59747132E12, 32.0], [1.59746262E12, 31.0], [1.59746706E12, 31.0], [1.59745902E12, 32.0], [1.59746484E12, 31.0], [1.59745698E12, 33.0], [1.5974592E12, 32.0], [1.59746928E12, 31.0], [1.5974604E12, 32.0], [1.59745884E12, 32.0], [1.59746502E12, 31.0], [1.59746724E12, 32.0], [1.59746058E12, 32.0], [1.5974628E12, 32.0], [1.59746946E12, 31.0], [1.59745866E12, 32.0], [1.59746742E12, 31.0], [1.59746076E12, 32.0], [1.5974652E12, 31.0], [1.59746964E12, 31.0], [1.59746298E12, 32.0], [1.59745848E12, 32.0], [1.59746112E12, 32.0], [1.59746094E12, 32.0], [1.59746316E12, 32.0], [1.59746538E12, 31.0], [1.5974676E12, 31.0], [1.59746982E12, 32.0], [1.5974613E12, 32.0], [1.59746352E12, 31.0], [1.59747E12, 32.0], [1.59746334E12, 32.0], [1.59746778E12, 32.0], [1.59746556E12, 32.0], [1.5974583E12, 32.0], [1.5974637E12, 32.0], [1.59746592E12, 31.0], [1.59746148E12, 32.0], [1.59746796E12, 31.0], [1.59747018E12, 31.0], [1.59745812E12, 32.0], [1.59746574E12, 32.0], [1.59746814E12, 32.0], [1.59747036E12, 32.0], [1.59746166E12, 32.0], [1.5974661E12, 32.0], [1.59746388E12, 31.0], [1.59745794E12, 32.0], [1.59745944E12, 32.0], [1.59746832E12, 32.0], [1.59747054E12, 31.0], [1.59746406E12, 31.0], [1.59746628E12, 32.0], [1.59745758E12, 32.0], [1.59745776E12, 31.0], [1.59745962E12, 32.0], [1.59746184E12, 31.0], [1.5974685E12, 32.0], [1.59747072E12, 31.0], [1.597461E12, 32.0], [1.59746544E12, 31.0], [1.5974697E12, 31.0], [1.59746322E12, 31.0], [1.5974586E12, 32.0], [1.59746526E12, 31.0], [1.59746748E12, 31.0], [1.59746118E12, 31.0], [1.5974634E12, 32.0], [1.59746562E12, 31.0], [1.59746988E12, 32.0], [1.59745842E12, 32.0], [1.59746766E12, 31.0], [1.59746784E12, 31.0], [1.59746358E12, 31.0], [1.59747006E12, 31.0], [1.5974658E12, 32.0], [1.59745806E12, 32.0], [1.59745824E12, 32.0], [1.59746802E12, 31.0], [1.59747024E12, 32.0], [1.59746136E12, 31.0], [1.59745788E12, 32.0], [1.59746598E12, 32.0], [1.59746376E12, 31.0], [1.5974682E12, 31.0], [1.59746154E12, 32.0], [1.59747042E12, 32.0], [1.5974577E12, 32.0], [1.59745968E12, 32.0], [1.5974595E12, 32.0], [1.59746172E12, 31.0], [1.59746394E12, 31.0], [1.59746616E12, 31.0], [1.59746838E12, 32.0], [1.5974706E12, 32.0], [1.59745752E12, 32.0], [1.59745986E12, 30.0], [1.59746208E12, 31.0], [1.59746856E12, 30.0], [1.5974619E12, 31.0], [1.59746634E12, 32.0], [1.59747078E12, 32.0], [1.59746412E12, 31.0], [1.59746004E12, 31.0], [1.59746448E12, 31.0], [1.59747096E12, 32.0], [1.59746874E12, 31.0], [1.59746226E12, 31.0], [1.5974643E12, 31.0], [1.59746652E12, 32.0], [1.59745734E12, 32.0], [1.59746466E12, 32.0], [1.59746688E12, 31.0], [1.59746022E12, 32.0], [1.59746244E12, 29.0], [1.59746892E12, 31.0], [1.59747114E12, 31.0], [1.59745938E12, 32.0], [1.59745716E12, 32.0], [1.5974667E12, 31.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.597458E12, 32.0], [1.5974616E12, 31.0], [1.59746808E12, 32.0], [1.59746142E12, 32.0], [1.59746586E12, 31.0], [1.5974703E12, 31.0], [1.59746364E12, 32.0], [1.59745956E12, 32.0], [1.597464E12, 31.0], [1.59746826E12, 32.0], [1.59747048E12, 32.0], [1.59746178E12, 31.0], [1.59746382E12, 32.0], [1.59746604E12, 31.0], [1.59745782E12, 32.00980000972748], [1.59745974E12, 32.0], [1.59746196E12, 32.0], [1.59746418E12, 31.0], [1.5974664E12, 32.0], [1.59746844E12, 31.009800009727478], [1.59747066E12, 32.0], [1.59745764E12, 32.0], [1.59746622E12, 32.0], [1.59746862E12, 32.0], [1.59747084E12, 32.0], [1.59746214E12, 31.0], [1.59746658E12, 32.0], [1.59746436E12, 31.0], [1.59745746E12, 32.0], [1.59745992E12, 32.0], [1.5974688E12, 31.0], [1.59747102E12, 31.0], [1.5974571E12, 32.0], [1.59745932E12, 32.0], [1.59746676E12, 31.0], [1.59746454E12, 31.0], [1.59745728E12, 33.0], [1.59746898E12, 31.0], [1.5974712E12, 31.0], [1.5974601E12, 31.0], [1.59746232E12, 31.0], [1.59745914E12, 29.0], [1.59746694E12, 31.0], [1.59746472E12, 32.0], [1.59746916E12, 31.0], [1.59746028E12, 32.0], [1.59747138E12, 32.0], [1.5974625E12, 31.0], [1.59745896E12, 32.0], [1.59746064E12, 32.0], [1.59746046E12, 32.0], [1.59746268E12, 32.0], [1.5974649E12, 31.0], [1.59746712E12, 31.009800009727478], [1.59746934E12, 31.0], [1.59746082E12, 30.0], [1.59746304E12, 31.0], [1.59746952E12, 32.0], [1.59746286E12, 32.0], [1.5974673E12, 32.0], [1.59745878E12, 32.0], [1.59746508E12, 32.0], [1.5974574E12, 32.0], [1.59746646E12, 32.0], [1.5974598E12, 32.0], [1.59746424E12, 32.0], [1.59746868E12, 31.0], [1.59746202E12, 32.0], [1.5974709E12, 32.0], [1.59745722E12, 32.0], [1.59746016E12, 32.0], [1.59746886E12, 31.0], [1.59747108E12, 31.0], [1.59745998E12, 32.0], [1.5974622E12, 31.0], [1.59746442E12, 32.0], [1.59746664E12, 32.0], [1.59745704E12, 32.0], [1.59746256E12, 31.0], [1.59746034E12, 31.0], [1.59746904E12, 31.0], [1.59746682E12, 31.0], [1.59747126E12, 32.0], [1.59746238E12, 31.0], [1.59745926E12, 32.0], [1.5974646E12, 32.0], [1.59746052E12, 32.0], [1.59746496E12, 31.0], [1.59746922E12, 31.0], [1.59746274E12, 31.0], [1.59745908E12, 32.0], [1.59746478E12, 31.0], [1.597467E12, 30.0], [1.5974607E12, 32.0], [1.59746292E12, 31.0], [1.59746514E12, 31.0], [1.59746736E12, 32.0], [1.5974694E12, 31.0], [1.5974589E12, 32.0], [1.59746718E12, 31.0], [1.59746958E12, 32.0], [1.5974631E12, 31.0], [1.59746754E12, 31.0], [1.59745854E12, 33.0], [1.59746532E12, 31.0], [1.59745872E12, 32.0], [1.59746088E12, 32.0], [1.59746976E12, 31.0], [1.59745836E12, 32.0], [1.5974655E12, 30.019600019454955], [1.59746772E12, 32.0], [1.59746106E12, 32.0], [1.59746328E12, 31.0], [1.59746994E12, 32.0], [1.59745818E12, 32.0], [1.5974679E12, 32.0], [1.59747012E12, 32.0], [1.59746124E12, 32.0], [1.59746568E12, 31.0], [1.59746346E12, 32.0], [1.5974691E12, 32.0], [1.59747132E12, 32.0], [1.59746262E12, 31.0], [1.59746706E12, 31.0], [1.59745902E12, 32.0], [1.59746484E12, 31.0], [1.59745698E12, 33.0], [1.5974592E12, 32.0], [1.59746928E12, 31.0], [1.5974604E12, 32.0], [1.59745884E12, 32.0], [1.59746502E12, 31.0], [1.59746724E12, 32.0], [1.59746058E12, 32.0], [1.5974628E12, 32.0], [1.59746946E12, 31.0], [1.59745866E12, 32.0], [1.59746742E12, 31.0], [1.59746076E12, 32.0], [1.5974652E12, 31.0], [1.59746964E12, 31.0], [1.59746298E12, 32.0], [1.59745848E12, 32.0], [1.59746112E12, 32.0], [1.59746094E12, 32.0], [1.59746316E12, 32.0], [1.59746538E12, 31.0], [1.5974676E12, 31.0], [1.59746982E12, 32.0], [1.5974613E12, 32.0], [1.59746352E12, 31.0], [1.59747E12, 32.0], [1.59746334E12, 32.0], [1.59746778E12, 32.0], [1.59746556E12, 32.0], [1.5974583E12, 32.0], [1.5974637E12, 32.0], [1.59746592E12, 31.0], [1.59746148E12, 32.0], [1.59746796E12, 31.0], [1.59747018E12, 31.0], [1.59745812E12, 32.0], [1.59746574E12, 32.0], [1.59746814E12, 32.0], [1.59747036E12, 32.0], [1.59746166E12, 32.0], [1.5974661E12, 32.0], [1.59746388E12, 31.0], [1.59745794E12, 32.0], [1.59745944E12, 32.0], [1.59746832E12, 32.0], [1.59747054E12, 31.0], [1.59746406E12, 31.0], [1.59746628E12, 32.0], [1.59745758E12, 32.0], [1.59745776E12, 31.0], [1.59745962E12, 32.0], [1.59746184E12, 31.0], [1.5974685E12, 32.0], [1.59747072E12, 31.0], [1.597461E12, 32.0], [1.59746544E12, 31.0], [1.5974697E12, 31.0], [1.59746322E12, 31.0], [1.5974586E12, 32.0], [1.59746526E12, 31.0], [1.59746748E12, 31.0], [1.59746118E12, 31.0], [1.5974634E12, 32.0], [1.59746562E12, 31.0], [1.59746988E12, 32.0], [1.59745842E12, 32.0], [1.59746766E12, 31.0], [1.59746784E12, 31.0], [1.59746358E12, 31.0], [1.59747006E12, 31.0], [1.5974658E12, 32.0], [1.59745806E12, 32.0], [1.59745824E12, 32.0], [1.59746802E12, 31.0], [1.59747024E12, 32.0], [1.59746136E12, 31.0], [1.59745788E12, 32.0], [1.59746598E12, 32.0], [1.59746376E12, 31.0], [1.5974682E12, 31.0], [1.59746154E12, 32.0], [1.59747042E12, 32.0], [1.5974577E12, 32.0], [1.59745968E12, 32.0], [1.5974595E12, 32.0], [1.59746172E12, 31.0], [1.59746394E12, 31.0], [1.59746616E12, 31.0], [1.59746838E12, 32.0], [1.5974706E12, 32.0], [1.59745752E12, 32.0], [1.59745986E12, 30.0], [1.59746208E12, 31.0], [1.59746856E12, 30.019600019454955], [1.5974619E12, 31.0], [1.59746634E12, 32.0], [1.59747078E12, 32.0], [1.59746412E12, 31.0], [1.59746004E12, 31.0], [1.59746448E12, 31.0], [1.59747096E12, 32.0], [1.59746874E12, 31.0], [1.59746226E12, 31.0], [1.5974643E12, 31.0], [1.59746652E12, 32.0], [1.59745734E12, 32.00980000972748], [1.59746466E12, 32.0], [1.59746688E12, 31.0], [1.59746022E12, 32.0], [1.59746244E12, 29.0], [1.59746892E12, 31.0], [1.59747114E12, 31.0], [1.59745938E12, 32.0], [1.59745716E12, 32.0], [1.5974667E12, 31.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.597458E12, 32.0], [1.5974616E12, 31.0], [1.59746808E12, 32.0], [1.59746142E12, 32.0], [1.59746586E12, 31.0], [1.5974703E12, 31.0], [1.59746364E12, 32.0], [1.59745956E12, 32.0], [1.597464E12, 31.0], [1.59746826E12, 32.0], [1.59747048E12, 32.0], [1.59746178E12, 31.0], [1.59746382E12, 32.0], [1.59746604E12, 31.0], [1.59745782E12, 32.0], [1.59745974E12, 32.0], [1.59746196E12, 32.0], [1.59746418E12, 31.0], [1.5974664E12, 32.0], [1.59746844E12, 31.0], [1.59747066E12, 32.0], [1.59745764E12, 32.0], [1.59746622E12, 32.0], [1.59746862E12, 32.0], [1.59747084E12, 32.0], [1.59746214E12, 31.0], [1.59746658E12, 32.0], [1.59746436E12, 31.0], [1.59745746E12, 32.0], [1.59745992E12, 32.0], [1.5974688E12, 31.0], [1.59747102E12, 31.0], [1.5974571E12, 32.0], [1.59745932E12, 32.0], [1.59746676E12, 31.0], [1.59746454E12, 31.0], [1.59745728E12, 33.0], [1.59746898E12, 31.0], [1.5974712E12, 31.0], [1.5974601E12, 31.0], [1.59746232E12, 31.0], [1.59745914E12, 29.0], [1.59746694E12, 31.0], [1.59746472E12, 32.0], [1.59746916E12, 31.0], [1.59746028E12, 32.0], [1.59747138E12, 32.0], [1.5974625E12, 31.0], [1.59745896E12, 32.0], [1.59746064E12, 32.0], [1.59746046E12, 32.0], [1.59746268E12, 32.0], [1.5974649E12, 31.0], [1.59746712E12, 31.0], [1.59746934E12, 31.0], [1.59746082E12, 30.0], [1.59746304E12, 31.0], [1.59746952E12, 32.0], [1.59746286E12, 32.0], [1.5974673E12, 32.0], [1.59745878E12, 32.0], [1.59746508E12, 32.0], [1.5974574E12, 32.0], [1.59746646E12, 32.0], [1.5974598E12, 32.0], [1.59746424E12, 32.0], [1.59746868E12, 31.0], [1.59746202E12, 32.0], [1.5974709E12, 32.0], [1.59745722E12, 32.0], [1.59746016E12, 32.0], [1.59746886E12, 31.0], [1.59747108E12, 31.0], [1.59745998E12, 32.0], [1.5974622E12, 31.0], [1.59746442E12, 32.0], [1.59746664E12, 32.0], [1.59745704E12, 32.0], [1.59746256E12, 31.0], [1.59746034E12, 31.0], [1.59746904E12, 31.0], [1.59746682E12, 31.0], [1.59747126E12, 32.0], [1.59746238E12, 31.0], [1.59745926E12, 32.0], [1.5974646E12, 32.0], [1.59746052E12, 32.0], [1.59746496E12, 31.0], [1.59746922E12, 31.0], [1.59746274E12, 31.0], [1.59745908E12, 32.0], [1.59746478E12, 31.0], [1.597467E12, 30.0], [1.5974607E12, 32.0], [1.59746292E12, 31.0], [1.59746514E12, 31.0], [1.59746736E12, 32.0], [1.5974694E12, 31.0], [1.5974589E12, 32.0], [1.59746718E12, 31.0], [1.59746958E12, 32.0], [1.5974631E12, 31.0], [1.59746754E12, 31.0], [1.59745854E12, 33.0], [1.59746532E12, 31.0], [1.59745872E12, 32.0], [1.59746088E12, 32.0], [1.59746976E12, 31.0], [1.59745836E12, 32.0], [1.5974655E12, 30.0], [1.59746772E12, 32.0], [1.59746106E12, 32.0], [1.59746328E12, 31.0], [1.59746994E12, 32.0], [1.59745818E12, 32.0], [1.5974679E12, 32.0], [1.59747012E12, 32.0], [1.59746124E12, 32.0], [1.59746568E12, 31.0], [1.59746346E12, 32.0], [1.5974691E12, 32.0], [1.59747132E12, 32.0], [1.59746262E12, 31.0], [1.59746706E12, 31.0], [1.59745902E12, 32.0], [1.59746484E12, 31.0], [1.59745698E12, 33.0], [1.5974592E12, 32.0], [1.59746928E12, 31.0], [1.5974604E12, 32.0], [1.59745884E12, 32.0], [1.59746502E12, 31.0], [1.59746724E12, 32.0], [1.59746058E12, 32.0], [1.5974628E12, 32.0], [1.59746946E12, 31.0], [1.59745866E12, 32.0], [1.59746742E12, 31.0], [1.59746076E12, 32.0], [1.5974652E12, 31.0], [1.59746964E12, 31.0], [1.59746298E12, 32.0], [1.59745848E12, 32.0], [1.59746112E12, 32.0], [1.59746094E12, 32.0], [1.59746316E12, 32.0], [1.59746538E12, 31.0], [1.5974676E12, 31.0], [1.59746982E12, 32.0], [1.5974613E12, 32.0], [1.59746352E12, 31.0], [1.59747E12, 32.0], [1.59746334E12, 32.0], [1.59746778E12, 32.0], [1.59746556E12, 32.0], [1.5974583E12, 32.0], [1.5974637E12, 32.0], [1.59746592E12, 31.0], [1.59746148E12, 32.0], [1.59746796E12, 31.0], [1.59747018E12, 31.0], [1.59745812E12, 32.0], [1.59746574E12, 32.0], [1.59746814E12, 32.0], [1.59747036E12, 32.0], [1.59746166E12, 32.0], [1.5974661E12, 32.0], [1.59746388E12, 31.0], [1.59745794E12, 32.0], [1.59745944E12, 32.0], [1.59746832E12, 32.0], [1.59747054E12, 31.0], [1.59746406E12, 31.0], [1.59746628E12, 32.0], [1.59745758E12, 32.0], [1.59745776E12, 31.0], [1.59745962E12, 32.0], [1.59746184E12, 31.0], [1.5974685E12, 32.0], [1.59747072E12, 31.0], [1.597461E12, 32.0], [1.59746544E12, 31.0], [1.5974697E12, 31.0], [1.59746322E12, 31.0], [1.5974586E12, 32.0], [1.59746526E12, 31.0], [1.59746748E12, 31.0], [1.59746118E12, 31.0], [1.5974634E12, 32.0], [1.59746562E12, 31.0], [1.59746988E12, 32.0], [1.59745842E12, 32.0], [1.59746766E12, 31.0], [1.59746784E12, 31.0], [1.59746358E12, 31.0], [1.59747006E12, 31.0], [1.5974658E12, 32.0], [1.59745806E12, 32.0], [1.59745824E12, 32.0], [1.59746802E12, 31.0], [1.59747024E12, 32.0], [1.59746136E12, 31.0], [1.59745788E12, 32.0], [1.59746598E12, 32.0], [1.59746376E12, 31.0], [1.5974682E12, 31.0], [1.59746154E12, 32.0], [1.59747042E12, 32.0], [1.5974577E12, 32.0], [1.59745968E12, 32.0], [1.5974595E12, 32.0], [1.59746172E12, 31.0], [1.59746394E12, 31.0], [1.59746616E12, 31.0], [1.59746838E12, 32.0], [1.5974706E12, 32.0], [1.59745752E12, 32.0], [1.59745986E12, 30.0], [1.59746208E12, 31.0], [1.59746856E12, 30.0], [1.5974619E12, 31.0], [1.59746634E12, 32.0], [1.59747078E12, 32.0], [1.59746412E12, 31.0], [1.59746004E12, 31.0], [1.59746448E12, 31.0], [1.59747096E12, 32.0], [1.59746874E12, 31.0], [1.59746226E12, 31.0], [1.5974643E12, 31.0], [1.59746652E12, 32.0], [1.59745734E12, 32.0], [1.59746466E12, 32.0], [1.59746688E12, 31.0], [1.59746022E12, 32.0], [1.59746244E12, 29.0], [1.59746892E12, 31.0], [1.59747114E12, 31.0], [1.59745938E12, 32.0], [1.59745716E12, 32.0], [1.5974667E12, 31.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.597458E12, 32.0], [1.5974616E12, 31.0], [1.59746808E12, 32.0], [1.59746142E12, 32.0], [1.59746586E12, 31.0], [1.5974703E12, 31.0], [1.59746364E12, 32.0], [1.59745956E12, 32.0], [1.597464E12, 31.0], [1.59746826E12, 32.0], [1.59747048E12, 32.0], [1.59746178E12, 31.0], [1.59746382E12, 32.0], [1.59746604E12, 31.0], [1.59745782E12, 32.0], [1.59745974E12, 32.0], [1.59746196E12, 32.0], [1.59746418E12, 31.0], [1.5974664E12, 32.0], [1.59746844E12, 31.0], [1.59747066E12, 32.0], [1.59745764E12, 32.0], [1.59746622E12, 32.0], [1.59746862E12, 32.0], [1.59747084E12, 32.0], [1.59746214E12, 31.0], [1.59746658E12, 32.0], [1.59746436E12, 31.0], [1.59745746E12, 32.0], [1.59745992E12, 32.0], [1.5974688E12, 31.0], [1.59747102E12, 31.0], [1.5974571E12, 32.0], [1.59745932E12, 32.0], [1.59746676E12, 31.0], [1.59746454E12, 31.0], [1.59745728E12, 33.0], [1.59746898E12, 31.0], [1.5974712E12, 31.0], [1.5974601E12, 31.0], [1.59746232E12, 31.0], [1.59745914E12, 29.0], [1.59746694E12, 31.0], [1.59746472E12, 32.0], [1.59746916E12, 31.0], [1.59746028E12, 32.0], [1.59747138E12, 32.0], [1.5974625E12, 31.0], [1.59745896E12, 32.0], [1.59746064E12, 32.0], [1.59746046E12, 32.0], [1.59746268E12, 32.0], [1.5974649E12, 31.0], [1.59746712E12, 31.0], [1.59746934E12, 31.0], [1.59746082E12, 30.0], [1.59746304E12, 31.0], [1.59746952E12, 32.0], [1.59746286E12, 32.0], [1.5974673E12, 32.0], [1.59745878E12, 32.0], [1.59746508E12, 32.0], [1.5974574E12, 32.0], [1.59746646E12, 32.0], [1.5974598E12, 32.0], [1.59746424E12, 32.0], [1.59746868E12, 31.0], [1.59746202E12, 32.0], [1.5974709E12, 32.0], [1.59745722E12, 32.0], [1.59746016E12, 32.0], [1.59746886E12, 31.0], [1.59747108E12, 31.0], [1.59745998E12, 32.0], [1.5974622E12, 31.0], [1.59746442E12, 32.0], [1.59746664E12, 32.0], [1.59745704E12, 32.0], [1.59746256E12, 31.0], [1.59746034E12, 31.0], [1.59746904E12, 31.0], [1.59746682E12, 31.0], [1.59747126E12, 32.0], [1.59746238E12, 31.0], [1.59745926E12, 32.0], [1.5974646E12, 32.0], [1.59746052E12, 32.0], [1.59746496E12, 31.0], [1.59746922E12, 31.0], [1.59746274E12, 31.0], [1.59745908E12, 32.0], [1.59746478E12, 31.0], [1.597467E12, 30.0], [1.5974607E12, 32.0], [1.59746292E12, 31.0], [1.59746514E12, 31.0], [1.59746736E12, 32.0], [1.5974694E12, 31.0], [1.5974589E12, 32.0], [1.59746718E12, 31.0], [1.59746958E12, 32.0], [1.5974631E12, 31.0], [1.59746754E12, 31.0], [1.59745854E12, 33.0], [1.59746532E12, 31.0], [1.59745872E12, 32.0], [1.59746088E12, 32.0], [1.59746976E12, 31.0], [1.59745836E12, 32.0], [1.5974655E12, 30.0], [1.59746772E12, 32.0], [1.59746106E12, 32.0], [1.59746328E12, 31.0], [1.59746994E12, 32.0], [1.59745818E12, 32.0], [1.5974679E12, 32.0], [1.59747012E12, 32.0], [1.59746124E12, 32.0], [1.59746568E12, 31.0], [1.59746346E12, 32.0], [1.5974691E12, 32.0], [1.59747132E12, 32.0], [1.59746262E12, 31.0], [1.59746706E12, 31.0], [1.59745902E12, 32.0], [1.59746484E12, 31.0], [1.59745698E12, 33.0], [1.5974592E12, 32.0], [1.59746928E12, 31.0], [1.5974604E12, 32.0], [1.59745884E12, 32.0], [1.59746502E12, 31.0], [1.59746724E12, 32.0], [1.59746058E12, 32.0], [1.5974628E12, 32.0], [1.59746946E12, 31.0], [1.59745866E12, 32.0], [1.59746742E12, 31.0], [1.59746076E12, 32.0], [1.5974652E12, 31.0], [1.59746964E12, 31.0], [1.59746298E12, 32.0], [1.59745848E12, 32.0], [1.59746112E12, 32.0], [1.59746094E12, 32.0], [1.59746316E12, 32.0], [1.59746538E12, 31.0], [1.5974676E12, 31.0], [1.59746982E12, 32.0], [1.5974613E12, 32.0], [1.59746352E12, 31.0], [1.59747E12, 32.0], [1.59746334E12, 32.0], [1.59746778E12, 32.0], [1.59746556E12, 32.0], [1.5974583E12, 32.0], [1.5974637E12, 32.0], [1.59746592E12, 31.0], [1.59746148E12, 32.0], [1.59746796E12, 31.0], [1.59747018E12, 31.0], [1.59745812E12, 32.0], [1.59746574E12, 32.0], [1.59746814E12, 32.0], [1.59747036E12, 32.0], [1.59746166E12, 32.0], [1.5974661E12, 32.0], [1.59746388E12, 31.0], [1.59745794E12, 32.0], [1.59745944E12, 32.0], [1.59746832E12, 32.0], [1.59747054E12, 31.0], [1.59746406E12, 31.0], [1.59746628E12, 32.0], [1.59745758E12, 32.0], [1.59745776E12, 31.0], [1.59745962E12, 32.0], [1.59746184E12, 31.0], [1.5974685E12, 32.0], [1.59747072E12, 31.0], [1.597461E12, 32.0], [1.59746544E12, 31.0], [1.5974697E12, 31.0], [1.59746322E12, 31.0], [1.5974586E12, 32.0], [1.59746526E12, 31.0], [1.59746748E12, 31.0], [1.59746118E12, 31.0], [1.5974634E12, 32.0], [1.59746562E12, 31.0], [1.59746988E12, 32.0], [1.59745842E12, 32.0], [1.59746766E12, 31.0], [1.59746784E12, 31.0], [1.59746358E12, 31.0], [1.59747006E12, 31.0], [1.5974658E12, 32.0], [1.59745806E12, 32.0], [1.59745824E12, 32.0], [1.59746802E12, 31.0], [1.59747024E12, 32.0], [1.59746136E12, 31.0], [1.59745788E12, 32.0], [1.59746598E12, 32.0], [1.59746376E12, 31.0], [1.5974682E12, 31.0], [1.59746154E12, 32.0], [1.59747042E12, 32.0], [1.5974577E12, 32.0], [1.59745968E12, 32.0], [1.5974595E12, 32.0], [1.59746172E12, 31.0], [1.59746394E12, 31.0], [1.59746616E12, 31.0], [1.59746838E12, 32.0], [1.5974706E12, 32.0], [1.59745752E12, 32.0], [1.59745986E12, 30.0], [1.59746208E12, 31.0], [1.59746856E12, 30.0], [1.5974619E12, 31.0], [1.59746634E12, 32.0], [1.59747078E12, 32.0], [1.59746412E12, 31.0], [1.59746004E12, 31.0], [1.59746448E12, 31.0], [1.59747096E12, 32.0], [1.59746874E12, 31.0], [1.59746226E12, 31.0], [1.5974643E12, 31.0], [1.59746652E12, 32.0], [1.59745734E12, 32.0], [1.59746466E12, 32.0], [1.59746688E12, 31.0], [1.59746022E12, 32.0], [1.59746244E12, 29.0], [1.59746892E12, 31.0], [1.59747114E12, 31.0], [1.59745938E12, 32.0], [1.59745716E12, 32.0], [1.5974667E12, 31.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.597458E12, 34.0], [1.5974616E12, 33.0], [1.59746808E12, 33.0], [1.59746142E12, 33.0], [1.59746586E12, 33.0], [1.5974703E12, 33.0], [1.59746364E12, 34.0], [1.59745956E12, 34.0], [1.597464E12, 33.5], [1.59746826E12, 33.0], [1.59747048E12, 33.0], [1.59746178E12, 33.0], [1.59746382E12, 33.0], [1.59746604E12, 33.0], [1.59745782E12, 34.0], [1.59745974E12, 34.0], [1.59746196E12, 33.0], [1.59746418E12, 33.0], [1.5974664E12, 33.0], [1.59746844E12, 33.0], [1.59747066E12, 33.0], [1.59745764E12, 34.0], [1.59746622E12, 33.0], [1.59746862E12, 34.0], [1.59747084E12, 34.0], [1.59746214E12, 33.0], [1.59746658E12, 33.0], [1.59746436E12, 33.0], [1.59745746E12, 34.0], [1.59745992E12, 33.0], [1.5974688E12, 34.0], [1.59747102E12, 33.0], [1.5974571E12, 34.0], [1.59745932E12, 35.0], [1.59746676E12, 34.0], [1.59746454E12, 33.0], [1.59745728E12, 34.0], [1.59746898E12, 33.0], [1.5974712E12, 33.0], [1.5974601E12, 34.0], [1.59746232E12, 33.0], [1.59745914E12, 34.0], [1.59746694E12, 34.0], [1.59746472E12, 33.0], [1.59746916E12, 33.0], [1.59746028E12, 34.0], [1.59747138E12, 34.0], [1.5974625E12, 33.0], [1.59745896E12, 34.0], [1.59746064E12, 35.0], [1.59746046E12, 34.0], [1.59746268E12, 34.0], [1.5974649E12, 33.0], [1.59746712E12, 34.0], [1.59746934E12, 34.0], [1.59746082E12, 34.0], [1.59746304E12, 34.0], [1.59746952E12, 33.0], [1.59746286E12, 33.0], [1.5974673E12, 34.0], [1.59745878E12, 34.0], [1.59746508E12, 33.0], [1.5974574E12, 34.0], [1.59746646E12, 34.0], [1.5974598E12, 34.0], [1.59746424E12, 33.0], [1.59746868E12, 34.0], [1.59746202E12, 34.0], [1.5974709E12, 34.0], [1.59745722E12, 34.0], [1.59746016E12, 33.0], [1.59746886E12, 33.0], [1.59747108E12, 33.0], [1.59745998E12, 33.0], [1.5974622E12, 33.0], [1.59746442E12, 33.0], [1.59746664E12, 33.0], [1.59745704E12, 36.0], [1.59746256E12, 34.0], [1.59746034E12, 34.0], [1.59746904E12, 35.0], [1.59746682E12, 34.0], [1.59747126E12, 34.0], [1.59746238E12, 33.0], [1.59745926E12, 34.0], [1.5974646E12, 33.0], [1.59746052E12, 33.5], [1.59746496E12, 33.0], [1.59746922E12, 33.0], [1.59746274E12, 33.0], [1.59745908E12, 33.0], [1.59746478E12, 33.0], [1.597467E12, 33.0], [1.5974607E12, 33.5], [1.59746292E12, 33.0], [1.59746514E12, 33.0], [1.59746736E12, 34.0], [1.5974694E12, 33.0], [1.5974589E12, 34.0], [1.59746718E12, 33.0], [1.59746958E12, 33.0], [1.5974631E12, 34.0], [1.59746754E12, 34.0], [1.59745854E12, 34.0], [1.59746532E12, 34.0], [1.59745872E12, 34.0], [1.59746088E12, 34.0], [1.59746976E12, 34.0], [1.59745836E12, 34.0], [1.5974655E12, 34.0], [1.59746772E12, 33.0], [1.59746106E12, 33.0], [1.59746328E12, 33.0], [1.59746994E12, 33.0], [1.59745818E12, 34.0], [1.5974679E12, 34.0], [1.59747012E12, 33.0], [1.59746124E12, 34.0], [1.59746568E12, 33.0], [1.59746346E12, 34.0], [1.5974691E12, 34.0], [1.59747132E12, 33.0], [1.59746262E12, 33.0], [1.59746706E12, 34.0], [1.59745902E12, 34.0], [1.59746484E12, 34.0], [1.59745698E12, 36.5], [1.5974592E12, 34.0], [1.59746928E12, 34.0], [1.5974604E12, 33.5], [1.59745884E12, 34.0], [1.59746502E12, 34.0], [1.59746724E12, 34.0], [1.59746058E12, 34.0], [1.5974628E12, 33.0], [1.59746946E12, 33.0], [1.59745866E12, 34.0], [1.59746742E12, 34.0], [1.59746076E12, 35.0], [1.5974652E12, 33.5], [1.59746964E12, 34.0], [1.59746298E12, 34.0], [1.59745848E12, 33.0], [1.59746112E12, 34.0], [1.59746094E12, 34.0], [1.59746316E12, 33.0], [1.59746538E12, 33.0], [1.5974676E12, 34.5], [1.59746982E12, 34.0], [1.5974613E12, 33.0], [1.59746352E12, 33.0], [1.59747E12, 34.0], [1.59746334E12, 34.0], [1.59746778E12, 33.0], [1.59746556E12, 33.0], [1.5974583E12, 34.0], [1.5974637E12, 34.0], [1.59746592E12, 34.0], [1.59746148E12, 33.0], [1.59746796E12, 33.0], [1.59747018E12, 33.0], [1.59745812E12, 34.0], [1.59746574E12, 34.0], [1.59746814E12, 33.0], [1.59747036E12, 34.0], [1.59746166E12, 33.0], [1.5974661E12, 33.0], [1.59746388E12, 33.0], [1.59745794E12, 34.0], [1.59745944E12, 33.0], [1.59746832E12, 34.0], [1.59747054E12, 33.0], [1.59746406E12, 33.0], [1.59746628E12, 34.0], [1.59745758E12, 34.0], [1.59745776E12, 34.0], [1.59745962E12, 34.0], [1.59746184E12, 34.0], [1.5974685E12, 34.0], [1.59747072E12, 33.0], [1.597461E12, 34.0], [1.59746544E12, 34.0], [1.5974697E12, 33.0], [1.59746322E12, 33.0], [1.5974586E12, 34.0], [1.59746526E12, 34.0], [1.59746748E12, 33.0], [1.59746118E12, 34.0], [1.5974634E12, 34.0], [1.59746562E12, 33.0], [1.59746988E12, 34.0], [1.59745842E12, 34.0], [1.59746766E12, 34.0], [1.59746784E12, 34.0], [1.59746358E12, 34.0], [1.59747006E12, 33.0], [1.5974658E12, 34.0], [1.59745806E12, 34.0], [1.59745824E12, 34.0], [1.59746802E12, 33.0], [1.59747024E12, 33.0], [1.59746136E12, 33.0], [1.59745788E12, 34.0], [1.59746598E12, 34.0], [1.59746376E12, 33.0], [1.5974682E12, 33.0], [1.59746154E12, 33.0], [1.59747042E12, 34.0], [1.5974577E12, 34.0], [1.59745968E12, 35.0], [1.5974595E12, 33.0], [1.59746172E12, 33.0], [1.59746394E12, 33.0], [1.59746616E12, 34.0], [1.59746838E12, 33.0], [1.5974706E12, 34.0], [1.59745752E12, 35.0], [1.59745986E12, 34.0], [1.59746208E12, 33.0], [1.59746856E12, 34.0], [1.5974619E12, 33.0], [1.59746634E12, 33.0], [1.59747078E12, 34.0], [1.59746412E12, 34.0], [1.59746004E12, 34.0], [1.59746448E12, 33.0], [1.59747096E12, 34.0], [1.59746874E12, 33.0], [1.59746226E12, 34.0], [1.5974643E12, 33.0], [1.59746652E12, 33.0], [1.59745734E12, 34.0], [1.59746466E12, 33.0], [1.59746688E12, 33.0], [1.59746022E12, 33.0], [1.59746244E12, 33.0], [1.59746892E12, 33.0], [1.59747114E12, 33.0], [1.59745938E12, 33.5], [1.59745716E12, 34.0], [1.5974667E12, 34.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59747138E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 537.5, "series": [{"data": [[1.0, 33.0], [2.0, 33.0], [4.0, 537.5], [3.0, 35.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 537.5, "series": [{"data": [[1.0, 33.0], [2.0, 33.0], [4.0, 537.5], [3.0, 35.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.59745698E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.597458E12, 1.6666666666666667], [1.5974616E12, 1.6666666666666667], [1.59746808E12, 1.6666666666666667], [1.59746142E12, 1.6666666666666667], [1.59746586E12, 1.6666666666666667], [1.5974703E12, 1.6666666666666667], [1.59746364E12, 1.6666666666666667], [1.59745956E12, 1.6666666666666667], [1.597464E12, 1.6666666666666667], [1.59746826E12, 1.6666666666666667], [1.59747048E12, 1.6666666666666667], [1.59746178E12, 1.6666666666666667], [1.59746382E12, 1.6666666666666667], [1.59746604E12, 1.6666666666666667], [1.59745782E12, 1.6666666666666667], [1.59745974E12, 1.6666666666666667], [1.59746196E12, 1.6666666666666667], [1.59746418E12, 1.6666666666666667], [1.5974664E12, 1.6666666666666667], [1.59746844E12, 1.6666666666666667], [1.59747066E12, 1.6666666666666667], [1.59745764E12, 1.6666666666666667], [1.59746622E12, 1.6666666666666667], [1.59746862E12, 1.6666666666666667], [1.59747084E12, 1.6666666666666667], [1.59746214E12, 1.6666666666666667], [1.59746658E12, 1.6666666666666667], [1.59746436E12, 1.6666666666666667], [1.59745746E12, 1.6666666666666667], [1.59745992E12, 1.6666666666666667], [1.5974688E12, 1.6666666666666667], [1.59747102E12, 1.6666666666666667], [1.5974571E12, 1.6666666666666667], [1.59745932E12, 1.6666666666666667], [1.59746676E12, 1.6666666666666667], [1.59746454E12, 1.6666666666666667], [1.59745728E12, 1.6666666666666667], [1.59746898E12, 1.6666666666666667], [1.5974712E12, 1.6666666666666667], [1.5974601E12, 1.6666666666666667], [1.59746232E12, 1.6666666666666667], [1.59745914E12, 1.6666666666666667], [1.59746694E12, 1.6666666666666667], [1.59746472E12, 1.6666666666666667], [1.59746916E12, 1.6666666666666667], [1.59746028E12, 1.6666666666666667], [1.59747138E12, 1.6], [1.5974625E12, 1.6666666666666667], [1.59745896E12, 1.6666666666666667], [1.59746064E12, 1.6666666666666667], [1.59746046E12, 1.6666666666666667], [1.59746268E12, 1.6666666666666667], [1.5974649E12, 1.6666666666666667], [1.59746712E12, 1.6666666666666667], [1.59746934E12, 1.6666666666666667], [1.59746082E12, 1.6666666666666667], [1.59746304E12, 1.6666666666666667], [1.59746952E12, 1.6666666666666667], [1.59746286E12, 1.6666666666666667], [1.5974673E12, 1.6666666666666667], [1.59745878E12, 1.6666666666666667], [1.59746508E12, 1.6666666666666667], [1.5974574E12, 1.6666666666666667], [1.59746646E12, 1.6666666666666667], [1.5974598E12, 1.6666666666666667], [1.59746424E12, 1.6666666666666667], [1.59746868E12, 1.6666666666666667], [1.59746202E12, 1.6666666666666667], [1.5974709E12, 1.6666666666666667], [1.59745722E12, 1.6666666666666667], [1.59746016E12, 1.6666666666666667], [1.59746886E12, 1.6666666666666667], [1.59747108E12, 1.6666666666666667], [1.59745998E12, 1.6666666666666667], [1.5974622E12, 1.6666666666666667], [1.59746442E12, 1.6666666666666667], [1.59746664E12, 1.6666666666666667], [1.59745704E12, 1.6666666666666667], [1.59746256E12, 1.6666666666666667], [1.59746034E12, 1.6666666666666667], [1.59746904E12, 1.6666666666666667], [1.59746682E12, 1.6666666666666667], [1.59747126E12, 1.6666666666666667], [1.59746238E12, 1.6666666666666667], [1.59745926E12, 1.6666666666666667], [1.5974646E12, 1.6666666666666667], [1.59746052E12, 1.6666666666666667], [1.59746496E12, 1.6666666666666667], [1.59746922E12, 1.6666666666666667], [1.59746274E12, 1.6666666666666667], [1.59745908E12, 1.6666666666666667], [1.59746478E12, 1.6666666666666667], [1.597467E12, 1.6666666666666667], [1.5974607E12, 1.6666666666666667], [1.59746292E12, 1.6666666666666667], [1.59746514E12, 1.6666666666666667], [1.59746736E12, 1.6666666666666667], [1.5974694E12, 1.6666666666666667], [1.5974589E12, 1.6666666666666667], [1.59746718E12, 1.6666666666666667], [1.59746958E12, 1.6666666666666667], [1.5974631E12, 1.6666666666666667], [1.59746754E12, 1.6666666666666667], [1.59745854E12, 1.6666666666666667], [1.59746532E12, 1.6666666666666667], [1.59745872E12, 1.6666666666666667], [1.59746088E12, 1.6666666666666667], [1.59746976E12, 1.6666666666666667], [1.59745836E12, 1.6666666666666667], [1.5974655E12, 1.6666666666666667], [1.59746772E12, 1.6666666666666667], [1.59746106E12, 1.6666666666666667], [1.59746328E12, 1.6666666666666667], [1.59746994E12, 1.6666666666666667], [1.59745818E12, 1.6666666666666667], [1.5974679E12, 1.6666666666666667], [1.59747012E12, 1.6666666666666667], [1.59746124E12, 1.6666666666666667], [1.59746568E12, 1.6666666666666667], [1.59746346E12, 1.6666666666666667], [1.5974691E12, 1.6666666666666667], [1.59747132E12, 1.6666666666666667], [1.59746262E12, 1.6666666666666667], [1.59746706E12, 1.6666666666666667], [1.59745902E12, 1.6666666666666667], [1.59746484E12, 1.6666666666666667], [1.59745698E12, 0.06666666666666667], [1.5974592E12, 1.6666666666666667], [1.59746928E12, 1.6666666666666667], [1.5974604E12, 1.6666666666666667], [1.59745884E12, 1.6666666666666667], [1.59746502E12, 1.6666666666666667], [1.59746724E12, 1.6666666666666667], [1.59746058E12, 1.6666666666666667], [1.5974628E12, 1.6666666666666667], [1.59746946E12, 1.6666666666666667], [1.59745866E12, 1.6666666666666667], [1.59746742E12, 1.6666666666666667], [1.59746076E12, 1.6666666666666667], [1.5974652E12, 1.6666666666666667], [1.59746964E12, 1.6666666666666667], [1.59746298E12, 1.6666666666666667], [1.59745848E12, 1.6666666666666667], [1.59746112E12, 1.6666666666666667], [1.59746094E12, 1.6666666666666667], [1.59746316E12, 1.6666666666666667], [1.59746538E12, 1.6666666666666667], [1.5974676E12, 1.6666666666666667], [1.59746982E12, 1.6666666666666667], [1.5974613E12, 1.6666666666666667], [1.59746352E12, 1.6666666666666667], [1.59747E12, 1.6666666666666667], [1.59746334E12, 1.6666666666666667], [1.59746778E12, 1.6666666666666667], [1.59746556E12, 1.6666666666666667], [1.5974583E12, 1.6666666666666667], [1.5974637E12, 1.6666666666666667], [1.59746592E12, 1.6666666666666667], [1.59746148E12, 1.6666666666666667], [1.59746796E12, 1.6666666666666667], [1.59747018E12, 1.6666666666666667], [1.59745812E12, 1.6666666666666667], [1.59746574E12, 1.6666666666666667], [1.59746814E12, 1.6666666666666667], [1.59747036E12, 1.6666666666666667], [1.59746166E12, 1.6666666666666667], [1.5974661E12, 1.6666666666666667], [1.59746388E12, 1.6666666666666667], [1.59745794E12, 1.6666666666666667], [1.59745944E12, 1.6666666666666667], [1.59746832E12, 1.6666666666666667], [1.59747054E12, 1.6666666666666667], [1.59746406E12, 1.6666666666666667], [1.59746628E12, 1.6666666666666667], [1.59745758E12, 1.6666666666666667], [1.59745776E12, 1.6666666666666667], [1.59745962E12, 1.6666666666666667], [1.59746184E12, 1.6666666666666667], [1.5974685E12, 1.6666666666666667], [1.59747072E12, 1.6666666666666667], [1.597461E12, 1.6666666666666667], [1.59746544E12, 1.6666666666666667], [1.5974697E12, 1.6666666666666667], [1.59746322E12, 1.6666666666666667], [1.5974586E12, 1.6666666666666667], [1.59746526E12, 1.6666666666666667], [1.59746748E12, 1.6666666666666667], [1.59746118E12, 1.6666666666666667], [1.5974634E12, 1.6666666666666667], [1.59746562E12, 1.6666666666666667], [1.59746988E12, 1.6666666666666667], [1.59745842E12, 1.6666666666666667], [1.59746766E12, 1.6666666666666667], [1.59746784E12, 1.6666666666666667], [1.59746358E12, 1.6666666666666667], [1.59747006E12, 1.6666666666666667], [1.5974658E12, 1.6666666666666667], [1.59745806E12, 1.6666666666666667], [1.59745824E12, 1.6666666666666667], [1.59746802E12, 1.6666666666666667], [1.59747024E12, 1.6666666666666667], [1.59746136E12, 1.6666666666666667], [1.59745788E12, 1.6666666666666667], [1.59746598E12, 1.6666666666666667], [1.59746376E12, 1.6666666666666667], [1.5974682E12, 1.6666666666666667], [1.59746154E12, 1.6666666666666667], [1.59747042E12, 1.6666666666666667], [1.5974577E12, 1.6666666666666667], [1.59745968E12, 1.6666666666666667], [1.5974595E12, 1.6666666666666667], [1.59746172E12, 1.6666666666666667], [1.59746394E12, 1.6666666666666667], [1.59746616E12, 1.6666666666666667], [1.59746838E12, 1.6666666666666667], [1.5974706E12, 1.6666666666666667], [1.59745752E12, 1.6666666666666667], [1.59745986E12, 1.6666666666666667], [1.59746208E12, 1.6666666666666667], [1.59746856E12, 1.6666666666666667], [1.5974619E12, 1.6666666666666667], [1.59746634E12, 1.6666666666666667], [1.59747078E12, 1.6666666666666667], [1.59746412E12, 1.6666666666666667], [1.59746004E12, 1.6666666666666667], [1.59746448E12, 1.6666666666666667], [1.59747096E12, 1.6666666666666667], [1.59746874E12, 1.6666666666666667], [1.59746226E12, 1.6666666666666667], [1.5974643E12, 1.6666666666666667], [1.59746652E12, 1.6666666666666667], [1.59745734E12, 1.6666666666666667], [1.59746466E12, 1.6666666666666667], [1.59746688E12, 1.6666666666666667], [1.59746022E12, 1.6666666666666667], [1.59746244E12, 1.6666666666666667], [1.59746892E12, 1.6666666666666667], [1.59747114E12, 1.6666666666666667], [1.59745938E12, 1.6666666666666667], [1.59745716E12, 1.6666666666666667], [1.5974667E12, 1.6666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59747138E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.59745698E12, "maxY": 1.6833333333333333, "series": [{"data": [[1.597458E12, 1.6666666666666667], [1.5974616E12, 1.65], [1.59746808E12, 1.6666666666666667], [1.59746142E12, 1.6833333333333333], [1.59746586E12, 1.6833333333333333], [1.5974703E12, 1.6666666666666667], [1.59746364E12, 1.6666666666666667], [1.59745956E12, 1.65], [1.597464E12, 1.6666666666666667], [1.59746826E12, 1.6666666666666667], [1.59747048E12, 1.6666666666666667], [1.59746178E12, 1.6666666666666667], [1.59746382E12, 1.6833333333333333], [1.59746604E12, 1.6666666666666667], [1.59745782E12, 1.6833333333333333], [1.59745974E12, 1.6833333333333333], [1.59746196E12, 1.6666666666666667], [1.59746418E12, 1.6666666666666667], [1.5974664E12, 1.6666666666666667], [1.59746844E12, 1.6833333333333333], [1.59747066E12, 1.6666666666666667], [1.59745764E12, 1.6666666666666667], [1.59746622E12, 1.6666666666666667], [1.59746862E12, 1.65], [1.59747084E12, 1.6666666666666667], [1.59746214E12, 1.6666666666666667], [1.59746658E12, 1.6666666666666667], [1.59746436E12, 1.6666666666666667], [1.59745746E12, 1.6666666666666667], [1.59745992E12, 1.6833333333333333], [1.5974688E12, 1.6666666666666667], [1.59747102E12, 1.6666666666666667], [1.5974571E12, 1.6666666666666667], [1.59745932E12, 1.6666666666666667], [1.59746676E12, 1.6833333333333333], [1.59746454E12, 1.6666666666666667], [1.59745728E12, 1.65], [1.59746898E12, 1.6666666666666667], [1.5974712E12, 1.6666666666666667], [1.5974601E12, 1.6666666666666667], [1.59746232E12, 1.6666666666666667], [1.59745914E12, 1.6666666666666667], [1.59746694E12, 1.6666666666666667], [1.59746472E12, 1.65], [1.59746916E12, 1.6666666666666667], [1.59746028E12, 1.6833333333333333], [1.59747138E12, 1.6], [1.5974625E12, 1.6666666666666667], [1.59745896E12, 1.6833333333333333], [1.59746064E12, 1.6833333333333333], [1.59746046E12, 1.65], [1.59746268E12, 1.6666666666666667], [1.5974649E12, 1.6666666666666667], [1.59746712E12, 1.6833333333333333], [1.59746934E12, 1.6666666666666667], [1.59746082E12, 1.6666666666666667], [1.59746304E12, 1.6666666666666667], [1.59746952E12, 1.6666666666666667], [1.59746286E12, 1.6666666666666667], [1.5974673E12, 1.6666666666666667], [1.59745878E12, 1.6666666666666667], [1.59746508E12, 1.6666666666666667], [1.5974574E12, 1.6666666666666667], [1.59746646E12, 1.6666666666666667], [1.5974598E12, 1.6666666666666667], [1.59746424E12, 1.6666666666666667], [1.59746868E12, 1.6666666666666667], [1.59746202E12, 1.6666666666666667], [1.5974709E12, 1.6666666666666667], [1.59745722E12, 1.6666666666666667], [1.59746016E12, 1.6666666666666667], [1.59746886E12, 1.6666666666666667], [1.59747108E12, 1.6666666666666667], [1.59745998E12, 1.6666666666666667], [1.5974622E12, 1.6666666666666667], [1.59746442E12, 1.6666666666666667], [1.59746664E12, 1.6666666666666667], [1.59745704E12, 1.6666666666666667], [1.59746256E12, 1.6666666666666667], [1.59746034E12, 1.6666666666666667], [1.59746904E12, 1.6666666666666667], [1.59746682E12, 1.6666666666666667], [1.59747126E12, 1.6666666666666667], [1.59746238E12, 1.6666666666666667], [1.59745926E12, 1.6666666666666667], [1.5974646E12, 1.6666666666666667], [1.59746052E12, 1.6666666666666667], [1.59746496E12, 1.6666666666666667], [1.59746922E12, 1.6666666666666667], [1.59746274E12, 1.6666666666666667], [1.59745908E12, 1.6666666666666667], [1.59746478E12, 1.6833333333333333], [1.597467E12, 1.6666666666666667], [1.5974607E12, 1.6666666666666667], [1.59746292E12, 1.6666666666666667], [1.59746514E12, 1.6666666666666667], [1.59746736E12, 1.6666666666666667], [1.5974694E12, 1.6666666666666667], [1.5974589E12, 1.65], [1.59746718E12, 1.6666666666666667], [1.59746958E12, 1.6666666666666667], [1.5974631E12, 1.6666666666666667], [1.59746754E12, 1.6666666666666667], [1.59745854E12, 1.6666666666666667], [1.59746532E12, 1.6666666666666667], [1.59745872E12, 1.6833333333333333], [1.59746088E12, 1.6666666666666667], [1.59746976E12, 1.6666666666666667], [1.59745836E12, 1.65], [1.5974655E12, 1.6833333333333333], [1.59746772E12, 1.6666666666666667], [1.59746106E12, 1.6666666666666667], [1.59746328E12, 1.65], [1.59746994E12, 1.6666666666666667], [1.59745818E12, 1.6666666666666667], [1.5974679E12, 1.6666666666666667], [1.59747012E12, 1.6666666666666667], [1.59746124E12, 1.65], [1.59746568E12, 1.6666666666666667], [1.59746346E12, 1.6833333333333333], [1.5974691E12, 1.6666666666666667], [1.59747132E12, 1.6666666666666667], [1.59746262E12, 1.6666666666666667], [1.59746706E12, 1.65], [1.59745902E12, 1.6666666666666667], [1.59746484E12, 1.6666666666666667], [1.59745698E12, 0.06666666666666667], [1.5974592E12, 1.6666666666666667], [1.59746928E12, 1.6666666666666667], [1.5974604E12, 1.6666666666666667], [1.59745884E12, 1.6666666666666667], [1.59746502E12, 1.6666666666666667], [1.59746724E12, 1.6666666666666667], [1.59746058E12, 1.6666666666666667], [1.5974628E12, 1.6666666666666667], [1.59746946E12, 1.6666666666666667], [1.59745866E12, 1.65], [1.59746742E12, 1.6666666666666667], [1.59746076E12, 1.6666666666666667], [1.5974652E12, 1.6666666666666667], [1.59746964E12, 1.6666666666666667], [1.59746298E12, 1.6666666666666667], [1.59745848E12, 1.6666666666666667], [1.59746112E12, 1.6833333333333333], [1.59746094E12, 1.6666666666666667], [1.59746316E12, 1.6666666666666667], [1.59746538E12, 1.6666666666666667], [1.5974676E12, 1.6666666666666667], [1.59746982E12, 1.6666666666666667], [1.5974613E12, 1.6833333333333333], [1.59746352E12, 1.6666666666666667], [1.59747E12, 1.65], [1.59746334E12, 1.6833333333333333], [1.59746778E12, 1.6666666666666667], [1.59746556E12, 1.6666666666666667], [1.5974583E12, 1.6666666666666667], [1.5974637E12, 1.6666666666666667], [1.59746592E12, 1.6666666666666667], [1.59746148E12, 1.6666666666666667], [1.59746796E12, 1.6666666666666667], [1.59747018E12, 1.6666666666666667], [1.59745812E12, 1.6666666666666667], [1.59746574E12, 1.6666666666666667], [1.59746814E12, 1.6666666666666667], [1.59747036E12, 1.6666666666666667], [1.59746166E12, 1.6833333333333333], [1.5974661E12, 1.6666666666666667], [1.59746388E12, 1.6666666666666667], [1.59745794E12, 1.6666666666666667], [1.59745944E12, 1.6666666666666667], [1.59746832E12, 1.65], [1.59747054E12, 1.65], [1.59746406E12, 1.6666666666666667], [1.59746628E12, 1.6666666666666667], [1.59745758E12, 1.6666666666666667], [1.59745776E12, 1.65], [1.59745962E12, 1.6833333333333333], [1.59746184E12, 1.6666666666666667], [1.5974685E12, 1.65], [1.59747072E12, 1.65], [1.597461E12, 1.65], [1.59746544E12, 1.65], [1.5974697E12, 1.6666666666666667], [1.59746322E12, 1.6666666666666667], [1.5974586E12, 1.6666666666666667], [1.59746526E12, 1.6666666666666667], [1.59746748E12, 1.6666666666666667], [1.59746118E12, 1.6666666666666667], [1.5974634E12, 1.65], [1.59746562E12, 1.6666666666666667], [1.59746988E12, 1.6666666666666667], [1.59745842E12, 1.6833333333333333], [1.59746766E12, 1.6666666666666667], [1.59746784E12, 1.6666666666666667], [1.59746358E12, 1.6666666666666667], [1.59747006E12, 1.6833333333333333], [1.5974658E12, 1.65], [1.59745806E12, 1.6666666666666667], [1.59745824E12, 1.6666666666666667], [1.59746802E12, 1.6666666666666667], [1.59747024E12, 1.6666666666666667], [1.59746136E12, 1.65], [1.59745788E12, 1.6666666666666667], [1.59746598E12, 1.6666666666666667], [1.59746376E12, 1.65], [1.5974682E12, 1.6666666666666667], [1.59746154E12, 1.6666666666666667], [1.59747042E12, 1.6666666666666667], [1.5974577E12, 1.6666666666666667], [1.59745968E12, 1.65], [1.5974595E12, 1.6666666666666667], [1.59746172E12, 1.6666666666666667], [1.59746394E12, 1.6666666666666667], [1.59746616E12, 1.6666666666666667], [1.59746838E12, 1.6666666666666667], [1.5974706E12, 1.6833333333333333], [1.59745752E12, 1.6666666666666667], [1.59745986E12, 1.65], [1.59746208E12, 1.6666666666666667], [1.59746856E12, 1.6833333333333333], [1.5974619E12, 1.6666666666666667], [1.59746634E12, 1.6666666666666667], [1.59747078E12, 1.6833333333333333], [1.59746412E12, 1.6666666666666667], [1.59746004E12, 1.6666666666666667], [1.59746448E12, 1.6666666666666667], [1.59747096E12, 1.6666666666666667], [1.59746874E12, 1.6833333333333333], [1.59746226E12, 1.6666666666666667], [1.5974643E12, 1.6666666666666667], [1.59746652E12, 1.6666666666666667], [1.59745734E12, 1.6833333333333333], [1.59746466E12, 1.6666666666666667], [1.59746688E12, 1.6666666666666667], [1.59746022E12, 1.65], [1.59746244E12, 1.6666666666666667], [1.59746892E12, 1.6666666666666667], [1.59747114E12, 1.6666666666666667], [1.59745938E12, 1.6666666666666667], [1.59745716E12, 1.6666666666666667], [1.5974667E12, 1.65]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59747138E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.59745698E12, "maxY": 1.6833333333333333, "series": [{"data": [[1.597458E12, 1.6666666666666667], [1.5974616E12, 1.65], [1.59746808E12, 1.6666666666666667], [1.59746142E12, 1.6833333333333333], [1.59746586E12, 1.6833333333333333], [1.5974703E12, 1.6666666666666667], [1.59746364E12, 1.6666666666666667], [1.59745956E12, 1.65], [1.597464E12, 1.6666666666666667], [1.59746826E12, 1.6666666666666667], [1.59747048E12, 1.6666666666666667], [1.59746178E12, 1.6666666666666667], [1.59746382E12, 1.6833333333333333], [1.59746604E12, 1.6666666666666667], [1.59745782E12, 1.6833333333333333], [1.59745974E12, 1.6833333333333333], [1.59746196E12, 1.6666666666666667], [1.59746418E12, 1.6666666666666667], [1.5974664E12, 1.6666666666666667], [1.59746844E12, 1.6833333333333333], [1.59747066E12, 1.6666666666666667], [1.59745764E12, 1.6666666666666667], [1.59746622E12, 1.6666666666666667], [1.59746862E12, 1.65], [1.59747084E12, 1.6666666666666667], [1.59746214E12, 1.6666666666666667], [1.59746658E12, 1.6666666666666667], [1.59746436E12, 1.6666666666666667], [1.59745746E12, 1.6666666666666667], [1.59745992E12, 1.6833333333333333], [1.5974688E12, 1.6666666666666667], [1.59747102E12, 1.6666666666666667], [1.5974571E12, 1.6666666666666667], [1.59745932E12, 1.6666666666666667], [1.59746676E12, 1.6833333333333333], [1.59746454E12, 1.6666666666666667], [1.59745728E12, 1.65], [1.59746898E12, 1.6666666666666667], [1.5974712E12, 1.6666666666666667], [1.5974601E12, 1.6666666666666667], [1.59746232E12, 1.6666666666666667], [1.59745914E12, 1.6666666666666667], [1.59746694E12, 1.6666666666666667], [1.59746472E12, 1.65], [1.59746916E12, 1.6666666666666667], [1.59746028E12, 1.6833333333333333], [1.59747138E12, 1.6], [1.5974625E12, 1.6666666666666667], [1.59745896E12, 1.6833333333333333], [1.59746064E12, 1.6833333333333333], [1.59746046E12, 1.65], [1.59746268E12, 1.6666666666666667], [1.5974649E12, 1.6666666666666667], [1.59746712E12, 1.6833333333333333], [1.59746934E12, 1.6666666666666667], [1.59746082E12, 1.6666666666666667], [1.59746304E12, 1.6666666666666667], [1.59746952E12, 1.6666666666666667], [1.59746286E12, 1.6666666666666667], [1.5974673E12, 1.6666666666666667], [1.59745878E12, 1.6666666666666667], [1.59746508E12, 1.6666666666666667], [1.5974574E12, 1.6666666666666667], [1.59746646E12, 1.6666666666666667], [1.5974598E12, 1.6666666666666667], [1.59746424E12, 1.6666666666666667], [1.59746868E12, 1.6666666666666667], [1.59746202E12, 1.6666666666666667], [1.5974709E12, 1.6666666666666667], [1.59745722E12, 1.6666666666666667], [1.59746016E12, 1.6666666666666667], [1.59746886E12, 1.6666666666666667], [1.59747108E12, 1.6666666666666667], [1.59745998E12, 1.6666666666666667], [1.5974622E12, 1.6666666666666667], [1.59746442E12, 1.6666666666666667], [1.59746664E12, 1.6666666666666667], [1.59745704E12, 1.6666666666666667], [1.59746256E12, 1.6666666666666667], [1.59746034E12, 1.6666666666666667], [1.59746904E12, 1.6666666666666667], [1.59746682E12, 1.6666666666666667], [1.59747126E12, 1.6666666666666667], [1.59746238E12, 1.6666666666666667], [1.59745926E12, 1.6666666666666667], [1.5974646E12, 1.6666666666666667], [1.59746052E12, 1.6666666666666667], [1.59746496E12, 1.6666666666666667], [1.59746922E12, 1.6666666666666667], [1.59746274E12, 1.6666666666666667], [1.59745908E12, 1.6666666666666667], [1.59746478E12, 1.6833333333333333], [1.597467E12, 1.6666666666666667], [1.5974607E12, 1.6666666666666667], [1.59746292E12, 1.6666666666666667], [1.59746514E12, 1.6666666666666667], [1.59746736E12, 1.6666666666666667], [1.5974694E12, 1.6666666666666667], [1.5974589E12, 1.65], [1.59746718E12, 1.6666666666666667], [1.59746958E12, 1.6666666666666667], [1.5974631E12, 1.6666666666666667], [1.59746754E12, 1.6666666666666667], [1.59745854E12, 1.6666666666666667], [1.59746532E12, 1.6666666666666667], [1.59745872E12, 1.6833333333333333], [1.59746088E12, 1.6666666666666667], [1.59746976E12, 1.6666666666666667], [1.59745836E12, 1.65], [1.5974655E12, 1.6833333333333333], [1.59746772E12, 1.6666666666666667], [1.59746106E12, 1.6666666666666667], [1.59746328E12, 1.65], [1.59746994E12, 1.6666666666666667], [1.59745818E12, 1.6666666666666667], [1.5974679E12, 1.6666666666666667], [1.59747012E12, 1.6666666666666667], [1.59746124E12, 1.65], [1.59746568E12, 1.6666666666666667], [1.59746346E12, 1.6833333333333333], [1.5974691E12, 1.6666666666666667], [1.59747132E12, 1.6666666666666667], [1.59746262E12, 1.6666666666666667], [1.59746706E12, 1.65], [1.59745902E12, 1.6666666666666667], [1.59746484E12, 1.6666666666666667], [1.59745698E12, 0.06666666666666667], [1.5974592E12, 1.6666666666666667], [1.59746928E12, 1.6666666666666667], [1.5974604E12, 1.6666666666666667], [1.59745884E12, 1.6666666666666667], [1.59746502E12, 1.6666666666666667], [1.59746724E12, 1.6666666666666667], [1.59746058E12, 1.6666666666666667], [1.5974628E12, 1.6666666666666667], [1.59746946E12, 1.6666666666666667], [1.59745866E12, 1.65], [1.59746742E12, 1.6666666666666667], [1.59746076E12, 1.6666666666666667], [1.5974652E12, 1.6666666666666667], [1.59746964E12, 1.6666666666666667], [1.59746298E12, 1.6666666666666667], [1.59745848E12, 1.6666666666666667], [1.59746112E12, 1.6833333333333333], [1.59746094E12, 1.6666666666666667], [1.59746316E12, 1.6666666666666667], [1.59746538E12, 1.6666666666666667], [1.5974676E12, 1.6666666666666667], [1.59746982E12, 1.6666666666666667], [1.5974613E12, 1.6833333333333333], [1.59746352E12, 1.6666666666666667], [1.59747E12, 1.65], [1.59746334E12, 1.6833333333333333], [1.59746778E12, 1.6666666666666667], [1.59746556E12, 1.6666666666666667], [1.5974583E12, 1.6666666666666667], [1.5974637E12, 1.6666666666666667], [1.59746592E12, 1.6666666666666667], [1.59746148E12, 1.6666666666666667], [1.59746796E12, 1.6666666666666667], [1.59747018E12, 1.6666666666666667], [1.59745812E12, 1.6666666666666667], [1.59746574E12, 1.6666666666666667], [1.59746814E12, 1.6666666666666667], [1.59747036E12, 1.6666666666666667], [1.59746166E12, 1.6833333333333333], [1.5974661E12, 1.6666666666666667], [1.59746388E12, 1.6666666666666667], [1.59745794E12, 1.6666666666666667], [1.59745944E12, 1.6666666666666667], [1.59746832E12, 1.65], [1.59747054E12, 1.65], [1.59746406E12, 1.6666666666666667], [1.59746628E12, 1.6666666666666667], [1.59745758E12, 1.6666666666666667], [1.59745776E12, 1.65], [1.59745962E12, 1.6833333333333333], [1.59746184E12, 1.6666666666666667], [1.5974685E12, 1.65], [1.59747072E12, 1.65], [1.597461E12, 1.65], [1.59746544E12, 1.65], [1.5974697E12, 1.6666666666666667], [1.59746322E12, 1.6666666666666667], [1.5974586E12, 1.6666666666666667], [1.59746526E12, 1.6666666666666667], [1.59746748E12, 1.6666666666666667], [1.59746118E12, 1.6666666666666667], [1.5974634E12, 1.65], [1.59746562E12, 1.6666666666666667], [1.59746988E12, 1.6666666666666667], [1.59745842E12, 1.6833333333333333], [1.59746766E12, 1.6666666666666667], [1.59746784E12, 1.6666666666666667], [1.59746358E12, 1.6666666666666667], [1.59747006E12, 1.6833333333333333], [1.5974658E12, 1.65], [1.59745806E12, 1.6666666666666667], [1.59745824E12, 1.6666666666666667], [1.59746802E12, 1.6666666666666667], [1.59747024E12, 1.6666666666666667], [1.59746136E12, 1.65], [1.59745788E12, 1.6666666666666667], [1.59746598E12, 1.6666666666666667], [1.59746376E12, 1.65], [1.5974682E12, 1.6666666666666667], [1.59746154E12, 1.6666666666666667], [1.59747042E12, 1.6666666666666667], [1.5974577E12, 1.6666666666666667], [1.59745968E12, 1.65], [1.5974595E12, 1.6666666666666667], [1.59746172E12, 1.6666666666666667], [1.59746394E12, 1.6666666666666667], [1.59746616E12, 1.6666666666666667], [1.59746838E12, 1.6666666666666667], [1.5974706E12, 1.6833333333333333], [1.59745752E12, 1.6666666666666667], [1.59745986E12, 1.65], [1.59746208E12, 1.6666666666666667], [1.59746856E12, 1.6833333333333333], [1.5974619E12, 1.6666666666666667], [1.59746634E12, 1.6666666666666667], [1.59747078E12, 1.6833333333333333], [1.59746412E12, 1.6666666666666667], [1.59746004E12, 1.6666666666666667], [1.59746448E12, 1.6666666666666667], [1.59747096E12, 1.6666666666666667], [1.59746874E12, 1.6833333333333333], [1.59746226E12, 1.6666666666666667], [1.5974643E12, 1.6666666666666667], [1.59746652E12, 1.6666666666666667], [1.59745734E12, 1.6833333333333333], [1.59746466E12, 1.6666666666666667], [1.59746688E12, 1.6666666666666667], [1.59746022E12, 1.65], [1.59746244E12, 1.6666666666666667], [1.59746892E12, 1.6666666666666667], [1.59747114E12, 1.6666666666666667], [1.59745938E12, 1.6666666666666667], [1.59745716E12, 1.6666666666666667], [1.5974667E12, 1.65]], "isOverall": false, "label": "Open Main Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59747138E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.59745698E12, "maxY": 1.6833333333333333, "series": [{"data": [[1.597458E12, 1.6666666666666667], [1.5974616E12, 1.65], [1.59746808E12, 1.6666666666666667], [1.59746142E12, 1.6833333333333333], [1.59746586E12, 1.6833333333333333], [1.5974703E12, 1.6666666666666667], [1.59746364E12, 1.6666666666666667], [1.59745956E12, 1.65], [1.597464E12, 1.6666666666666667], [1.59746826E12, 1.6666666666666667], [1.59747048E12, 1.6666666666666667], [1.59746178E12, 1.6666666666666667], [1.59746382E12, 1.6833333333333333], [1.59746604E12, 1.6666666666666667], [1.59745782E12, 1.6833333333333333], [1.59745974E12, 1.6833333333333333], [1.59746196E12, 1.6666666666666667], [1.59746418E12, 1.6666666666666667], [1.5974664E12, 1.6666666666666667], [1.59746844E12, 1.6833333333333333], [1.59747066E12, 1.6666666666666667], [1.59745764E12, 1.6666666666666667], [1.59746622E12, 1.6666666666666667], [1.59746862E12, 1.65], [1.59747084E12, 1.6666666666666667], [1.59746214E12, 1.6666666666666667], [1.59746658E12, 1.6666666666666667], [1.59746436E12, 1.6666666666666667], [1.59745746E12, 1.6666666666666667], [1.59745992E12, 1.6833333333333333], [1.5974688E12, 1.6666666666666667], [1.59747102E12, 1.6666666666666667], [1.5974571E12, 1.6666666666666667], [1.59745932E12, 1.6666666666666667], [1.59746676E12, 1.6833333333333333], [1.59746454E12, 1.6666666666666667], [1.59745728E12, 1.65], [1.59746898E12, 1.6666666666666667], [1.5974712E12, 1.6666666666666667], [1.5974601E12, 1.6666666666666667], [1.59746232E12, 1.6666666666666667], [1.59745914E12, 1.6666666666666667], [1.59746694E12, 1.6666666666666667], [1.59746472E12, 1.65], [1.59746916E12, 1.6666666666666667], [1.59746028E12, 1.6833333333333333], [1.59747138E12, 1.6], [1.5974625E12, 1.6666666666666667], [1.59745896E12, 1.6833333333333333], [1.59746064E12, 1.6833333333333333], [1.59746046E12, 1.65], [1.59746268E12, 1.6666666666666667], [1.5974649E12, 1.6666666666666667], [1.59746712E12, 1.6833333333333333], [1.59746934E12, 1.6666666666666667], [1.59746082E12, 1.6666666666666667], [1.59746304E12, 1.6666666666666667], [1.59746952E12, 1.6666666666666667], [1.59746286E12, 1.6666666666666667], [1.5974673E12, 1.6666666666666667], [1.59745878E12, 1.6666666666666667], [1.59746508E12, 1.6666666666666667], [1.5974574E12, 1.6666666666666667], [1.59746646E12, 1.6666666666666667], [1.5974598E12, 1.6666666666666667], [1.59746424E12, 1.6666666666666667], [1.59746868E12, 1.6666666666666667], [1.59746202E12, 1.6666666666666667], [1.5974709E12, 1.6666666666666667], [1.59745722E12, 1.6666666666666667], [1.59746016E12, 1.6666666666666667], [1.59746886E12, 1.6666666666666667], [1.59747108E12, 1.6666666666666667], [1.59745998E12, 1.6666666666666667], [1.5974622E12, 1.6666666666666667], [1.59746442E12, 1.6666666666666667], [1.59746664E12, 1.6666666666666667], [1.59745704E12, 1.6666666666666667], [1.59746256E12, 1.6666666666666667], [1.59746034E12, 1.6666666666666667], [1.59746904E12, 1.6666666666666667], [1.59746682E12, 1.6666666666666667], [1.59747126E12, 1.6666666666666667], [1.59746238E12, 1.6666666666666667], [1.59745926E12, 1.6666666666666667], [1.5974646E12, 1.6666666666666667], [1.59746052E12, 1.6666666666666667], [1.59746496E12, 1.6666666666666667], [1.59746922E12, 1.6666666666666667], [1.59746274E12, 1.6666666666666667], [1.59745908E12, 1.6666666666666667], [1.59746478E12, 1.6833333333333333], [1.597467E12, 1.6666666666666667], [1.5974607E12, 1.6666666666666667], [1.59746292E12, 1.6666666666666667], [1.59746514E12, 1.6666666666666667], [1.59746736E12, 1.6666666666666667], [1.5974694E12, 1.6666666666666667], [1.5974589E12, 1.65], [1.59746718E12, 1.6666666666666667], [1.59746958E12, 1.6666666666666667], [1.5974631E12, 1.6666666666666667], [1.59746754E12, 1.6666666666666667], [1.59745854E12, 1.6666666666666667], [1.59746532E12, 1.6666666666666667], [1.59745872E12, 1.6833333333333333], [1.59746088E12, 1.6666666666666667], [1.59746976E12, 1.6666666666666667], [1.59745836E12, 1.65], [1.5974655E12, 1.6833333333333333], [1.59746772E12, 1.6666666666666667], [1.59746106E12, 1.6666666666666667], [1.59746328E12, 1.65], [1.59746994E12, 1.6666666666666667], [1.59745818E12, 1.6666666666666667], [1.5974679E12, 1.6666666666666667], [1.59747012E12, 1.6666666666666667], [1.59746124E12, 1.65], [1.59746568E12, 1.6666666666666667], [1.59746346E12, 1.6833333333333333], [1.5974691E12, 1.6666666666666667], [1.59747132E12, 1.6666666666666667], [1.59746262E12, 1.6666666666666667], [1.59746706E12, 1.65], [1.59745902E12, 1.6666666666666667], [1.59746484E12, 1.6666666666666667], [1.59745698E12, 0.06666666666666667], [1.5974592E12, 1.6666666666666667], [1.59746928E12, 1.6666666666666667], [1.5974604E12, 1.6666666666666667], [1.59745884E12, 1.6666666666666667], [1.59746502E12, 1.6666666666666667], [1.59746724E12, 1.6666666666666667], [1.59746058E12, 1.6666666666666667], [1.5974628E12, 1.6666666666666667], [1.59746946E12, 1.6666666666666667], [1.59745866E12, 1.65], [1.59746742E12, 1.6666666666666667], [1.59746076E12, 1.6666666666666667], [1.5974652E12, 1.6666666666666667], [1.59746964E12, 1.6666666666666667], [1.59746298E12, 1.6666666666666667], [1.59745848E12, 1.6666666666666667], [1.59746112E12, 1.6833333333333333], [1.59746094E12, 1.6666666666666667], [1.59746316E12, 1.6666666666666667], [1.59746538E12, 1.6666666666666667], [1.5974676E12, 1.6666666666666667], [1.59746982E12, 1.6666666666666667], [1.5974613E12, 1.6833333333333333], [1.59746352E12, 1.6666666666666667], [1.59747E12, 1.65], [1.59746334E12, 1.6833333333333333], [1.59746778E12, 1.6666666666666667], [1.59746556E12, 1.6666666666666667], [1.5974583E12, 1.6666666666666667], [1.5974637E12, 1.6666666666666667], [1.59746592E12, 1.6666666666666667], [1.59746148E12, 1.6666666666666667], [1.59746796E12, 1.6666666666666667], [1.59747018E12, 1.6666666666666667], [1.59745812E12, 1.6666666666666667], [1.59746574E12, 1.6666666666666667], [1.59746814E12, 1.6666666666666667], [1.59747036E12, 1.6666666666666667], [1.59746166E12, 1.6833333333333333], [1.5974661E12, 1.6666666666666667], [1.59746388E12, 1.6666666666666667], [1.59745794E12, 1.6666666666666667], [1.59745944E12, 1.6666666666666667], [1.59746832E12, 1.65], [1.59747054E12, 1.65], [1.59746406E12, 1.6666666666666667], [1.59746628E12, 1.6666666666666667], [1.59745758E12, 1.6666666666666667], [1.59745776E12, 1.65], [1.59745962E12, 1.6833333333333333], [1.59746184E12, 1.6666666666666667], [1.5974685E12, 1.65], [1.59747072E12, 1.65], [1.597461E12, 1.65], [1.59746544E12, 1.65], [1.5974697E12, 1.6666666666666667], [1.59746322E12, 1.6666666666666667], [1.5974586E12, 1.6666666666666667], [1.59746526E12, 1.6666666666666667], [1.59746748E12, 1.6666666666666667], [1.59746118E12, 1.6666666666666667], [1.5974634E12, 1.65], [1.59746562E12, 1.6666666666666667], [1.59746988E12, 1.6666666666666667], [1.59745842E12, 1.6833333333333333], [1.59746766E12, 1.6666666666666667], [1.59746784E12, 1.6666666666666667], [1.59746358E12, 1.6666666666666667], [1.59747006E12, 1.6833333333333333], [1.5974658E12, 1.65], [1.59745806E12, 1.6666666666666667], [1.59745824E12, 1.6666666666666667], [1.59746802E12, 1.6666666666666667], [1.59747024E12, 1.6666666666666667], [1.59746136E12, 1.65], [1.59745788E12, 1.6666666666666667], [1.59746598E12, 1.6666666666666667], [1.59746376E12, 1.65], [1.5974682E12, 1.6666666666666667], [1.59746154E12, 1.6666666666666667], [1.59747042E12, 1.6666666666666667], [1.5974577E12, 1.6666666666666667], [1.59745968E12, 1.65], [1.5974595E12, 1.6666666666666667], [1.59746172E12, 1.6666666666666667], [1.59746394E12, 1.6666666666666667], [1.59746616E12, 1.6666666666666667], [1.59746838E12, 1.6666666666666667], [1.5974706E12, 1.6833333333333333], [1.59745752E12, 1.6666666666666667], [1.59745986E12, 1.65], [1.59746208E12, 1.6666666666666667], [1.59746856E12, 1.6833333333333333], [1.5974619E12, 1.6666666666666667], [1.59746634E12, 1.6666666666666667], [1.59747078E12, 1.6833333333333333], [1.59746412E12, 1.6666666666666667], [1.59746004E12, 1.6666666666666667], [1.59746448E12, 1.6666666666666667], [1.59747096E12, 1.6666666666666667], [1.59746874E12, 1.6833333333333333], [1.59746226E12, 1.6666666666666667], [1.5974643E12, 1.6666666666666667], [1.59746652E12, 1.6666666666666667], [1.59745734E12, 1.6833333333333333], [1.59746466E12, 1.6666666666666667], [1.59746688E12, 1.6666666666666667], [1.59746022E12, 1.65], [1.59746244E12, 1.6666666666666667], [1.59746892E12, 1.6666666666666667], [1.59747114E12, 1.6666666666666667], [1.59745938E12, 1.6666666666666667], [1.59745716E12, 1.6666666666666667], [1.5974667E12, 1.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59747138E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

