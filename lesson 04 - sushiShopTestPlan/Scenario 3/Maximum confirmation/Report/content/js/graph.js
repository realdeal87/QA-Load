/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 939394.0, "series": [{"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 4.0], [54.8, 4.0], [54.9, 4.0], [55.0, 4.0], [55.1, 4.0], [55.2, 4.0], [55.3, 4.0], [55.4, 4.0], [55.5, 4.0], [55.6, 4.0], [55.7, 4.0], [55.8, 4.0], [55.9, 4.0], [56.0, 4.0], [56.1, 4.0], [56.2, 4.0], [56.3, 4.0], [56.4, 4.0], [56.5, 4.0], [56.6, 4.0], [56.7, 4.0], [56.8, 4.0], [56.9, 4.0], [57.0, 4.0], [57.1, 4.0], [57.2, 4.0], [57.3, 4.0], [57.4, 4.0], [57.5, 4.0], [57.6, 4.0], [57.7, 4.0], [57.8, 4.0], [57.9, 4.0], [58.0, 4.0], [58.1, 4.0], [58.2, 4.0], [58.3, 4.0], [58.4, 4.0], [58.5, 4.0], [58.6, 4.0], [58.7, 4.0], [58.8, 4.0], [58.9, 4.0], [59.0, 4.0], [59.1, 4.0], [59.2, 4.0], [59.3, 4.0], [59.4, 4.0], [59.5, 4.0], [59.6, 4.0], [59.7, 4.0], [59.8, 4.0], [59.9, 4.0], [60.0, 4.0], [60.1, 4.0], [60.2, 4.0], [60.3, 4.0], [60.4, 4.0], [60.5, 4.0], [60.6, 4.0], [60.7, 4.0], [60.8, 4.0], [60.9, 4.0], [61.0, 4.0], [61.1, 4.0], [61.2, 4.0], [61.3, 4.0], [61.4, 4.0], [61.5, 4.0], [61.6, 4.0], [61.7, 4.0], [61.8, 4.0], [61.9, 4.0], [62.0, 4.0], [62.1, 4.0], [62.2, 4.0], [62.3, 4.0], [62.4, 4.0], [62.5, 4.0], [62.6, 4.0], [62.7, 4.0], [62.8, 4.0], [62.9, 4.0], [63.0, 4.0], [63.1, 4.0], [63.2, 4.0], [63.3, 4.0], [63.4, 4.0], [63.5, 4.0], [63.6, 4.0], [63.7, 4.0], [63.8, 4.0], [63.9, 4.0], [64.0, 4.0], [64.1, 4.0], [64.2, 4.0], [64.3, 4.0], [64.4, 4.0], [64.5, 4.0], [64.6, 4.0], [64.7, 4.0], [64.8, 4.0], [64.9, 4.0], [65.0, 4.0], [65.1, 4.0], [65.2, 4.0], [65.3, 4.0], [65.4, 4.0], [65.5, 4.0], [65.6, 4.0], [65.7, 5.0], [65.8, 5.0], [65.9, 5.0], [66.0, 5.0], [66.1, 5.0], [66.2, 5.0], [66.3, 5.0], [66.4, 5.0], [66.5, 5.0], [66.6, 5.0], [66.7, 5.0], [66.8, 5.0], [66.9, 5.0], [67.0, 5.0], [67.1, 5.0], [67.2, 5.0], [67.3, 5.0], [67.4, 5.0], [67.5, 5.0], [67.6, 5.0], [67.7, 5.0], [67.8, 5.0], [67.9, 5.0], [68.0, 5.0], [68.1, 5.0], [68.2, 5.0], [68.3, 5.0], [68.4, 5.0], [68.5, 5.0], [68.6, 5.0], [68.7, 5.0], [68.8, 5.0], [68.9, 5.0], [69.0, 5.0], [69.1, 5.0], [69.2, 5.0], [69.3, 5.0], [69.4, 5.0], [69.5, 5.0], [69.6, 5.0], [69.7, 5.0], [69.8, 5.0], [69.9, 5.0], [70.0, 5.0], [70.1, 5.0], [70.2, 5.0], [70.3, 5.0], [70.4, 5.0], [70.5, 5.0], [70.6, 5.0], [70.7, 5.0], [70.8, 5.0], [70.9, 5.0], [71.0, 6.0], [71.1, 6.0], [71.2, 6.0], [71.3, 6.0], [71.4, 6.0], [71.5, 6.0], [71.6, 6.0], [71.7, 6.0], [71.8, 6.0], [71.9, 6.0], [72.0, 6.0], [72.1, 6.0], [72.2, 6.0], [72.3, 6.0], [72.4, 6.0], [72.5, 6.0], [72.6, 6.0], [72.7, 6.0], [72.8, 6.0], [72.9, 6.0], [73.0, 6.0], [73.1, 6.0], [73.2, 6.0], [73.3, 6.0], [73.4, 6.0], [73.5, 6.0], [73.6, 6.0], [73.7, 6.0], [73.8, 6.0], [73.9, 6.0], [74.0, 6.0], [74.1, 7.0], [74.2, 7.0], [74.3, 7.0], [74.4, 7.0], [74.5, 7.0], [74.6, 7.0], [74.7, 7.0], [74.8, 7.0], [74.9, 7.0], [75.0, 7.0], [75.1, 7.0], [75.2, 7.0], [75.3, 7.0], [75.4, 7.0], [75.5, 7.0], [75.6, 7.0], [75.7, 7.0], [75.8, 7.0], [75.9, 7.0], [76.0, 7.0], [76.1, 7.0], [76.2, 7.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 8.0], [77.3, 8.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 10.0], [79.8, 10.0], [79.9, 10.0], [80.0, 10.0], [80.1, 10.0], [80.2, 10.0], [80.3, 10.0], [80.4, 10.0], [80.5, 10.0], [80.6, 10.0], [80.7, 10.0], [80.8, 10.0], [80.9, 10.0], [81.0, 10.0], [81.1, 11.0], [81.2, 11.0], [81.3, 11.0], [81.4, 11.0], [81.5, 11.0], [81.6, 11.0], [81.7, 11.0], [81.8, 11.0], [81.9, 11.0], [82.0, 11.0], [82.1, 11.0], [82.2, 11.0], [82.3, 12.0], [82.4, 12.0], [82.5, 12.0], [82.6, 12.0], [82.7, 12.0], [82.8, 12.0], [82.9, 12.0], [83.0, 12.0], [83.1, 12.0], [83.2, 12.0], [83.3, 12.0], [83.4, 13.0], [83.5, 13.0], [83.6, 13.0], [83.7, 13.0], [83.8, 13.0], [83.9, 13.0], [84.0, 13.0], [84.1, 13.0], [84.2, 13.0], [84.3, 13.0], [84.4, 14.0], [84.5, 14.0], [84.6, 14.0], [84.7, 14.0], [84.8, 14.0], [84.9, 14.0], [85.0, 14.0], [85.1, 14.0], [85.2, 14.0], [85.3, 15.0], [85.4, 15.0], [85.5, 15.0], [85.6, 15.0], [85.7, 15.0], [85.8, 15.0], [85.9, 15.0], [86.0, 15.0], [86.1, 16.0], [86.2, 16.0], [86.3, 16.0], [86.4, 16.0], [86.5, 16.0], [86.6, 16.0], [86.7, 16.0], [86.8, 16.0], [86.9, 17.0], [87.0, 17.0], [87.1, 17.0], [87.2, 17.0], [87.3, 17.0], [87.4, 17.0], [87.5, 17.0], [87.6, 18.0], [87.7, 18.0], [87.8, 18.0], [87.9, 18.0], [88.0, 18.0], [88.1, 18.0], [88.2, 19.0], [88.3, 19.0], [88.4, 19.0], [88.5, 19.0], [88.6, 19.0], [88.7, 19.0], [88.8, 20.0], [88.9, 20.0], [89.0, 20.0], [89.1, 20.0], [89.2, 20.0], [89.3, 20.0], [89.4, 21.0], [89.5, 21.0], [89.6, 21.0], [89.7, 21.0], [89.8, 21.0], [89.9, 22.0], [90.0, 22.0], [90.1, 22.0], [90.2, 22.0], [90.3, 22.0], [90.4, 23.0], [90.5, 23.0], [90.6, 23.0], [90.7, 23.0], [90.8, 23.0], [90.9, 24.0], [91.0, 24.0], [91.1, 24.0], [91.2, 24.0], [91.3, 24.0], [91.4, 25.0], [91.5, 25.0], [91.6, 25.0], [91.7, 25.0], [91.8, 26.0], [91.9, 26.0], [92.0, 26.0], [92.1, 26.0], [92.2, 27.0], [92.3, 27.0], [92.4, 27.0], [92.5, 27.0], [92.6, 28.0], [92.7, 28.0], [92.8, 28.0], [92.9, 29.0], [93.0, 29.0], [93.1, 29.0], [93.2, 29.0], [93.3, 30.0], [93.4, 30.0], [93.5, 30.0], [93.6, 30.0], [93.7, 31.0], [93.8, 31.0], [93.9, 31.0], [94.0, 32.0], [94.1, 32.0], [94.2, 32.0], [94.3, 33.0], [94.4, 33.0], [94.5, 34.0], [94.6, 34.0], [94.7, 34.0], [94.8, 35.0], [94.9, 35.0], [95.0, 36.0], [95.1, 36.0], [95.2, 36.0], [95.3, 37.0], [95.4, 37.0], [95.5, 38.0], [95.6, 38.0], [95.7, 39.0], [95.8, 39.0], [95.9, 40.0], [96.0, 41.0], [96.1, 41.0], [96.2, 42.0], [96.3, 42.0], [96.4, 43.0], [96.5, 43.0], [96.6, 44.0], [96.7, 45.0], [96.8, 45.0], [96.9, 46.0], [97.0, 47.0], [97.1, 48.0], [97.2, 49.0], [97.3, 49.0], [97.4, 50.0], [97.5, 51.0], [97.6, 52.0], [97.7, 54.0], [97.8, 55.0], [97.9, 56.0], [98.0, 57.0], [98.1, 59.0], [98.2, 60.0], [98.3, 61.0], [98.4, 62.0], [98.5, 63.0], [98.6, 65.0], [98.7, 67.0], [98.8, 69.0], [98.9, 71.0], [99.0, 73.0], [99.1, 76.0], [99.2, 78.0], [99.3, 82.0], [99.4, 87.0], [99.5, 92.0], [99.6, 96.0], [99.7, 102.0], [99.8, 111.0], [99.9, 122.0], [100.0, 935010.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 6.0], [40.5, 6.0], [40.6, 6.0], [40.7, 6.0], [40.8, 6.0], [40.9, 6.0], [41.0, 6.0], [41.1, 6.0], [41.2, 6.0], [41.3, 6.0], [41.4, 6.0], [41.5, 6.0], [41.6, 6.0], [41.7, 6.0], [41.8, 6.0], [41.9, 6.0], [42.0, 6.0], [42.1, 6.0], [42.2, 6.0], [42.3, 6.0], [42.4, 6.0], [42.5, 6.0], [42.6, 6.0], [42.7, 6.0], [42.8, 6.0], [42.9, 6.0], [43.0, 6.0], [43.1, 6.0], [43.2, 6.0], [43.3, 6.0], [43.4, 6.0], [43.5, 6.0], [43.6, 6.0], [43.7, 6.0], [43.8, 6.0], [43.9, 6.0], [44.0, 6.0], [44.1, 6.0], [44.2, 6.0], [44.3, 6.0], [44.4, 6.0], [44.5, 6.0], [44.6, 6.0], [44.7, 6.0], [44.8, 6.0], [44.9, 6.0], [45.0, 6.0], [45.1, 6.0], [45.2, 6.0], [45.3, 6.0], [45.4, 6.0], [45.5, 6.0], [45.6, 6.0], [45.7, 6.0], [45.8, 6.0], [45.9, 6.0], [46.0, 6.0], [46.1, 6.0], [46.2, 6.0], [46.3, 6.0], [46.4, 6.0], [46.5, 6.0], [46.6, 6.0], [46.7, 6.0], [46.8, 6.0], [46.9, 6.0], [47.0, 6.0], [47.1, 6.0], [47.2, 6.0], [47.3, 6.0], [47.4, 7.0], [47.5, 7.0], [47.6, 7.0], [47.7, 7.0], [47.8, 7.0], [47.9, 7.0], [48.0, 7.0], [48.1, 7.0], [48.2, 7.0], [48.3, 7.0], [48.4, 7.0], [48.5, 7.0], [48.6, 7.0], [48.7, 7.0], [48.8, 7.0], [48.9, 7.0], [49.0, 7.0], [49.1, 7.0], [49.2, 7.0], [49.3, 7.0], [49.4, 7.0], [49.5, 7.0], [49.6, 7.0], [49.7, 7.0], [49.8, 7.0], [49.9, 7.0], [50.0, 7.0], [50.1, 7.0], [50.2, 7.0], [50.3, 7.0], [50.4, 7.0], [50.5, 7.0], [50.6, 7.0], [50.7, 7.0], [50.8, 7.0], [50.9, 7.0], [51.0, 7.0], [51.1, 7.0], [51.2, 7.0], [51.3, 7.0], [51.4, 7.0], [51.5, 7.0], [51.6, 7.0], [51.7, 7.0], [51.8, 7.0], [51.9, 7.0], [52.0, 7.0], [52.1, 7.0], [52.2, 8.0], [52.3, 8.0], [52.4, 8.0], [52.5, 8.0], [52.6, 8.0], [52.7, 8.0], [52.8, 8.0], [52.9, 8.0], [53.0, 8.0], [53.1, 8.0], [53.2, 8.0], [53.3, 8.0], [53.4, 8.0], [53.5, 8.0], [53.6, 8.0], [53.7, 8.0], [53.8, 8.0], [53.9, 8.0], [54.0, 8.0], [54.1, 8.0], [54.2, 8.0], [54.3, 8.0], [54.4, 8.0], [54.5, 8.0], [54.6, 8.0], [54.7, 8.0], [54.8, 8.0], [54.9, 8.0], [55.0, 8.0], [55.1, 8.0], [55.2, 8.0], [55.3, 8.0], [55.4, 8.0], [55.5, 8.0], [55.6, 8.0], [55.7, 9.0], [55.8, 9.0], [55.9, 9.0], [56.0, 9.0], [56.1, 9.0], [56.2, 9.0], [56.3, 9.0], [56.4, 9.0], [56.5, 9.0], [56.6, 9.0], [56.7, 9.0], [56.8, 9.0], [56.9, 9.0], [57.0, 9.0], [57.1, 9.0], [57.2, 9.0], [57.3, 9.0], [57.4, 9.0], [57.5, 9.0], [57.6, 9.0], [57.7, 9.0], [57.8, 9.0], [57.9, 9.0], [58.0, 9.0], [58.1, 9.0], [58.2, 9.0], [58.3, 10.0], [58.4, 10.0], [58.5, 10.0], [58.6, 10.0], [58.7, 10.0], [58.8, 10.0], [58.9, 10.0], [59.0, 10.0], [59.1, 10.0], [59.2, 10.0], [59.3, 10.0], [59.4, 10.0], [59.5, 10.0], [59.6, 10.0], [59.7, 10.0], [59.8, 10.0], [59.9, 10.0], [60.0, 10.0], [60.1, 10.0], [60.2, 10.0], [60.3, 10.0], [60.4, 10.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 11.0], [61.5, 11.0], [61.6, 11.0], [61.7, 11.0], [61.8, 11.0], [61.9, 11.0], [62.0, 11.0], [62.1, 11.0], [62.2, 11.0], [62.3, 12.0], [62.4, 12.0], [62.5, 12.0], [62.6, 12.0], [62.7, 12.0], [62.8, 12.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 13.0], [63.9, 13.0], [64.0, 13.0], [64.1, 13.0], [64.2, 13.0], [64.3, 13.0], [64.4, 13.0], [64.5, 13.0], [64.6, 13.0], [64.7, 13.0], [64.8, 13.0], [64.9, 13.0], [65.0, 13.0], [65.1, 13.0], [65.2, 14.0], [65.3, 14.0], [65.4, 14.0], [65.5, 14.0], [65.6, 14.0], [65.7, 14.0], [65.8, 14.0], [65.9, 14.0], [66.0, 14.0], [66.1, 14.0], [66.2, 14.0], [66.3, 14.0], [66.4, 15.0], [66.5, 15.0], [66.6, 15.0], [66.7, 15.0], [66.8, 15.0], [66.9, 15.0], [67.0, 15.0], [67.1, 15.0], [67.2, 15.0], [67.3, 15.0], [67.4, 15.0], [67.5, 16.0], [67.6, 16.0], [67.7, 16.0], [67.8, 16.0], [67.9, 16.0], [68.0, 16.0], [68.1, 16.0], [68.2, 16.0], [68.3, 16.0], [68.4, 17.0], [68.5, 17.0], [68.6, 17.0], [68.7, 17.0], [68.8, 17.0], [68.9, 17.0], [69.0, 17.0], [69.1, 17.0], [69.2, 17.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 18.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 18.0], [70.1, 19.0], [70.2, 19.0], [70.3, 19.0], [70.4, 19.0], [70.5, 19.0], [70.6, 19.0], [70.7, 19.0], [70.8, 20.0], [70.9, 20.0], [71.0, 20.0], [71.1, 20.0], [71.2, 20.0], [71.3, 20.0], [71.4, 20.0], [71.5, 21.0], [71.6, 21.0], [71.7, 21.0], [71.8, 21.0], [71.9, 21.0], [72.0, 21.0], [72.1, 22.0], [72.2, 22.0], [72.3, 22.0], [72.4, 22.0], [72.5, 22.0], [72.6, 22.0], [72.7, 23.0], [72.8, 23.0], [72.9, 23.0], [73.0, 23.0], [73.1, 23.0], [73.2, 23.0], [73.3, 24.0], [73.4, 24.0], [73.5, 24.0], [73.6, 24.0], [73.7, 24.0], [73.8, 24.0], [73.9, 25.0], [74.0, 25.0], [74.1, 25.0], [74.2, 25.0], [74.3, 25.0], [74.4, 26.0], [74.5, 26.0], [74.6, 26.0], [74.7, 26.0], [74.8, 26.0], [74.9, 27.0], [75.0, 27.0], [75.1, 27.0], [75.2, 27.0], [75.3, 28.0], [75.4, 28.0], [75.5, 28.0], [75.6, 28.0], [75.7, 28.0], [75.8, 29.0], [75.9, 29.0], [76.0, 29.0], [76.1, 29.0], [76.2, 30.0], [76.3, 30.0], [76.4, 30.0], [76.5, 30.0], [76.6, 31.0], [76.7, 31.0], [76.8, 31.0], [76.9, 31.0], [77.0, 32.0], [77.1, 32.0], [77.2, 32.0], [77.3, 32.0], [77.4, 33.0], [77.5, 33.0], [77.6, 33.0], [77.7, 33.0], [77.8, 34.0], [77.9, 34.0], [78.0, 34.0], [78.1, 34.0], [78.2, 35.0], [78.3, 35.0], [78.4, 35.0], [78.5, 36.0], [78.6, 36.0], [78.7, 36.0], [78.8, 36.0], [78.9, 37.0], [79.0, 37.0], [79.1, 37.0], [79.2, 37.0], [79.3, 38.0], [79.4, 38.0], [79.5, 38.0], [79.6, 39.0], [79.7, 39.0], [79.8, 39.0], [79.9, 39.0], [80.0, 40.0], [80.1, 40.0], [80.2, 40.0], [80.3, 41.0], [80.4, 41.0], [80.5, 41.0], [80.6, 42.0], [80.7, 42.0], [80.8, 42.0], [80.9, 42.0], [81.0, 43.0], [81.1, 43.0], [81.2, 43.0], [81.3, 44.0], [81.4, 44.0], [81.5, 44.0], [81.6, 45.0], [81.7, 45.0], [81.8, 45.0], [81.9, 46.0], [82.0, 46.0], [82.1, 46.0], [82.2, 47.0], [82.3, 47.0], [82.4, 47.0], [82.5, 48.0], [82.6, 48.0], [82.7, 48.0], [82.8, 49.0], [82.9, 49.0], [83.0, 50.0], [83.1, 50.0], [83.2, 50.0], [83.3, 51.0], [83.4, 51.0], [83.5, 51.0], [83.6, 52.0], [83.7, 52.0], [83.8, 53.0], [83.9, 53.0], [84.0, 53.0], [84.1, 54.0], [84.2, 54.0], [84.3, 54.0], [84.4, 55.0], [84.5, 55.0], [84.6, 56.0], [84.7, 56.0], [84.8, 57.0], [84.9, 57.0], [85.0, 57.0], [85.1, 58.0], [85.2, 58.0], [85.3, 58.0], [85.4, 59.0], [85.5, 59.0], [85.6, 60.0], [85.7, 60.0], [85.8, 61.0], [85.9, 61.0], [86.0, 61.0], [86.1, 62.0], [86.2, 62.0], [86.3, 63.0], [86.4, 63.0], [86.5, 63.0], [86.6, 64.0], [86.7, 64.0], [86.8, 65.0], [86.9, 65.0], [87.0, 66.0], [87.1, 66.0], [87.2, 66.0], [87.3, 67.0], [87.4, 67.0], [87.5, 68.0], [87.6, 68.0], [87.7, 69.0], [87.8, 69.0], [87.9, 70.0], [88.0, 70.0], [88.1, 71.0], [88.2, 71.0], [88.3, 72.0], [88.4, 72.0], [88.5, 72.0], [88.6, 73.0], [88.7, 73.0], [88.8, 74.0], [88.9, 74.0], [89.0, 75.0], [89.1, 75.0], [89.2, 76.0], [89.3, 76.0], [89.4, 77.0], [89.5, 77.0], [89.6, 78.0], [89.7, 78.0], [89.8, 79.0], [89.9, 79.0], [90.0, 80.0], [90.1, 80.0], [90.2, 81.0], [90.3, 81.0], [90.4, 82.0], [90.5, 82.0], [90.6, 83.0], [90.7, 83.0], [90.8, 84.0], [90.9, 85.0], [91.0, 85.0], [91.1, 86.0], [91.2, 86.0], [91.3, 87.0], [91.4, 87.0], [91.5, 88.0], [91.6, 89.0], [91.7, 89.0], [91.8, 90.0], [91.9, 91.0], [92.0, 91.0], [92.1, 92.0], [92.2, 92.0], [92.3, 93.0], [92.4, 94.0], [92.5, 94.0], [92.6, 95.0], [92.7, 96.0], [92.8, 96.0], [92.9, 97.0], [93.0, 98.0], [93.1, 99.0], [93.2, 99.0], [93.3, 100.0], [93.4, 101.0], [93.5, 101.0], [93.6, 102.0], [93.7, 103.0], [93.8, 103.0], [93.9, 104.0], [94.0, 105.0], [94.1, 106.0], [94.2, 106.0], [94.3, 107.0], [94.4, 108.0], [94.5, 109.0], [94.6, 110.0], [94.7, 110.0], [94.8, 111.0], [94.9, 112.0], [95.0, 113.0], [95.1, 114.0], [95.2, 115.0], [95.3, 116.0], [95.4, 117.0], [95.5, 118.0], [95.6, 118.0], [95.7, 120.0], [95.8, 120.0], [95.9, 121.0], [96.0, 122.0], [96.1, 123.0], [96.2, 124.0], [96.3, 125.0], [96.4, 126.0], [96.5, 128.0], [96.6, 129.0], [96.7, 130.0], [96.8, 131.0], [96.9, 133.0], [97.0, 134.0], [97.1, 135.0], [97.2, 137.0], [97.3, 138.0], [97.4, 140.0], [97.5, 141.0], [97.6, 143.0], [97.7, 145.0], [97.8, 146.0], [97.9, 148.0], [98.0, 150.0], [98.1, 152.0], [98.2, 154.0], [98.3, 155.0], [98.4, 157.0], [98.5, 159.0], [98.6, 161.0], [98.7, 163.0], [98.8, 165.0], [98.9, 168.0], [99.0, 171.0], [99.1, 174.0], [99.2, 178.0], [99.3, 182.0], [99.4, 187.0], [99.5, 192.0], [99.6, 198.0], [99.7, 209.0], [99.8, 219.0], [99.9, 251.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 426806.0, "series": [{"data": [[0.0, 426806.0], [200.0, 32.0], [100.0, 1353.0], [13100.0, 1.0], [935000.0, 1.0], [1000.0, 15.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[0.0, 399177.0], [300.0, 31.0], [939300.0, 1.0], [937900.0, 1.0], [100.0, 27347.0], [200.0, 1632.0], [939000.0, 1.0], [1000.0, 2.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 939300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 856378.0, "series": [{"data": [[0.0, 856378.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 17.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 63.25767918088734, "minX": 1.59843024E12, "maxY": 240.0, "series": [{"data": [[1.59843048E12, 240.0], [1.5984321E12, 240.0], [1.59843348E12, 240.0], [1.5984315E12, 240.0], [1.59843168E12, 240.0], [1.5984339E12, 201.59697885196374], [1.59843108E12, 240.0], [1.59843288E12, 240.0], [1.59843192E12, 240.0], [1.59843366E12, 240.0], [1.59843132E12, 240.0], [1.59843264E12, 240.0], [1.5984309E12, 240.0], [1.5984303E12, 230.5273739784478], [1.59843306E12, 240.0], [1.59843144E12, 240.0], [1.59843252E12, 240.0], [1.59843084E12, 240.0], [1.59843246E12, 240.0], [1.59843312E12, 240.0], [1.59843294E12, 240.0], [1.59843042E12, 240.0], [1.59843204E12, 240.0], [1.59843354E12, 240.0], [1.5984327E12, 240.0], [1.59843066E12, 240.0], [1.59843228E12, 240.0], [1.5984333E12, 240.0], [1.59843024E12, 109.97701149425271], [1.59843186E12, 240.0], [1.59843372E12, 240.0], [1.59843126E12, 240.0], [1.5984324E12, 240.0], [1.59843318E12, 240.0], [1.5984318E12, 240.0], [1.59843378E12, 240.0], [1.59843138E12, 240.0], [1.59843258E12, 240.0], [1.59843078E12, 240.0], [1.59843162E12, 240.0], [1.59843396E12, 63.25767918088734], [1.59843102E12, 240.0], [1.5984312E12, 240.0], [1.59843276E12, 240.0], [1.5984306E12, 240.0], [1.59843222E12, 240.0], [1.59843336E12, 240.0], [1.59843114E12, 240.0], [1.59843282E12, 240.0], [1.59843054E12, 240.0], [1.59843072E12, 240.0], [1.59843234E12, 240.0], [1.59843324E12, 240.0], [1.59843174E12, 240.0], [1.59843384E12, 240.0], [1.59843096E12, 240.0], [1.598433E12, 240.0], [1.59843036E12, 240.0], [1.59843198E12, 240.0], [1.5984336E12, 240.0], [1.59843216E12, 240.0], [1.59843342E12, 240.0], [1.59843156E12, 240.0]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group [Scenario 3 Maximum confirmation]", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59843396E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.9565217391304346, "minX": 1.0, "maxY": 32.17945016513069, "series": [{"data": [[2.0, 3.0], [3.0, 3.0], [4.0, 3.0], [5.0, 3.0], [6.0, 5.0], [7.0, 4.0], [8.0, 3.0], [9.0, 4.0], [10.0, 3.0], [11.0, 4.0], [12.0, 3.8], [13.0, 5.0], [14.0, 3.0], [15.0, 2.5], [16.0, 3.5], [17.0, 5.0], [18.0, 3.0], [19.0, 4.5], [20.0, 3.142857142857143], [21.0, 2.0], [22.0, 4.833333333333334], [23.0, 3.5], [24.0, 4.333333333333333], [25.0, 2.3333333333333335], [26.0, 3.75], [27.0, 3.3333333333333335], [28.0, 3.3333333333333335], [29.0, 5.6], [30.0, 3.25], [31.0, 3.2857142857142856], [32.0, 3.6249999999999996], [33.0, 2.75], [34.0, 2.6666666666666665], [35.0, 3.8], [36.0, 2.5], [37.0, 3.4], [38.0, 2.25], [39.0, 2.818181818181818], [40.0, 3.0], [41.0, 3.5714285714285716], [42.0, 4.142857142857142], [43.0, 2.5], [44.0, 2.153846153846154], [45.0, 2.909090909090909], [46.0, 2.7142857142857144], [47.0, 4.444444444444445], [48.0, 27.222222222222218], [49.0, 3.3333333333333335], [50.0, 2.5999999999999996], [51.0, 3.3], [52.0, 5.538461538461539], [53.0, 2.8666666666666667], [54.0, 2.9999999999999996], [55.0, 4.125], [56.0, 3.0], [57.0, 3.285714285714286], [58.0, 3.0999999999999996], [59.0, 3.833333333333333], [60.0, 3.3076923076923075], [61.0, 3.0000000000000004], [62.0, 3.6999999999999997], [63.0, 2.7777777777777777], [64.0, 2.9999999999999996], [65.0, 3.208333333333334], [66.0, 4.916666666666667], [67.0, 2.8571428571428568], [68.0, 3.130434782608695], [69.0, 2.928571428571429], [70.0, 3.928571428571428], [71.0, 2.31578947368421], [72.0, 3.111111111111111], [73.0, 4.2666666666666675], [74.0, 2.3181818181818183], [75.0, 3.0833333333333335], [76.0, 3.8888888888888893], [77.0, 3.818181818181818], [78.0, 2.8], [79.0, 2.6], [80.0, 2.8571428571428568], [81.0, 4.973684210526314], [82.0, 3.466666666666667], [83.0, 2.769230769230769], [84.0, 3.533333333333333], [85.0, 3.090909090909091], [86.0, 3.0961538461538463], [87.0, 4.272727272727273], [88.0, 3.2666666666666666], [89.0, 2.944444444444444], [90.0, 3.2142857142857144], [91.0, 2.842105263157895], [92.0, 4.235294117647059], [93.0, 3.35], [94.0, 5.03125], [95.0, 2.6842105263157894], [96.0, 2.9999999999999996], [97.0, 3.05], [98.0, 3.272727272727273], [99.0, 3.666666666666667], [100.0, 3.4444444444444446], [101.0, 2.826086956521739], [102.0, 3.8571428571428568], [103.0, 3.7142857142857135], [104.0, 3.4285714285714293], [105.0, 6.9393939393939394], [106.0, 3.571428571428571], [107.0, 3.0], [108.0, 4.285714285714286], [109.0, 3.4615384615384617], [110.0, 2.9545454545454546], [111.0, 3.140350877192982], [112.0, 2.7647058823529416], [113.0, 2.9444444444444446], [114.0, 3.3636363636363633], [115.0, 2.851851851851852], [116.0, 3.3548387096774195], [117.0, 4.517241379310345], [118.0, 4.029411764705881], [119.0, 2.891891891891892], [120.0, 3.2173913043478257], [121.0, 3.095238095238095], [122.0, 2.923076923076923], [123.0, 3.125], [124.0, 2.657894736842106], [125.0, 2.500000000000001], [126.0, 2.7931034482758617], [127.0, 2.5], [128.0, 2.2758620689655173], [129.0, 2.538461538461538], [130.0, 2.5833333333333335], [131.0, 4.232142857142857], [132.0, 6.083333333333334], [133.0, 2.9090909090909087], [134.0, 2.6086956521739135], [135.0, 3.1363636363636362], [136.0, 3.75], [137.0, 3.3939393939393945], [138.0, 2.9814814814814823], [139.0, 3.3888888888888884], [140.0, 3.3255813953488373], [141.0, 3.387096774193549], [142.0, 3.1666666666666665], [143.0, 3.8055555555555562], [144.0, 3.176470588235293], [145.0, 2.6470588235294117], [146.0, 3.078125], [147.0, 3.25925925925926], [148.0, 3.543859649122807], [149.0, 4.083333333333333], [150.0, 3.2], [151.0, 9.285714285714286], [152.0, 5.585365853658538], [153.0, 3.3666666666666663], [154.0, 2.7530864197530867], [155.0, 3.4242424242424248], [156.0, 5.806451612903226], [157.0, 3.333333333333334], [158.0, 3.1999999999999997], [159.0, 3.6071428571428568], [160.0, 2.8157894736842106], [161.0, 2.8153846153846156], [162.0, 2.903846153846155], [163.0, 2.8510638297872344], [164.0, 2.7352941176470584], [165.0, 4.163265306122448], [166.0, 2.754716981132076], [167.0, 4.7272727272727275], [168.0, 2.6470588235294117], [169.0, 2.7619047619047623], [170.0, 4.037037037037037], [171.0, 3.064516129032259], [172.0, 3.1212121212121215], [173.0, 2.7037037037037037], [174.0, 3.043478260869565], [175.0, 2.7704918032786883], [176.0, 16.42105263157894], [177.0, 5.6999999999999975], [178.0, 2.6410256410256405], [179.0, 2.448275862068966], [180.0, 3.0238095238095246], [181.0, 2.6296296296296293], [182.0, 3.213114754098361], [183.0, 3.681159420289855], [184.0, 2.8421052631578947], [185.0, 2.55], [186.0, 2.78], [187.0, 3.3958333333333335], [188.0, 2.6585365853658534], [189.0, 2.8529411764705874], [190.0, 3.600000000000001], [191.0, 2.785714285714286], [192.0, 2.558139534883722], [193.0, 4.086956521739132], [194.0, 3.114285714285714], [195.0, 3.565217391304348], [196.0, 2.93939393939394], [197.0, 2.695652173913043], [198.0, 2.508771929824561], [199.0, 3.7894736842105257], [200.0, 2.628571428571429], [201.0, 2.6153846153846145], [202.0, 1.9565217391304346], [203.0, 2.290322580645161], [204.0, 3.382352941176471], [205.0, 3.7317073170731687], [206.0, 2.4888888888888885], [207.0, 2.78], [208.0, 3.4666666666666663], [209.0, 3.1944444444444446], [210.0, 3.02970297029703], [211.0, 2.9687500000000004], [212.0, 3.4520547945205484], [213.0, 2.6799999999999997], [214.0, 2.7173913043478257], [215.0, 3.6206896551724133], [216.0, 2.9999999999999996], [217.0, 3.7560975609756104], [218.0, 2.8333333333333326], [219.0, 2.8918918918918926], [220.0, 3.228070175438596], [221.0, 3.244444444444445], [222.0, 3.7313432835820888], [223.0, 2.4565217391304346], [224.0, 2.9767441860465116], [225.0, 2.2980769230769225], [226.0, 4.999999999999999], [227.0, 4.610169491525423], [228.0, 3.122448979591837], [229.0, 2.43661971830986], [230.0, 2.8113207547169816], [231.0, 3.0810810810810816], [232.0, 2.75], [233.0, 4.862068965517243], [234.0, 3.0000000000000004], [235.0, 3.0116279069767438], [236.0, 2.6349206349206358], [237.0, 2.6562499999999996], [238.0, 2.6458333333333326], [239.0, 2.9696969696969693], [240.0, 10.786797089234213], [1.0, 28.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[238.7256356723811, 10.664270634831741]], "isOverall": false, "label": "Open Main Page-Aggregated", "isController": false}, {"data": [[2.0, 5.0], [3.0, 6.0], [4.0, 6.0], [5.0, 7.0], [6.0, 9.0], [7.0, 5.0], [8.0, 5.0], [9.0, 8.0], [10.0, 7.0], [11.0, 5.0], [12.0, 7.0], [13.0, 8.75], [14.0, 5.5], [15.0, 14.0], [16.0, 6.5], [17.0, 7.0], [18.0, 6.0], [19.0, 5.5], [20.0, 6.5], [21.0, 12.333333333333334], [22.0, 10.6], [23.0, 4.0], [24.0, 5.666666666666667], [25.0, 6.333333333333333], [26.0, 7.75], [27.0, 8.333333333333334], [28.0, 6.0], [29.0, 12.666666666666666], [30.0, 6.6], [31.0, 6.125], [32.0, 9.5], [33.0, 7.5], [34.0, 6.6], [35.0, 6.166666666666667], [36.0, 5.8999999999999995], [37.0, 5.4], [38.0, 6.000000000000001], [39.0, 6.777777777777778], [40.0, 6.545454545454546], [41.0, 6.0], [42.0, 6.5], [43.0, 7.666666666666667], [44.0, 5.352941176470588], [45.0, 5.111111111111111], [46.0, 5.000000000000001], [47.0, 10.625000000000002], [48.0, 9.875], [49.0, 5.166666666666667], [50.0, 9.0], [51.0, 5.142857142857143], [52.0, 7.647058823529412], [53.0, 4.857142857142857], [54.0, 4.923076923076923], [55.0, 6.8], [56.0, 3.888888888888889], [57.0, 5.181818181818182], [58.0, 5.592592592592592], [59.0, 6.363636363636364], [60.0, 5.4], [61.0, 8.90909090909091], [62.0, 6.75], [63.0, 6.555555555555555], [64.0, 4.363636363636364], [65.0, 5.600000000000001], [66.0, 13.727272727272725], [67.0, 4.928571428571428], [68.0, 6.0], [69.0, 5.5625], [70.0, 5.454545454545455], [71.0, 5.739130434782609], [72.0, 5.0], [73.0, 8.263157894736842], [74.0, 4.111111111111111], [75.0, 6.730769230769231], [76.0, 6.333333333333333], [77.0, 7.666666666666666], [78.0, 4.545454545454545], [79.0, 5.296296296296297], [80.0, 5.874999999999999], [81.0, 8.085714285714285], [82.0, 12.944444444444448], [83.0, 5.363636363636363], [84.0, 6.999999999999999], [85.0, 4.6], [86.0, 6.5102040816326525], [87.0, 7.2727272727272725], [88.0, 7.888888888888888], [89.0, 5.388888888888888], [90.0, 7.357142857142858], [91.0, 5.625], [92.0, 9.421052631578947], [93.0, 6.794871794871795], [94.0, 11.82857142857143], [95.0, 5.11764705882353], [96.0, 7.0], [97.0, 5.6818181818181825], [98.0, 6.65], [99.0, 7.333333333333335], [100.0, 9.105263157894738], [101.0, 5.363636363636364], [102.0, 8.07142857142857], [103.0, 4.714285714285714], [104.0, 6.416666666666666], [105.0, 18.924999999999997], [106.0, 7.217391304347826], [107.0, 6.157894736842105], [108.0, 5.592592592592593], [109.0, 6.639999999999999], [110.0, 6.681818181818182], [111.0, 7.203389830508474], [112.0, 5.235294117647059], [113.0, 4.111111111111111], [114.0, 9.666666666666666], [115.0, 4.923076923076924], [116.0, 6.3999999999999995], [117.0, 4.428571428571429], [118.0, 12.619047619047617], [119.0, 4.918918918918918], [120.0, 5.458333333333333], [121.0, 3.7857142857142856], [122.0, 7.24242424242424], [123.0, 9.142857142857144], [124.0, 5.552631578947369], [125.0, 5.857142857142857], [126.0, 6.958333333333335], [127.0, 4.205882352941177], [128.0, 5.944444444444445], [129.0, 4.880000000000001], [130.0, 5.85], [131.0, 11.750000000000002], [132.0, 16.956521739130434], [133.0, 5.583333333333334], [134.0, 5.749999999999999], [135.0, 5.9], [136.0, 7.874999999999998], [137.0, 5.735294117647059], [138.0, 5.418181818181819], [139.0, 6.368421052631579], [140.0, 8.80952380952381], [141.0, 5.6896551724137945], [142.0, 5.380952380952381], [143.0, 6.2], [144.0, 6.333333333333332], [145.0, 6.750000000000001], [146.0, 4.84375], [147.0, 4.9230769230769225], [148.0, 5.965517241379311], [149.0, 5.484848484848485], [150.0, 6.0769230769230775], [151.0, 11.5], [152.0, 7.688888888888888], [153.0, 6.5], [154.0, 5.597560975609756], [155.0, 6.199999999999999], [156.0, 12.62857142857143], [157.0, 5.625000000000001], [158.0, 5.5], [159.0, 6.0], [160.0, 8.229166666666666], [161.0, 7.500000000000003], [162.0, 5.579999999999999], [163.0, 6.282608695652176], [164.0, 5.789473684210528], [165.0, 9.543478260869565], [166.0, 6.3999999999999995], [167.0, 6.3999999999999995], [168.0, 8.736111111111114], [169.0, 6.260869565217391], [170.0, 9.869565217391306], [171.0, 7.2571428571428545], [172.0, 5.685714285714288], [173.0, 4.602409638554217], [174.0, 6.157894736842105], [175.0, 6.718750000000002], [176.0, 27.538461538461537], [177.0, 9.646153846153842], [178.0, 4.102564102564103], [179.0, 4.84], [180.0, 5.422222222222225], [181.0, 4.296296296296296], [182.0, 7.790322580645163], [183.0, 10.214285714285717], [184.0, 5.0441176470588225], [185.0, 5.714285714285714], [186.0, 5.183673469387754], [187.0, 6.707317073170732], [188.0, 6.062500000000001], [189.0, 8.199999999999998], [190.0, 6.648148148148151], [191.0, 7.052631578947368], [192.0, 4.162162162162163], [193.0, 7.285714285714286], [194.0, 5.8571428571428585], [195.0, 6.7500000000000036], [196.0, 11.242424242424246], [197.0, 4.266666666666667], [198.0, 4.999999999999998], [199.0, 7.229508196721311], [200.0, 4.734375000000001], [201.0, 6.2278481012658204], [202.0, 4.480769230769233], [203.0, 6.483870967741935], [204.0, 8.376811594202895], [205.0, 9.146341463414636], [206.0, 6.128205128205129], [207.0, 7.038461538461539], [208.0, 5.404761904761904], [209.0, 7.583333333333333], [210.0, 6.121495327102805], [211.0, 8.125], [212.0, 8.314285714285715], [213.0, 6.183673469387754], [214.0, 5.7555555555555555], [215.0, 9.806451612903224], [216.0, 4.447368421052632], [217.0, 7.378378378378381], [218.0, 7.571428571428569], [219.0, 4.702702702702703], [220.0, 8.964285714285717], [221.0, 5.909090909090909], [222.0, 9.8169014084507], [223.0, 4.954545454545455], [224.0, 5.538461538461537], [225.0, 5.63063063063063], [226.0, 16.105263157894736], [227.0, 21.534482758620676], [228.0, 5.681818181818182], [229.0, 5.027777777777778], [230.0, 5.962264150943397], [231.0, 4.617647058823532], [232.0, 4.4576271186440675], [233.0, 8.276923076923076], [234.0, 7.470588235294117], [235.0, 7.879518072289159], [236.0, 4.96969696969697], [237.0, 7.355932203389832], [238.0, 5.878787878787878], [239.0, 7.575757575757577], [240.0, 32.17945016513069], [1.0, 24.0]], "isOverall": false, "label": "Make an order", "isController": false}, {"data": [[238.72650119572668, 31.76712549510506]], "isOverall": false, "label": "Make an order-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 240.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.59843024E12, "maxY": 292590.06666666665, "series": [{"data": [[1.59843048E12, 289481.2], [1.5984321E12, 285377.86666666664], [1.59843348E12, 267754.4166666667], [1.5984315E12, 286265.2166666667], [1.59843168E12, 283292.1666666667], [1.5984339E12, 198914.0], [1.59843108E12, 286954.4666666667], [1.59843288E12, 281102.5], [1.59843192E12, 283328.5833333333], [1.59843366E12, 271440.55], [1.59843132E12, 284576.5333333333], [1.59843264E12, 279001.38333333336], [1.5984309E12, 290888.6], [1.5984303E12, 276998.05], [1.59843306E12, 286421.8333333333], [1.59843144E12, 281251.0], [1.59843252E12, 285212.2166666667], [1.59843084E12, 284049.7833333333], [1.59843246E12, 287209.2166666667], [1.59843312E12, 283509.8], [1.59843294E12, 285772.65], [1.59843042E12, 288543.13333333336], [1.59843204E12, 284937.13333333336], [1.59843354E12, 268389.6], [1.5984327E12, 279957.1], [1.59843066E12, 284003.8333333333], [1.59843228E12, 292590.06666666665], [1.5984333E12, 268315.35], [1.59843024E12, 73190.81666666667], [1.59843186E12, 282739.35], [1.59843372E12, 267811.01666666666], [1.59843126E12, 281972.2], [1.5984324E12, 281210.93333333335], [1.59843318E12, 270389.73333333334], [1.5984318E12, 282567.31666666665], [1.59843378E12, 264892.0333333333], [1.59843138E12, 286625.81666666665], [1.59843258E12, 281663.13333333336], [1.59843078E12, 286003.51666666666], [1.59843162E12, 283462.7833333333], [1.59843396E12, 11736.283333333333], [1.59843102E12, 283669.3], [1.5984312E12, 279888.73333333334], [1.59843276E12, 279407.93333333335], [1.5984306E12, 286374.7833333333], [1.59843222E12, 287341.13333333336], [1.59843336E12, 266987.26666666666], [1.59843114E12, 287306.95], [1.59843282E12, 279287.73333333334], [1.59843054E12, 287718.26666666666], [1.59843072E12, 284632.01666666666], [1.59843234E12, 286562.61666666664], [1.59843324E12, 273386.0], [1.59843174E12, 282855.9], [1.59843384E12, 263433.1], [1.59843096E12, 289850.5833333333], [1.598433E12, 282859.5833333333], [1.59843036E12, 288789.4166666667], [1.59843198E12, 283987.3], [1.5984336E12, 266901.25], [1.59843216E12, 284857.0], [1.59843342E12, 266861.18333333335], [1.59843156E12, 282965.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.59843048E12, 0.0], [1.5984321E12, 0.0], [1.59843348E12, 0.0], [1.5984315E12, 0.0], [1.59843168E12, 0.0], [1.5984339E12, 0.0], [1.59843108E12, 0.0], [1.59843288E12, 0.0], [1.59843192E12, 0.0], [1.59843366E12, 0.0], [1.59843132E12, 0.0], [1.59843264E12, 0.0], [1.5984309E12, 0.0], [1.5984303E12, 0.0], [1.59843306E12, 0.0], [1.59843144E12, 0.0], [1.59843252E12, 0.0], [1.59843084E12, 0.0], [1.59843246E12, 0.0], [1.59843312E12, 0.0], [1.59843294E12, 0.0], [1.59843042E12, 0.0], [1.59843204E12, 0.0], [1.59843354E12, 0.0], [1.5984327E12, 0.0], [1.59843066E12, 0.0], [1.59843228E12, 0.0], [1.5984333E12, 0.0], [1.59843024E12, 0.0], [1.59843186E12, 0.0], [1.59843372E12, 0.0], [1.59843126E12, 0.0], [1.5984324E12, 0.0], [1.59843318E12, 0.0], [1.5984318E12, 0.0], [1.59843378E12, 0.0], [1.59843138E12, 0.0], [1.59843258E12, 0.0], [1.59843078E12, 0.0], [1.59843162E12, 0.0], [1.59843396E12, 0.0], [1.59843102E12, 0.0], [1.5984312E12, 0.0], [1.59843276E12, 0.0], [1.5984306E12, 0.0], [1.59843222E12, 0.0], [1.59843336E12, 0.0], [1.59843114E12, 0.0], [1.59843282E12, 0.0], [1.59843054E12, 0.0], [1.59843072E12, 0.0], [1.59843234E12, 0.0], [1.59843324E12, 0.0], [1.59843174E12, 0.0], [1.59843384E12, 0.0], [1.59843096E12, 0.0], [1.598433E12, 0.0], [1.59843036E12, 0.0], [1.59843198E12, 0.0], [1.5984336E12, 0.0], [1.59843216E12, 0.0], [1.59843342E12, 0.0], [1.59843156E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59843396E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.601813801898823, "minX": 1.59843024E12, "maxY": 186.40125786163534, "series": [{"data": [[1.59843048E12, 4.2352615554940485], [1.5984321E12, 3.7332584585146877], [1.59843348E12, 3.380218464761328], [1.5984315E12, 9.141217634709594], [1.59843168E12, 3.0904849427399896], [1.5984339E12, 3.380261832829813], [1.59843108E12, 16.681424581005594], [1.59843288E12, 10.751567844925884], [1.59843192E12, 135.2980769230768], [1.59843366E12, 11.851365313653144], [1.59843132E12, 16.32296212867803], [1.59843264E12, 7.490666283744983], [1.5984309E12, 15.219622953075527], [1.5984303E12, 3.080705814289856], [1.59843306E12, 28.592110784725158], [1.59843144E12, 7.433048433048424], [1.59843252E12, 14.089977540707515], [1.59843084E12, 4.577856135401983], [1.59843246E12, 13.223322639140788], [1.59843312E12, 20.546019198193058], [1.59843294E12, 16.1675311930464], [1.59843042E12, 4.287836712024451], [1.59843204E12, 2.842519685039353], [1.59843354E12, 3.3652783997611557], [1.5984327E12, 4.557240984544926], [1.59843066E12, 4.594583157003819], [1.59843228E12, 17.55347117622895], [1.5984333E12, 4.356876213229787], [1.59843024E12, 3.7153804050355776], [1.59843186E12, 2.601813801898823], [1.59843372E12, 14.236050860134641], [1.59843126E12, 8.180164819551026], [1.5984324E12, 6.1275110414589005], [1.59843318E12, 15.063037674280555], [1.5984318E12, 2.8575074436410097], [1.59843378E12, 4.898517846339999], [1.59843138E12, 16.44772155437514], [1.59843258E12, 7.8337366548043], [1.59843078E12, 5.215776937088422], [1.59843162E12, 3.270747914604829], [1.59843396E12, 3.41296928327645], [1.59843102E12, 19.435549908231035], [1.5984312E12, 11.344689378757534], [1.59843276E12, 4.161887008890155], [1.5984306E12, 3.7687141457954323], [1.59843222E12, 4.9019799219185725], [1.59843336E12, 4.625300120048021], [1.59843114E12, 15.39492399944225], [1.59843282E12, 4.291923683833026], [1.59843054E12, 4.936647173489278], [1.59843072E12, 4.69687587953841], [1.59843234E12, 17.56186215573888], [1.59843324E12, 8.358001172332946], [1.59843174E12, 3.154009634457352], [1.59843384E12, 3.558022813688213], [1.59843096E12, 23.356530160486987], [1.598433E12, 14.615439093484456], [1.59843036E12, 2.9253607103218564], [1.59843198E12, 2.7044300225733657], [1.5984336E12, 4.3150705493845685], [1.59843216E12, 2.8572433192686426], [1.59843342E12, 3.4081969674223043], [1.59843156E12, 5.785421089879682]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59843048E12, 10.771946829133205], [1.5984321E12, 8.735364312789516], [1.59843348E12, 6.3595152603231595], [1.5984315E12, 157.4251329415061], [1.59843168E12, 6.394248477121418], [1.5984339E12, 6.841691842900288], [1.59843108E12, 49.51505016722408], [1.59843288E12, 34.10216585921919], [1.59843192E12, 5.24225710649132], [1.59843366E12, 41.26461038961047], [1.59843132E12, 47.31859777558788], [1.59843264E12, 15.333620565848037], [1.5984309E12, 45.58798283261804], [1.5984303E12, 7.253290901200635], [1.59843306E12, 96.70765141977925], [1.59843144E12, 24.26452991452988], [1.59843252E12, 43.63097757088449], [1.59843084E12, 11.00719424460433], [1.59843246E12, 42.32021766429469], [1.59843312E12, 72.48748577929479], [1.59843294E12, 62.99705552439663], [1.59843042E12, 8.751735628991971], [1.59843204E12, 5.272356580427452], [1.59843354E12, 6.867293625914308], [1.5984327E12, 11.527769825364974], [1.59843066E12, 11.502328206575442], [1.59843228E12, 60.73955908530742], [1.5984333E12, 11.237085697223067], [1.59843024E12, 8.246852764094127], [1.59843186E12, 5.16293567582885], [1.59843372E12, 47.88117330140681], [1.59843126E12, 25.02827507814714], [1.5984324E12, 16.49223536116261], [1.59843318E12, 48.85623803211078], [1.5984318E12, 5.512762336925717], [1.59843378E12, 11.254916792738294], [1.59843138E12, 186.40125786163534], [1.59843258E12, 23.672142755983607], [1.59843078E12, 12.468662562954643], [1.59843162E12, 8.021867945823965], [1.59843396E12, 4.795221843003411], [1.59843102E12, 58.80169851380051], [1.5984312E12, 31.27755511022036], [1.59843276E12, 8.933897332950986], [1.5984306E12, 8.380819236683903], [1.59843222E12, 13.786252091466805], [1.59843336E12, 11.467286914765854], [1.59843114E12, 47.49832682654788], [1.59843282E12, 10.538373260651275], [1.59843054E12, 12.072861521315115], [1.59843072E12, 11.149823819591255], [1.59843234E12, 58.41874125874122], [1.59843324E12, 25.01846965699211], [1.59843174E12, 6.111566742081435], [1.59843384E12, 7.455982970959391], [1.59843096E12, 76.52316788120433], [1.598433E12, 47.44129726667626], [1.59843036E12, 5.700929393813282], [1.59843198E12, 137.06050775740502], [1.5984336E12, 11.364359705749898], [1.59843216E12, 6.163853727144869], [1.59843342E12, 7.403753753753745], [1.59843156E12, 17.254326241134674]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59843396E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.5872183647442304, "minX": 1.59843024E12, "maxY": 186.40027952480736, "series": [{"data": [[1.59843048E12, 4.222944921118173], [1.5984321E12, 3.718798259160456], [1.59843348E12, 3.3577734550351646], [1.5984315E12, 9.101749475157469], [1.59843168E12, 3.0770535840520337], [1.5984339E12, 3.366565961732126], [1.59843108E12, 15.800418994413416], [1.59843288E12, 10.468072976054723], [1.59843192E12, 135.2774321266964], [1.59843366E12, 11.822878228782292], [1.59843132E12, 15.510347740391339], [1.59843264E12, 7.478891441700165], [1.5984309E12, 14.914269987615269], [1.5984303E12, 3.072172403818339], [1.59843306E12, 26.801790460204263], [1.59843144E12, 7.420370370370377], [1.59843252E12, 14.073554183043258], [1.59843084E12, 4.570098730606498], [1.59843246E12, 13.077695633979658], [1.59843312E12, 20.095567476002323], [1.59843294E12, 16.14397869059302], [1.59843042E12, 4.27325742849207], [1.59843204E12, 2.8249437570303706], [1.59843354E12, 3.3493058665472457], [1.5984327E12, 4.5450772753291275], [1.59843066E12, 4.585272958104109], [1.59843228E12, 17.503080925647], [1.5984333E12, 4.346573092429443], [1.59843024E12, 3.581828133552268], [1.59843186E12, 2.5872183647442304], [1.59843372E12, 14.156020942408388], [1.59843126E12, 8.165956237567487], [1.5984324E12, 6.108989884598946], [1.59843318E12, 14.974784930287807], [1.5984318E12, 2.842620161633345], [1.59843378E12, 4.880066545674517], [1.59843138E12, 15.584148727984298], [1.59843258E12, 7.820355871886112], [1.59843078E12, 5.199663724253894], [1.59843162E12, 3.2622649512229622], [1.59843396E12, 3.395904436860068], [1.59843102E12, 18.08400395312722], [1.5984312E12, 11.327082736902408], [1.59843276E12, 4.141955835962141], [1.5984306E12, 3.726318735133632], [1.59843222E12, 4.89208031232572], [1.59843336E12, 4.6119447779111775], [1.59843114E12, 14.660577325338162], [1.59843282E12, 4.275570219480694], [1.59843054E12, 4.9246727930938485], [1.59843072E12, 4.683506895581212], [1.59843234E12, 17.426674122745776], [1.59843324E12, 8.345984759671744], [1.59843174E12, 3.1371493340889853], [1.59843384E12, 3.54585551330799], [1.59843096E12, 22.21015495296058], [1.598433E12, 14.56940509915014], [1.59843036E12, 2.911625971143179], [1.59843198E12, 2.693989841986469], [1.5984336E12, 4.306064244971482], [1.59843216E12, 2.8500703234880365], [1.59843342E12, 3.4000900765650703], [1.59843156E12, 5.769143665958967]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59843048E12, 10.771254500138454], [1.5984321E12, 8.73424119050965], [1.59843348E12, 6.3587672052662985], [1.5984315E12, 157.42359361880793], [1.59843168E12, 6.3929735089956], [1.5984339E12, 6.840684793554877], [1.59843108E12, 49.51351727982162], [1.59843288E12, 34.100883442576276], [1.59843192E12, 5.2408428793664426], [1.59843366E12, 41.26372491145219], [1.59843132E12, 47.317753062086304], [1.59843264E12, 15.331753554502352], [1.5984309E12, 45.587844385989285], [1.5984303E12, 7.252278316215839], [1.59843306E12, 96.70639250244787], [1.59843144E12, 24.263675213675153], [1.59843252E12, 43.630413316405736], [1.59843084E12, 11.006912117364944], [1.59843246E12, 42.31938049393071], [1.59843312E12, 72.48677474402751], [1.59843294E12, 62.99635445877728], [1.59843042E12, 8.750763676756465], [1.59843204E12, 5.271231721034878], [1.59843354E12, 6.866845797880264], [1.5984327E12, 11.527054108216456], [1.59843066E12, 11.501481586002514], [1.59843228E12, 60.73873750513482], [1.5984333E12, 11.23604060913705], [1.59843024E12, 8.24192665571975], [1.59843186E12, 5.1622272598469845], [1.59843372E12, 47.880574678239896], [1.59843126E12, 25.02784882068764], [1.5984324E12, 16.491095597663485], [1.59843318E12, 48.85564884371768], [1.5984318E12, 5.511911514463994], [1.59843378E12, 11.254160363086223], [1.59843138E12, 186.40027952480736], [1.59843258E12, 23.671293017986113], [1.59843078E12, 12.467403469501935], [1.59843162E12, 8.020457110609463], [1.59843396E12, 4.795221843003411], [1.59843102E12, 58.80042462844985], [1.5984312E12, 31.276553106212443], [1.59843276E12, 8.932463435618045], [1.5984306E12, 8.38012022927441], [1.59843222E12, 13.784997211377597], [1.59843336E12, 11.466086434573832], [1.59843114E12, 47.49749023982152], [1.59843282E12, 10.537799454884526], [1.59843054E12, 12.07091111730283], [1.59843072E12, 11.148837209302334], [1.59843234E12, 58.417622377622244], [1.59843324E12, 25.01671064204044], [1.59843174E12, 6.110435520362006], [1.59843384E12, 7.455374790938101], [1.59843096E12, 76.52275539667295], [1.598433E12, 47.44058915167813], [1.59843036E12, 5.700097100846155], [1.59843198E12, 137.06008462623427], [1.5984336E12, 11.363308812490592], [1.59843216E12, 6.163009845288324], [1.59843342E12, 7.402552552552561], [1.59843156E12, 17.25361702127661]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59843396E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.59843024E12, "maxY": 4.9E-324, "series": [{"data": [[1.59843048E12, 0.0], [1.5984321E12, 0.0], [1.59843348E12, 0.0], [1.5984315E12, 0.0], [1.59843168E12, 0.0], [1.5984339E12, 0.0], [1.59843108E12, 0.0], [1.59843288E12, 0.0], [1.59843192E12, 0.0], [1.59843366E12, 0.0], [1.59843132E12, 0.0], [1.59843264E12, 0.0], [1.5984309E12, 0.0], [1.5984303E12, 0.0], [1.59843306E12, 0.0], [1.59843144E12, 0.0], [1.59843252E12, 0.0], [1.59843084E12, 0.0], [1.59843246E12, 0.0], [1.59843312E12, 0.0], [1.59843294E12, 0.0], [1.59843042E12, 0.0], [1.59843204E12, 0.0], [1.59843354E12, 0.0], [1.5984327E12, 0.0], [1.59843066E12, 0.0], [1.59843228E12, 0.0], [1.5984333E12, 0.0], [1.59843024E12, 0.0], [1.59843186E12, 0.0], [1.59843372E12, 0.0], [1.59843126E12, 0.0], [1.5984324E12, 0.0], [1.59843318E12, 0.0], [1.5984318E12, 0.0], [1.59843378E12, 0.0], [1.59843138E12, 0.0], [1.59843258E12, 0.0], [1.59843078E12, 0.0], [1.59843162E12, 0.0], [1.59843396E12, 0.0], [1.59843102E12, 0.0], [1.5984312E12, 0.0], [1.59843276E12, 0.0], [1.5984306E12, 0.0], [1.59843222E12, 0.0], [1.59843336E12, 0.0], [1.59843114E12, 0.0], [1.59843282E12, 0.0], [1.59843054E12, 0.0], [1.59843072E12, 0.0], [1.59843234E12, 0.0], [1.59843324E12, 0.0], [1.59843174E12, 0.0], [1.59843384E12, 0.0], [1.59843096E12, 0.0], [1.598433E12, 0.0], [1.59843036E12, 0.0], [1.59843198E12, 0.0], [1.5984336E12, 0.0], [1.59843216E12, 0.0], [1.59843342E12, 0.0], [1.59843156E12, 0.0]], "isOverall": false, "label": "Open Main Page", "isController": false}, {"data": [[1.59843048E12, 0.0], [1.5984321E12, 0.0], [1.59843348E12, 0.0], [1.5984315E12, 0.0], [1.59843168E12, 0.0], [1.5984339E12, 0.0], [1.59843108E12, 0.0], [1.59843288E12, 0.0], [1.59843192E12, 0.0], [1.59843366E12, 0.0], [1.59843132E12, 0.0], [1.59843264E12, 0.0], [1.5984309E12, 0.0], [1.5984303E12, 0.0], [1.59843306E12, 0.0], [1.59843144E12, 0.0], [1.59843252E12, 0.0], [1.59843084E12, 0.0], [1.59843246E12, 0.0], [1.59843312E12, 0.0], [1.59843294E12, 0.0], [1.59843042E12, 0.0], [1.59843204E12, 0.0], [1.59843354E12, 0.0], [1.5984327E12, 0.0], [1.59843066E12, 0.0], [1.59843228E12, 0.0], [1.5984333E12, 0.0], [1.59843024E12, 0.0], [1.59843186E12, 0.0], [1.59843372E12, 0.0], [1.59843126E12, 0.0], [1.5984324E12, 0.0], [1.59843318E12, 0.0], [1.5984318E12, 0.0], [1.59843378E12, 0.0], [1.59843138E12, 0.0], [1.59843258E12, 0.0], [1.59843078E12, 0.0], [1.59843162E12, 0.0], [1.59843396E12, 0.0], [1.59843102E12, 0.0], [1.5984312E12, 0.0], [1.59843276E12, 0.0], [1.5984306E12, 0.0], [1.59843222E12, 0.0], [1.59843336E12, 0.0], [1.59843114E12, 0.0], [1.59843282E12, 0.0], [1.59843054E12, 0.0], [1.59843072E12, 0.0], [1.59843234E12, 0.0], [1.59843324E12, 0.0], [1.59843174E12, 0.0], [1.59843384E12, 0.0], [1.59843096E12, 0.0], [1.598433E12, 0.0], [1.59843036E12, 0.0], [1.59843198E12, 0.0], [1.5984336E12, 0.0], [1.59843216E12, 0.0], [1.59843342E12, 0.0], [1.59843156E12, 0.0]], "isOverall": false, "label": "Make an order", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59843396E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.59843024E12, "maxY": 939394.0, "series": [{"data": [[1.59843048E12, 97.0], [1.5984321E12, 105.0], [1.59843348E12, 112.0], [1.5984315E12, 939074.0], [1.59843168E12, 73.0], [1.5984339E12, 101.0], [1.59843108E12, 1009.0], [1.59843288E12, 245.0], [1.59843192E12, 935010.0], [1.59843366E12, 276.0], [1.59843132E12, 190.0], [1.59843264E12, 13111.0], [1.5984309E12, 269.0], [1.5984303E12, 77.0], [1.59843306E12, 272.0], [1.59843144E12, 163.0], [1.59843252E12, 225.0], [1.59843084E12, 1019.0], [1.59843246E12, 226.0], [1.59843312E12, 294.0], [1.59843294E12, 341.0], [1.59843042E12, 103.0], [1.59843204E12, 69.0], [1.59843354E12, 105.0], [1.5984327E12, 119.0], [1.59843066E12, 1026.0], [1.59843228E12, 249.0], [1.5984333E12, 175.0], [1.59843024E12, 213.0], [1.59843186E12, 80.0], [1.59843372E12, 215.0], [1.59843126E12, 133.0], [1.5984324E12, 1017.0], [1.59843318E12, 210.0], [1.5984318E12, 69.0], [1.59843378E12, 161.0], [1.59843138E12, 939394.0], [1.59843258E12, 169.0], [1.59843078E12, 148.0], [1.59843162E12, 1005.0], [1.59843396E12, 38.0], [1.59843102E12, 236.0], [1.5984312E12, 1025.0], [1.59843276E12, 1007.0], [1.5984306E12, 1012.0], [1.59843222E12, 104.0], [1.59843336E12, 98.0], [1.59843114E12, 259.0], [1.59843282E12, 111.0], [1.59843054E12, 132.0], [1.59843072E12, 129.0], [1.59843234E12, 325.0], [1.59843324E12, 307.0], [1.59843174E12, 99.0], [1.59843384E12, 69.0], [1.59843096E12, 260.0], [1.598433E12, 271.0], [1.59843036E12, 61.0], [1.59843198E12, 937933.0], [1.5984336E12, 119.0], [1.59843216E12, 72.0], [1.59843342E12, 101.0], [1.59843156E12, 241.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.59843048E12, 1.0], [1.5984321E12, 1.0], [1.59843348E12, 1.0], [1.5984315E12, 1.0], [1.59843168E12, 1.0], [1.5984339E12, 1.0], [1.59843108E12, 1.0], [1.59843288E12, 1.0], [1.59843192E12, 1.0], [1.59843366E12, 1.0], [1.59843132E12, 2.0], [1.59843264E12, 1.0], [1.5984309E12, 1.0], [1.5984303E12, 1.0], [1.59843306E12, 2.0], [1.59843144E12, 1.0], [1.59843252E12, 1.0], [1.59843084E12, 1.0], [1.59843246E12, 1.0], [1.59843312E12, 2.0], [1.59843294E12, 2.0], [1.59843042E12, 1.0], [1.59843204E12, 1.0], [1.59843354E12, 1.0], [1.5984327E12, 1.0], [1.59843066E12, 1.0], [1.59843228E12, 1.0], [1.5984333E12, 1.0], [1.59843024E12, 1.0], [1.59843186E12, 1.0], [1.59843372E12, 1.0], [1.59843126E12, 1.0], [1.5984324E12, 1.0], [1.59843318E12, 1.0], [1.5984318E12, 1.0], [1.59843378E12, 1.0], [1.59843138E12, 1.0], [1.59843258E12, 1.0], [1.59843078E12, 1.0], [1.59843162E12, 1.0], [1.59843396E12, 1.2829998600482941], [1.59843102E12, 1.0], [1.5984312E12, 1.0], [1.59843276E12, 1.0], [1.5984306E12, 1.0], [1.59843222E12, 1.0], [1.59843336E12, 1.0], [1.59843114E12, 1.0], [1.59843282E12, 1.0], [1.59843054E12, 1.0], [1.59843072E12, 1.0], [1.59843234E12, 1.0], [1.59843324E12, 1.0], [1.59843174E12, 1.0], [1.59843384E12, 1.0], [1.59843096E12, 1.0], [1.598433E12, 1.0], [1.59843036E12, 1.0], [1.59843198E12, 1.0], [1.5984336E12, 1.0], [1.59843216E12, 1.0], [1.59843342E12, 1.0], [1.59843156E12, 1.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.59843048E12, 1.0], [1.5984321E12, 1.0], [1.59843348E12, 1.0], [1.5984315E12, 1.0], [1.59843168E12, 1.0], [1.5984339E12, 1.0], [1.59843108E12, 1.0], [1.59843288E12, 1.0], [1.59843192E12, 1.0], [1.59843366E12, 1.0], [1.59843132E12, 2.0], [1.59843264E12, 1.0], [1.5984309E12, 1.0], [1.5984303E12, 1.0], [1.59843306E12, 2.0], [1.59843144E12, 1.0], [1.59843252E12, 1.0], [1.59843084E12, 1.0], [1.59843246E12, 1.0], [1.59843312E12, 2.0], [1.59843294E12, 2.0], [1.59843042E12, 1.0], [1.59843204E12, 1.0], [1.59843354E12, 1.0], [1.5984327E12, 1.0], [1.59843066E12, 1.0], [1.59843228E12, 1.0], [1.5984333E12, 1.0], [1.59843024E12, 1.0], [1.59843186E12, 1.0], [1.59843372E12, 1.0], [1.59843126E12, 1.0], [1.5984324E12, 1.0], [1.59843318E12, 1.0], [1.5984318E12, 1.0], [1.59843378E12, 1.0], [1.59843138E12, 1.0], [1.59843258E12, 1.0], [1.59843078E12, 1.0], [1.59843162E12, 1.0], [1.59843396E12, 1.8113000559806824], [1.59843102E12, 1.0], [1.5984312E12, 1.0], [1.59843276E12, 1.0], [1.5984306E12, 1.0], [1.59843222E12, 1.0], [1.59843336E12, 1.0], [1.59843114E12, 1.0], [1.59843282E12, 1.0], [1.59843054E12, 1.0], [1.59843072E12, 1.0], [1.59843234E12, 1.0], [1.59843324E12, 1.0], [1.59843174E12, 1.0], [1.59843384E12, 1.0], [1.59843096E12, 1.5698013830185005], [1.598433E12, 1.0], [1.59843036E12, 1.0], [1.59843198E12, 1.0], [1.5984336E12, 1.0], [1.59843216E12, 1.0], [1.59843342E12, 1.0], [1.59843156E12, 1.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.59843048E12, 1.0], [1.5984321E12, 1.0], [1.59843348E12, 1.0], [1.5984315E12, 1.0], [1.59843168E12, 1.0], [1.5984339E12, 1.0], [1.59843108E12, 1.0], [1.59843288E12, 1.0], [1.59843192E12, 1.0], [1.59843366E12, 1.0], [1.59843132E12, 2.0], [1.59843264E12, 1.0], [1.5984309E12, 1.0], [1.5984303E12, 1.0], [1.59843306E12, 2.0], [1.59843144E12, 1.0], [1.59843252E12, 1.0], [1.59843084E12, 1.0], [1.59843246E12, 1.0], [1.59843312E12, 2.0], [1.59843294E12, 2.0], [1.59843042E12, 1.0], [1.59843204E12, 1.0], [1.59843354E12, 1.0], [1.5984327E12, 1.0], [1.59843066E12, 1.0], [1.59843228E12, 1.0], [1.5984333E12, 1.0], [1.59843024E12, 1.0], [1.59843186E12, 1.0], [1.59843372E12, 1.0], [1.59843126E12, 1.0], [1.5984324E12, 1.0], [1.59843318E12, 1.0], [1.5984318E12, 1.0], [1.59843378E12, 1.0], [1.59843138E12, 1.0], [1.59843258E12, 1.0], [1.59843078E12, 1.0], [1.59843162E12, 1.0], [1.59843396E12, 1.5764999300241467], [1.59843102E12, 1.0], [1.5984312E12, 1.0], [1.59843276E12, 1.0], [1.5984306E12, 1.0], [1.59843222E12, 1.0], [1.59843336E12, 1.0], [1.59843114E12, 1.0], [1.59843282E12, 1.0], [1.59843054E12, 1.0], [1.59843072E12, 1.0], [1.59843234E12, 1.0], [1.59843324E12, 1.0], [1.59843174E12, 1.0], [1.59843384E12, 1.0], [1.59843096E12, 1.0], [1.598433E12, 1.0], [1.59843036E12, 1.0], [1.59843198E12, 1.0], [1.5984336E12, 1.0], [1.59843216E12, 1.0], [1.59843342E12, 1.0], [1.59843156E12, 1.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.59843048E12, 0.0], [1.5984321E12, 0.0], [1.59843348E12, 0.0], [1.5984315E12, 1.0], [1.59843168E12, 0.0], [1.5984339E12, 0.0], [1.59843108E12, 0.0], [1.59843288E12, 0.0], [1.59843192E12, 0.0], [1.59843366E12, 0.0], [1.59843132E12, 1.0], [1.59843264E12, 0.0], [1.5984309E12, 0.0], [1.5984303E12, 0.0], [1.59843306E12, 1.0], [1.59843144E12, 0.0], [1.59843252E12, 0.0], [1.59843084E12, 0.0], [1.59843246E12, 0.0], [1.59843312E12, 0.0], [1.59843294E12, 0.0], [1.59843042E12, 0.0], [1.59843204E12, 0.0], [1.59843354E12, 0.0], [1.5984327E12, 0.0], [1.59843066E12, 0.0], [1.59843228E12, 0.0], [1.5984333E12, 0.0], [1.59843024E12, 1.0], [1.59843186E12, 0.0], [1.59843372E12, 0.0], [1.59843126E12, 1.0], [1.5984324E12, 1.0], [1.59843318E12, 1.0], [1.5984318E12, 0.0], [1.59843378E12, 0.0], [1.59843138E12, 0.0], [1.59843258E12, 0.0], [1.59843078E12, 0.0], [1.59843162E12, 0.0], [1.59843396E12, 1.0], [1.59843102E12, 0.0], [1.5984312E12, 0.0], [1.59843276E12, 0.0], [1.5984306E12, 0.0], [1.59843222E12, 0.0], [1.59843336E12, 0.0], [1.59843114E12, 0.0], [1.59843282E12, 0.0], [1.59843054E12, 0.0], [1.59843072E12, 0.0], [1.59843234E12, 0.0], [1.59843324E12, 1.0], [1.59843174E12, 0.0], [1.59843384E12, 0.0], [1.59843096E12, 0.0], [1.598433E12, 1.0], [1.59843036E12, 0.0], [1.59843198E12, 0.0], [1.5984336E12, 1.0], [1.59843216E12, 0.0], [1.59843342E12, 0.0], [1.59843156E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.59843048E12, 4.0], [1.5984321E12, 4.0], [1.59843348E12, 4.0], [1.5984315E12, 6.0], [1.59843168E12, 4.0], [1.5984339E12, 4.0], [1.59843108E12, 16.0], [1.59843288E12, 5.0], [1.59843192E12, 3.0], [1.59843366E12, 7.0], [1.59843132E12, 14.0], [1.59843264E12, 5.0], [1.5984309E12, 9.0], [1.5984303E12, 4.0], [1.59843306E12, 43.0], [1.59843144E12, 6.0], [1.59843252E12, 11.0], [1.59843084E12, 4.0], [1.59843246E12, 10.0], [1.59843312E12, 24.0], [1.59843294E12, 15.0], [1.59843042E12, 4.0], [1.59843204E12, 3.0], [1.59843354E12, 3.0], [1.5984327E12, 4.0], [1.59843066E12, 5.0], [1.59843228E12, 15.0], [1.5984333E12, 4.0], [1.59843024E12, 4.0], [1.59843186E12, 3.0], [1.59843372E12, 12.0], [1.59843126E12, 7.0], [1.5984324E12, 5.0], [1.59843318E12, 16.0], [1.5984318E12, 3.0], [1.59843378E12, 4.0], [1.59843138E12, 18.0], [1.59843258E12, 6.5], [1.59843078E12, 4.0], [1.59843162E12, 4.0], [1.59843396E12, 4.0], [1.59843102E12, 20.0], [1.5984312E12, 11.0], [1.59843276E12, 4.0], [1.5984306E12, 4.0], [1.59843222E12, 4.0], [1.59843336E12, 5.0], [1.59843114E12, 17.0], [1.59843282E12, 4.0], [1.59843054E12, 5.0], [1.59843072E12, 4.0], [1.59843234E12, 16.0], [1.59843324E12, 7.0], [1.59843174E12, 4.0], [1.59843384E12, 4.0], [1.59843096E12, 32.0], [1.598433E12, 10.0], [1.59843036E12, 3.0], [1.59843198E12, 3.0], [1.5984336E12, 4.0], [1.59843216E12, 3.0], [1.59843342E12, 4.0], [1.59843156E12, 6.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59843396E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 4.0, "maxY": 113.0, "series": [{"data": [[4.0, 3.5], [6.0, 5.0], [8.0, 5.0], [12.0, 3.5], [15.0, 4.0], [16.0, 5.5], [18.0, 4.0], [20.0, 3.5], [21.0, 4.0], [22.0, 4.0], [24.0, 4.0], [26.0, 4.0], [28.0, 4.5], [30.0, 4.0], [32.0, 4.5], [33.0, 5.0], [34.0, 3.0], [36.0, 4.0], [37.0, 4.0], [38.0, 4.0], [39.0, 3.0], [40.0, 3.0], [41.0, 7.0], [42.0, 3.0], [46.0, 3.0], [47.0, 5.0], [48.0, 4.0], [51.0, 6.5], [50.0, 3.5], [52.0, 4.0], [54.0, 3.0], [55.0, 6.0], [56.0, 4.0], [58.0, 4.0], [60.0, 4.0], [62.0, 4.0], [64.0, 4.0], [65.0, 7.0], [67.0, 3.0], [66.0, 3.0], [70.0, 4.0], [69.0, 4.0], [68.0, 4.0], [72.0, 3.0], [75.0, 4.0], [73.0, 3.0], [78.0, 4.0], [79.0, 4.0], [77.0, 4.0], [76.0, 3.0], [80.0, 5.0], [83.0, 4.0], [86.0, 4.0], [84.0, 3.0], [85.0, 4.0], [87.0, 3.0], [88.0, 4.0], [89.0, 4.0], [90.0, 3.5], [94.0, 4.0], [93.0, 4.0], [92.0, 3.0], [96.0, 4.0], [99.0, 5.0], [98.0, 4.0], [102.0, 8.0], [103.0, 5.0], [100.0, 3.0], [104.0, 4.0], [107.0, 4.0], [106.0, 4.0], [105.0, 3.0], [110.0, 3.0], [108.0, 4.0], [109.0, 5.0], [112.0, 6.0], [115.0, 4.0], [113.0, 4.0], [114.0, 4.0], [118.0, 3.0], [119.0, 4.0], [117.0, 3.0], [116.0, 3.0], [120.0, 3.0], [122.0, 4.0], [123.0, 3.0], [121.0, 3.0], [126.0, 8.0], [124.0, 5.0], [134.0, 3.0], [128.0, 4.0], [130.0, 3.0], [135.0, 5.0], [129.0, 5.0], [132.0, 4.0], [131.0, 4.0], [133.0, 6.0], [142.0, 4.0], [136.0, 4.0], [137.0, 3.0], [139.0, 4.0], [140.0, 4.0], [138.0, 4.0], [143.0, 3.0], [141.0, 4.0], [150.0, 4.0], [144.0, 3.0], [148.0, 4.0], [151.0, 5.0], [149.0, 4.0], [145.0, 4.0], [146.0, 4.0], [147.0, 4.0], [158.0, 4.0], [152.0, 4.0], [154.0, 4.0], [156.0, 4.0], [157.0, 4.0], [159.0, 4.0], [153.0, 4.0], [155.0, 4.0], [166.0, 4.0], [160.0, 4.0], [161.0, 5.0], [162.0, 5.0], [163.0, 4.0], [164.0, 4.0], [167.0, 4.0], [165.0, 4.0], [174.0, 4.0], [168.0, 4.0], [170.0, 3.0], [169.0, 3.0], [173.0, 4.0], [172.0, 4.0], [171.0, 4.0], [175.0, 4.0], [182.0, 3.0], [176.0, 5.0], [180.0, 4.0], [177.0, 4.0], [178.0, 4.0], [181.0, 4.0], [183.0, 4.0], [179.0, 4.0], [190.0, 4.0], [184.0, 4.0], [191.0, 3.0], [187.0, 4.0], [188.0, 4.0], [185.0, 4.0], [186.0, 3.0], [189.0, 3.0], [198.0, 3.0], [192.0, 3.0], [199.0, 4.0], [196.0, 3.0], [193.0, 3.0], [195.0, 3.0], [194.0, 3.0], [197.0, 3.0], [206.0, 4.0], [200.0, 4.0], [204.0, 3.0], [201.0, 5.0], [205.0, 4.0], [202.0, 4.0], [207.0, 4.0], [203.0, 4.0], [214.0, 4.0], [208.0, 10.0], [215.0, 4.0], [209.0, 4.0], [210.0, 4.0], [213.0, 4.0], [212.0, 3.0], [211.0, 4.0], [222.0, 4.0], [216.0, 4.0], [217.0, 4.0], [223.0, 4.0], [221.0, 6.0], [219.0, 4.0], [218.0, 5.0], [220.0, 3.0], [230.0, 4.0], [224.0, 4.0], [229.0, 4.0], [231.0, 3.0], [228.0, 4.0], [227.0, 4.0], [226.0, 3.0], [225.0, 3.0], [238.0, 5.0], [232.0, 4.0], [234.0, 4.0], [236.0, 4.0], [239.0, 5.0], [235.0, 4.0], [233.0, 4.0], [237.0, 4.0], [246.0, 4.0], [247.0, 4.0], [240.0, 4.0], [245.0, 4.0], [244.0, 4.0], [242.0, 4.0], [241.0, 4.0], [243.0, 4.0], [250.0, 4.0], [251.0, 4.0], [252.0, 4.0], [249.0, 5.0], [253.0, 4.0], [255.0, 4.0], [254.0, 4.0], [248.0, 4.0], [258.0, 4.0], [256.0, 4.0], [263.0, 5.0], [264.0, 5.0], [270.0, 6.0], [271.0, 5.0], [269.0, 4.0], [268.0, 5.0], [259.0, 5.0], [265.0, 4.5], [267.0, 5.0], [266.0, 4.0], [262.0, 4.0], [261.0, 5.0], [260.0, 4.0], [257.0, 4.0], [286.0, 4.0], [278.0, 4.0], [277.0, 4.0], [276.0, 4.0], [284.0, 4.0], [285.0, 4.0], [287.0, 4.0], [280.0, 4.0], [283.0, 4.0], [281.0, 4.0], [282.0, 4.0], [279.0, 4.0], [272.0, 4.0], [274.0, 4.0], [273.0, 4.0], [275.0, 4.0], [300.0, 5.0], [303.0, 5.0], [296.0, 13.0], [295.0, 5.0], [289.0, 5.0], [290.0, 5.0], [291.0, 5.0], [288.0, 4.0], [302.0, 6.0], [301.0, 4.0], [299.0, 5.0], [298.0, 5.0], [297.0, 5.0], [294.0, 6.0], [292.0, 10.0], [293.0, 5.0], [306.0, 6.0], [304.0, 7.0], [305.0, 8.0], [312.0, 18.0], [319.0, 16.0], [313.0, 11.0], [318.0, 16.0], [316.0, 5.0], [317.0, 47.0], [307.0, 6.0], [315.0, 10.0], [314.0, 18.0], [311.0, 8.0], [310.0, 13.0], [309.0, 6.0], [308.0, 5.0], [323.0, 11.0], [320.0, 12.0], [324.0, 5.0], [325.0, 51.0], [321.0, 11.0], [322.0, 14.5], [326.0, 7.0], [328.0, 6.0], [327.0, 5.0], [330.0, 14.0], [331.0, 33.0], [329.0, 17.0], [335.0, 9.0], [334.0, 32.5], [332.0, 6.0], [333.0, 14.0], [339.0, 13.0], [343.0, 13.0], [342.0, 25.0], [341.0, 22.0], [346.0, 28.0], [345.0, 10.0], [337.0, 33.0], [344.0, 20.0], [351.0, 16.0], [350.0, 23.0], [348.0, 31.0], [336.0, 16.0], [347.0, 29.0], [338.0, 16.0], [367.0, 11.0], [362.0, 14.0], [363.0, 10.0], [353.0, 46.0], [352.0, 14.0], [356.0, 19.0], [359.0, 26.0], [358.0, 11.0], [354.0, 28.0], [355.0, 43.0], [364.0, 15.0], [361.0, 15.0], [360.0, 13.0], [381.0, 19.0], [370.0, 32.0], [369.0, 41.0], [382.0, 14.0], [383.0, 15.0], [368.0, 113.0], [377.0, 11.0], [379.0, 14.0], [378.0, 17.0], [373.0, 22.0], [372.0, 11.0], [376.0, 13.0], [380.0, 29.5], [371.0, 55.0], [398.0, 38.0], [393.0, 21.0], [394.0, 21.0], [392.0, 9.0], [399.0, 11.0], [384.0, 36.0], [386.0, 21.0], [395.0, 42.0], [397.0, 19.0], [396.0, 42.0], [391.0, 16.0], [390.0, 13.0], [388.0, 14.0], [389.0, 20.0], [400.0, 16.0], [407.0, 18.0], [411.0, 11.0], [401.0, 12.0], [405.0, 18.0], [404.0, 47.5], [403.0, 21.0], [410.0, 19.0], [412.0, 11.0], [413.0, 12.0], [414.0, 15.0], [406.0, 59.0], [429.0, 31.0], [416.0, 26.0], [419.0, 6.0], [426.0, 21.0], [427.0, 29.0], [428.0, 49.0], [430.0, 21.0], [424.0, 39.0], [422.0, 17.0], [432.0, 22.0], [437.0, 34.0], [434.0, 39.0], [436.0, 35.0], [438.0, 39.0], [452.0, 45.0], [450.0, 62.0], [461.0, 33.0], [459.0, 50.0], [454.0, 36.0], [453.0, 43.0], [464.0, 64.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 464.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 4.0, "maxY": 113.0, "series": [{"data": [[4.0, 3.5], [6.0, 5.0], [8.0, 5.0], [12.0, 3.0], [15.0, 4.0], [16.0, 5.5], [18.0, 4.0], [20.0, 3.5], [21.0, 4.0], [22.0, 4.0], [24.0, 4.0], [26.0, 4.0], [28.0, 4.0], [30.0, 4.0], [32.0, 4.5], [33.0, 5.0], [34.0, 3.0], [36.0, 4.0], [37.0, 4.0], [38.0, 4.0], [39.0, 3.0], [40.0, 3.0], [41.0, 7.0], [42.0, 3.0], [46.0, 3.0], [47.0, 5.0], [48.0, 4.0], [51.0, 6.5], [50.0, 3.5], [52.0, 4.0], [54.0, 3.0], [55.0, 6.0], [56.0, 4.0], [58.0, 4.0], [60.0, 4.0], [62.0, 4.0], [64.0, 4.0], [65.0, 7.0], [67.0, 3.0], [66.0, 3.0], [70.0, 4.0], [69.0, 4.0], [68.0, 4.0], [72.0, 3.0], [75.0, 4.0], [73.0, 3.0], [78.0, 4.0], [79.0, 4.0], [77.0, 4.0], [76.0, 3.0], [80.0, 5.0], [83.0, 4.0], [86.0, 4.0], [84.0, 3.0], [85.0, 4.0], [87.0, 3.0], [88.0, 4.0], [89.0, 4.0], [90.0, 3.5], [94.0, 4.0], [93.0, 4.0], [92.0, 3.0], [96.0, 4.0], [99.0, 5.0], [98.0, 4.0], [102.0, 8.0], [103.0, 5.0], [100.0, 3.0], [104.0, 4.0], [107.0, 4.0], [106.0, 4.0], [105.0, 3.0], [110.0, 3.0], [108.0, 4.0], [109.0, 5.0], [112.0, 6.0], [115.0, 4.0], [113.0, 4.0], [114.0, 4.0], [118.0, 3.0], [119.0, 4.0], [117.0, 3.0], [116.0, 3.0], [120.0, 3.0], [122.0, 4.0], [123.0, 3.0], [121.0, 3.0], [126.0, 8.0], [124.0, 5.0], [134.0, 3.0], [128.0, 4.0], [130.0, 3.0], [135.0, 5.0], [129.0, 5.0], [132.0, 4.0], [131.0, 4.0], [133.0, 5.5], [142.0, 4.0], [136.0, 4.0], [137.0, 3.0], [139.0, 4.0], [140.0, 4.0], [138.0, 4.0], [143.0, 3.0], [141.0, 4.0], [150.0, 4.0], [144.0, 3.0], [148.0, 4.0], [151.0, 5.0], [149.0, 4.0], [145.0, 4.0], [146.0, 4.0], [147.0, 4.0], [158.0, 4.0], [152.0, 4.0], [154.0, 4.0], [156.0, 4.0], [157.0, 4.0], [159.0, 4.0], [153.0, 4.0], [155.0, 4.0], [166.0, 4.0], [160.0, 4.0], [161.0, 5.0], [162.0, 5.0], [163.0, 4.0], [164.0, 4.0], [167.0, 4.0], [165.0, 4.0], [174.0, 4.0], [168.0, 4.0], [170.0, 3.0], [169.0, 3.0], [173.0, 4.0], [172.0, 4.0], [171.0, 4.0], [175.0, 4.0], [182.0, 3.0], [176.0, 5.0], [180.0, 4.0], [177.0, 4.0], [178.0, 4.0], [181.0, 4.0], [183.0, 4.0], [179.0, 4.0], [190.0, 4.0], [184.0, 4.0], [191.0, 3.0], [187.0, 4.0], [188.0, 4.0], [185.0, 4.0], [186.0, 3.0], [189.0, 3.0], [198.0, 3.0], [192.0, 3.0], [199.0, 4.0], [196.0, 3.0], [193.0, 3.0], [195.0, 3.0], [194.0, 3.0], [197.0, 3.0], [206.0, 4.0], [200.0, 4.0], [204.0, 3.0], [201.0, 5.0], [205.0, 4.0], [202.0, 4.0], [207.0, 4.0], [203.0, 4.0], [214.0, 4.0], [208.0, 10.0], [215.0, 4.0], [209.0, 4.0], [210.0, 4.0], [213.0, 4.0], [212.0, 3.0], [211.0, 4.0], [222.0, 4.0], [216.0, 4.0], [217.0, 4.0], [223.0, 4.0], [221.0, 6.0], [219.0, 4.0], [218.0, 5.0], [220.0, 3.0], [230.0, 4.0], [224.0, 4.0], [229.0, 4.0], [231.0, 3.0], [228.0, 4.0], [227.0, 4.0], [226.0, 3.0], [225.0, 3.0], [238.0, 5.0], [232.0, 4.0], [234.0, 4.0], [236.0, 4.0], [239.0, 5.0], [235.0, 4.0], [233.0, 4.0], [237.0, 4.0], [246.0, 4.0], [247.0, 4.0], [240.0, 4.0], [245.0, 4.0], [244.0, 4.0], [242.0, 4.0], [241.0, 4.0], [243.0, 4.0], [250.0, 4.0], [251.0, 4.0], [252.0, 4.0], [249.0, 5.0], [253.0, 4.0], [255.0, 4.0], [254.0, 4.0], [248.0, 4.0], [258.0, 4.0], [256.0, 4.0], [263.0, 5.0], [264.0, 5.0], [270.0, 6.0], [271.0, 5.0], [269.0, 4.0], [268.0, 5.0], [259.0, 5.0], [265.0, 4.5], [267.0, 5.0], [266.0, 4.0], [262.0, 4.0], [261.0, 5.0], [260.0, 4.0], [257.0, 4.0], [286.0, 4.0], [278.0, 4.0], [277.0, 4.0], [276.0, 4.0], [284.0, 4.0], [285.0, 4.0], [287.0, 4.0], [280.0, 4.0], [283.0, 4.0], [281.0, 4.0], [282.0, 4.0], [279.0, 4.0], [272.0, 4.0], [274.0, 4.0], [273.0, 4.0], [275.0, 4.0], [300.0, 5.0], [303.0, 5.0], [296.0, 13.0], [295.0, 5.0], [289.0, 5.0], [290.0, 5.0], [291.0, 5.0], [288.0, 4.0], [302.0, 6.0], [301.0, 4.0], [299.0, 5.0], [298.0, 5.0], [297.0, 5.0], [294.0, 6.0], [292.0, 10.0], [293.0, 5.0], [306.0, 6.0], [304.0, 7.0], [305.0, 8.0], [312.0, 18.0], [319.0, 16.0], [313.0, 11.0], [318.0, 16.0], [316.0, 5.0], [317.0, 47.0], [307.0, 6.0], [315.0, 10.0], [314.0, 18.0], [311.0, 8.0], [310.0, 13.0], [309.0, 6.0], [308.0, 5.0], [323.0, 11.0], [320.0, 12.0], [324.0, 5.0], [325.0, 51.0], [321.0, 11.0], [322.0, 14.5], [326.0, 6.0], [328.0, 6.0], [327.0, 5.0], [330.0, 14.0], [331.0, 33.0], [329.0, 16.0], [335.0, 9.0], [334.0, 32.5], [332.0, 6.0], [333.0, 14.0], [339.0, 13.0], [343.0, 13.0], [342.0, 25.0], [341.0, 22.0], [346.0, 27.0], [345.0, 10.0], [337.0, 33.0], [344.0, 20.0], [351.0, 16.0], [350.0, 23.0], [348.0, 31.0], [336.0, 16.0], [347.0, 29.0], [338.0, 16.0], [367.0, 11.0], [362.0, 14.0], [363.0, 10.0], [353.0, 44.0], [352.0, 14.0], [356.0, 19.0], [359.0, 26.0], [358.0, 11.0], [354.0, 28.0], [355.0, 43.0], [364.0, 15.0], [361.0, 15.0], [360.0, 13.0], [381.0, 19.0], [370.0, 32.0], [369.0, 41.0], [382.0, 14.0], [383.0, 15.0], [368.0, 113.0], [377.0, 11.0], [379.0, 14.0], [378.0, 17.0], [373.0, 21.0], [372.0, 11.0], [376.0, 13.0], [380.0, 29.0], [371.0, 55.0], [398.0, 37.0], [393.0, 21.0], [394.0, 20.0], [392.0, 9.0], [399.0, 11.0], [384.0, 34.0], [386.0, 21.0], [395.0, 42.0], [397.0, 18.0], [396.0, 41.0], [391.0, 16.0], [390.0, 13.0], [388.0, 14.0], [389.0, 20.0], [400.0, 16.0], [407.0, 18.0], [411.0, 11.0], [401.0, 12.0], [405.0, 18.0], [404.0, 37.0], [403.0, 21.0], [410.0, 19.0], [412.0, 11.0], [413.0, 12.0], [414.0, 15.0], [406.0, 57.0], [429.0, 30.0], [416.0, 26.0], [419.0, 6.0], [426.0, 20.0], [427.0, 27.0], [428.0, 49.0], [430.0, 21.0], [424.0, 38.0], [422.0, 17.0], [432.0, 22.0], [437.0, 34.0], [434.0, 39.0], [436.0, 35.0], [438.0, 39.0], [452.0, 44.0], [450.0, 62.0], [461.0, 33.0], [459.0, 50.0], [454.0, 36.0], [453.0, 43.0], [464.0, 61.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 464.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.766666666666667, "minX": 1.59843024E12, "maxY": 243.43333333333334, "series": [{"data": [[1.59843048E12, 240.86666666666667], [1.5984321E12, 237.41666666666666], [1.59843348E12, 222.76666666666668], [1.5984315E12, 238.16666666666666], [1.59843168E12, 235.76666666666668], [1.5984339E12, 165.48333333333332], [1.59843108E12, 238.03333333333333], [1.59843288E12, 233.81666666666666], [1.59843192E12, 235.73333333333332], [1.59843366E12, 225.81666666666666], [1.59843132E12, 236.76666666666668], [1.59843264E12, 232.11666666666667], [1.5984309E12, 242.23333333333332], [1.5984303E12, 230.48333333333332], [1.59843306E12, 238.3], [1.59843144E12, 234.0], [1.59843252E12, 237.45], [1.59843084E12, 236.33333333333334], [1.59843246E12, 238.96666666666667], [1.59843312E12, 236.71666666666667], [1.59843294E12, 237.76666666666668], [1.59843042E12, 240.06666666666666], [1.59843204E12, 237.08333333333334], [1.59843354E12, 223.3], [1.5984327E12, 232.93333333333334], [1.59843066E12, 236.26666666666668], [1.59843228E12, 243.43333333333334], [1.5984333E12, 223.18333333333334], [1.59843024E12, 60.9], [1.59843186E12, 235.21666666666667], [1.59843372E12, 222.78333333333333], [1.59843126E12, 234.6], [1.5984324E12, 233.96666666666667], [1.59843318E12, 224.06666666666666], [1.5984318E12, 235.11666666666667], [1.59843378E12, 220.4], [1.59843138E12, 238.46666666666667], [1.59843258E12, 234.18333333333334], [1.59843078E12, 237.83333333333334], [1.59843162E12, 235.66666666666666], [1.59843396E12, 9.766666666666667], [1.59843102E12, 236.73333333333332], [1.5984312E12, 232.86666666666667], [1.59843276E12, 232.48333333333332], [1.5984306E12, 238.21666666666667], [1.59843222E12, 239.06666666666666], [1.59843336E12, 222.11666666666667], [1.59843114E12, 239.03333333333333], [1.59843282E12, 232.38333333333333], [1.59843054E12, 239.41666666666666], [1.59843072E12, 236.93333333333334], [1.59843234E12, 238.38333333333333], [1.59843324E12, 227.51666666666668], [1.59843174E12, 235.26666666666668], [1.59843384E12, 219.18333333333334], [1.59843096E12, 240.95], [1.598433E12, 235.33333333333334], [1.59843036E12, 240.25], [1.59843198E12, 236.25], [1.5984336E12, 222.08333333333334], [1.59843216E12, 237.0], [1.59843342E12, 222.03333333333333], [1.59843156E12, 235.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59843396E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.766666666666667, "minX": 1.59843024E12, "maxY": 243.43333333333334, "series": [{"data": [[1.59843048E12, 240.8], [1.5984321E12, 237.43333333333334], [1.59843348E12, 222.78333333333333], [1.5984315E12, 238.18333333333334], [1.59843168E12, 235.53333333333333], [1.5984339E12, 165.5], [1.59843108E12, 238.93333333333334], [1.59843288E12, 233.9], [1.59843192E12, 235.71666666666667], [1.59843366E12, 225.85], [1.59843132E12, 236.76666666666668], [1.59843264E12, 232.11666666666667], [1.5984309E12, 241.5], [1.5984303E12, 230.45], [1.59843306E12, 238.3], [1.59843144E12, 234.0], [1.59843252E12, 236.88333333333333], [1.59843084E12, 236.31666666666666], [1.59843246E12, 238.93333333333334], [1.59843312E12, 235.26666666666668], [1.59843294E12, 237.75], [1.59843042E12, 240.06666666666666], [1.59843204E12, 237.06666666666666], [1.59843354E12, 223.3], [1.5984327E12, 232.9], [1.59843066E12, 236.26666666666668], [1.59843228E12, 243.43333333333334], [1.5984333E12, 223.25], [1.59843024E12, 60.9], [1.59843186E12, 235.25], [1.59843372E12, 222.78333333333333], [1.59843126E12, 234.6], [1.5984324E12, 233.96666666666667], [1.59843318E12, 225.51666666666668], [1.5984318E12, 235.08333333333334], [1.59843378E12, 220.36666666666667], [1.59843138E12, 238.48333333333332], [1.59843258E12, 234.76666666666668], [1.59843078E12, 238.08333333333334], [1.59843162E12, 236.01666666666668], [1.59843396E12, 9.766666666666667], [1.59843102E12, 235.8], [1.5984312E12, 232.86666666666667], [1.59843276E12, 232.46666666666667], [1.5984306E12, 238.33333333333334], [1.59843222E12, 239.06666666666666], [1.59843336E12, 222.13333333333333], [1.59843114E12, 239.05], [1.59843282E12, 232.36666666666667], [1.59843054E12, 239.33333333333334], [1.59843072E12, 236.68333333333334], [1.59843234E12, 238.38333333333333], [1.59843324E12, 227.43333333333334], [1.59843174E12, 235.5], [1.59843384E12, 219.2], [1.59843096E12, 241.68333333333334], [1.598433E12, 235.35], [1.59843036E12, 240.28333333333333], [1.59843198E12, 236.3], [1.5984336E12, 222.05], [1.59843216E12, 237.0], [1.59843342E12, 222.01666666666668], [1.59843156E12, 235.25]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.59843396E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 4.883333333333334, "minX": 1.59843024E12, "maxY": 121.71666666666667, "series": [{"data": [[1.59843048E12, 120.43333333333334], [1.5984321E12, 118.71666666666667], [1.59843348E12, 111.38333333333334], [1.5984315E12, 119.08333333333333], [1.59843168E12, 117.88333333333334], [1.5984339E12, 82.75], [1.59843108E12, 119.33333333333333], [1.59843288E12, 116.93333333333334], [1.59843192E12, 117.86666666666666], [1.59843366E12, 112.91666666666667], [1.59843132E12, 118.38333333333334], [1.59843264E12, 116.06666666666666], [1.5984309E12, 121.11666666666666], [1.5984303E12, 115.23333333333333], [1.59843306E12, 119.15], [1.59843144E12, 117.0], [1.59843252E12, 118.73333333333333], [1.59843084E12, 118.16666666666667], [1.59843246E12, 119.48333333333333], [1.59843312E12, 118.06666666666666], [1.59843294E12, 118.88333333333334], [1.59843042E12, 120.03333333333333], [1.59843204E12, 118.53333333333333], [1.59843354E12, 111.65], [1.5984327E12, 116.46666666666667], [1.59843066E12, 118.15], [1.59843228E12, 121.71666666666667], [1.5984333E12, 111.61666666666666], [1.59843024E12, 30.45], [1.59843186E12, 117.61666666666666], [1.59843372E12, 111.41666666666667], [1.59843126E12, 117.3], [1.5984324E12, 116.98333333333333], [1.59843318E12, 112.36666666666666], [1.5984318E12, 117.55], [1.59843378E12, 110.2], [1.59843138E12, 119.23333333333333], [1.59843258E12, 117.08333333333333], [1.59843078E12, 118.95], [1.59843162E12, 117.88333333333334], [1.59843396E12, 4.883333333333334], [1.59843102E12, 118.05], [1.5984312E12, 116.43333333333334], [1.59843276E12, 116.23333333333333], [1.5984306E12, 119.11666666666666], [1.59843222E12, 119.53333333333333], [1.59843336E12, 111.06666666666666], [1.59843114E12, 119.51666666666667], [1.59843282E12, 116.18333333333334], [1.59843054E12, 119.7], [1.59843072E12, 118.43333333333334], [1.59843234E12, 119.21666666666667], [1.59843324E12, 113.73333333333333], [1.59843174E12, 117.63333333333334], [1.59843384E12, 109.58333333333333], [1.59843096E12, 120.46666666666667], [1.598433E12, 117.66666666666667], [1.59843036E12, 120.13333333333334], [1.59843198E12, 118.13333333333334], [1.5984336E12, 111.03333333333333], [1.59843216E12, 118.5], [1.59843342E12, 111.01666666666667], [1.59843156E12, 117.75]], "isOverall": false, "label": "Open Main Page-success", "isController": false}, {"data": [[1.59843048E12, 120.36666666666666], [1.5984321E12, 118.71666666666667], [1.59843348E12, 111.4], [1.5984315E12, 119.1], [1.59843168E12, 117.65], [1.5984339E12, 82.75], [1.59843108E12, 119.6], [1.59843288E12, 116.96666666666667], [1.59843192E12, 117.85], [1.59843366E12, 112.93333333333334], [1.59843132E12, 118.38333333333334], [1.59843264E12, 116.05], [1.5984309E12, 120.38333333333334], [1.5984303E12, 115.21666666666667], [1.59843306E12, 119.15], [1.59843144E12, 117.0], [1.59843252E12, 118.15], [1.59843084E12, 118.15], [1.59843246E12, 119.45], [1.59843312E12, 117.2], [1.59843294E12, 118.86666666666666], [1.59843042E12, 120.03333333333333], [1.59843204E12, 118.53333333333333], [1.59843354E12, 111.65], [1.5984327E12, 116.43333333333334], [1.59843066E12, 118.11666666666666], [1.59843228E12, 121.71666666666667], [1.5984333E12, 111.63333333333334], [1.59843024E12, 30.45], [1.59843186E12, 117.63333333333334], [1.59843372E12, 111.36666666666666], [1.59843126E12, 117.3], [1.5984324E12, 116.98333333333333], [1.59843318E12, 113.15], [1.5984318E12, 117.53333333333333], [1.59843378E12, 110.16666666666667], [1.59843138E12, 119.25], [1.59843258E12, 117.68333333333334], [1.59843078E12, 119.13333333333334], [1.59843162E12, 118.13333333333334], [1.59843396E12, 4.883333333333334], [1.59843102E12, 117.75], [1.5984312E12, 116.43333333333334], [1.59843276E12, 116.23333333333333], [1.5984306E12, 119.21666666666667], [1.59843222E12, 119.53333333333333], [1.59843336E12, 111.06666666666666], [1.59843114E12, 119.53333333333333], [1.59843282E12, 116.18333333333334], [1.59843054E12, 119.63333333333334], [1.59843072E12, 118.25], [1.59843234E12, 119.16666666666667], [1.59843324E12, 113.7], [1.59843174E12, 117.86666666666666], [1.59843384E12, 109.61666666666666], [1.59843096E12, 121.21666666666667], [1.598433E12, 117.68333333333334], [1.59843036E12, 120.15], [1.59843198E12, 118.16666666666667], [1.5984336E12, 111.01666666666667], [1.59843216E12, 118.5], [1.59843342E12, 111.0], [1.59843156E12, 117.5]], "isOverall": false, "label": "Make an order-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59843396E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.766666666666667, "minX": 1.59843024E12, "maxY": 243.43333333333334, "series": [{"data": [[1.59843048E12, 240.8], [1.5984321E12, 237.43333333333334], [1.59843348E12, 222.78333333333333], [1.5984315E12, 238.18333333333334], [1.59843168E12, 235.53333333333333], [1.5984339E12, 165.5], [1.59843108E12, 238.93333333333334], [1.59843288E12, 233.9], [1.59843192E12, 235.71666666666667], [1.59843366E12, 225.85], [1.59843132E12, 236.76666666666668], [1.59843264E12, 232.11666666666667], [1.5984309E12, 241.5], [1.5984303E12, 230.45], [1.59843306E12, 238.3], [1.59843144E12, 234.0], [1.59843252E12, 236.88333333333333], [1.59843084E12, 236.31666666666666], [1.59843246E12, 238.93333333333334], [1.59843312E12, 235.26666666666668], [1.59843294E12, 237.75], [1.59843042E12, 240.06666666666666], [1.59843204E12, 237.06666666666666], [1.59843354E12, 223.3], [1.5984327E12, 232.9], [1.59843066E12, 236.26666666666668], [1.59843228E12, 243.43333333333334], [1.5984333E12, 223.25], [1.59843024E12, 60.9], [1.59843186E12, 235.25], [1.59843372E12, 222.78333333333333], [1.59843126E12, 234.6], [1.5984324E12, 233.96666666666667], [1.59843318E12, 225.51666666666668], [1.5984318E12, 235.08333333333334], [1.59843378E12, 220.36666666666667], [1.59843138E12, 238.48333333333332], [1.59843258E12, 234.76666666666668], [1.59843078E12, 238.08333333333334], [1.59843162E12, 236.01666666666668], [1.59843396E12, 9.766666666666667], [1.59843102E12, 235.8], [1.5984312E12, 232.86666666666667], [1.59843276E12, 232.46666666666667], [1.5984306E12, 238.33333333333334], [1.59843222E12, 239.06666666666666], [1.59843336E12, 222.13333333333333], [1.59843114E12, 239.05], [1.59843282E12, 232.36666666666667], [1.59843054E12, 239.33333333333334], [1.59843072E12, 236.68333333333334], [1.59843234E12, 238.38333333333333], [1.59843324E12, 227.43333333333334], [1.59843174E12, 235.5], [1.59843384E12, 219.2], [1.59843096E12, 241.68333333333334], [1.598433E12, 235.35], [1.59843036E12, 240.28333333333333], [1.59843198E12, 236.3], [1.5984336E12, 222.05], [1.59843216E12, 237.0], [1.59843342E12, 222.01666666666668], [1.59843156E12, 235.25]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.59843396E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

